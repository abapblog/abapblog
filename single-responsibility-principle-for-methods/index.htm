<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="pingback" href="https://clean-swift.com/xmlrpc.php">
<meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />

	<!-- This site is optimized with the Yoast SEO plugin v17.3 - https://yoast.com/wordpress/plugins/seo/ -->
	<title>Single Responsibility Principle for Methods - Clean Swift</title>
	<meta name="description" content="Learn how to apply the Single Responsibility Principle to your Swift iOS apps using protocols and delegation." />
	<link rel="canonical" href="https://clean-swift.com/single-responsibility-principle-for-methods/" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="Single Responsibility Principle for Methods - Clean Swift" />
	<meta property="og:description" content="Learn how to apply the Single Responsibility Principle to your Swift iOS apps using protocols and delegation." />
	<meta property="og:url" content="https://clean-swift.com/single-responsibility-principle-for-methods/" />
	<meta property="og:site_name" content="Clean Swift" />
	<meta property="article:published_time" content="2016-03-15T09:30:21+00:00" />
	<meta property="article:modified_time" content="2016-03-26T22:30:30+00:00" />
	<meta property="og:image" content="https://clean-swift.com/wp-content/uploads/2017/07/Swift_Facebook.png" />
	<meta property="og:image:width" content="1200" />
	<meta property="og:image:height" content="630" />
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:creator" content="@rayvinly" />
	<meta name="twitter:site" content="@rayvinly" />
	<meta name="twitter:label1" content="Written by" />
	<meta name="twitter:data1" content="Raymond" />
	<meta name="twitter:label2" content="Est. reading time" />
	<meta name="twitter:data2" content="12 minutes" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://clean-swift.com/#website","url":"https://clean-swift.com/","name":"Clean Swift","description":"Clean Architecture + TDD. Code less. Test more.","publisher":{"@id":"https://clean-swift.com/#/schema/person/fb9353517d60c10e724f65006d451d2a"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://clean-swift.com/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https://clean-swift.com/single-responsibility-principle-for-methods/#webpage","url":"https://clean-swift.com/single-responsibility-principle-for-methods/","name":"Single Responsibility Principle for Methods - Clean Swift","isPartOf":{"@id":"https://clean-swift.com/#website"},"datePublished":"2016-03-15T09:30:21+00:00","dateModified":"2016-03-26T22:30:30+00:00","description":"Learn how to apply the\u00a0Single Responsibility Principle to your Swift iOS apps using protocols and delegation.","breadcrumb":{"@id":"https://clean-swift.com/single-responsibility-principle-for-methods/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://clean-swift.com/single-responsibility-principle-for-methods/"]}]},{"@type":"BreadcrumbList","@id":"https://clean-swift.com/single-responsibility-principle-for-methods/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://clean-swift.com/"},{"@type":"ListItem","position":2,"name":"Blog","item":"https://clean-swift.com/blog/"},{"@type":"ListItem","position":3,"name":"Single Responsibility Principle for Methods"}]},{"@type":"Article","@id":"https://clean-swift.com/single-responsibility-principle-for-methods/#article","isPartOf":{"@id":"https://clean-swift.com/single-responsibility-principle-for-methods/#webpage"},"author":{"@id":"https://clean-swift.com/#/schema/person/fb9353517d60c10e724f65006d451d2a"},"headline":"Single Responsibility Principle for Methods","datePublished":"2016-03-15T09:30:21+00:00","dateModified":"2016-03-26T22:30:30+00:00","mainEntityOfPage":{"@id":"https://clean-swift.com/single-responsibility-principle-for-methods/#webpage"},"wordCount":1781,"commentCount":3,"publisher":{"@id":"https://clean-swift.com/#/schema/person/fb9353517d60c10e724f65006d451d2a"},"keywords":["principle","Single Responsibility","Single Responsibility Principle"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https://clean-swift.com/single-responsibility-principle-for-methods/#respond"]}]},{"@type":["Person","Organization"],"@id":"https://clean-swift.com/#/schema/person/fb9353517d60c10e724f65006d451d2a","name":"Raymond","image":{"@type":"ImageObject","@id":"https://clean-swift.com/#personlogo","inLanguage":"en-US","url":"https://secure.gravatar.com/avatar/8558c41ce3a589cedbe26b22aab2deee?s=96&d=mm&r=g","contentUrl":"https://secure.gravatar.com/avatar/8558c41ce3a589cedbe26b22aab2deee?s=96&d=mm&r=g","caption":"Raymond"},"logo":{"@id":"https://clean-swift.com/#personlogo"},"description":"I've been developing in iOS since the iPhone debuted, jumped on Swift when it was announced. Writing well-tested apps with a clean architecture has been my goal.","sameAs":["http://clean-swift.com"]}]}</script>
	<!-- / Yoast SEO plugin. -->


<link rel='dns-prefetch' href='//js.stripe.com' />
<link rel='dns-prefetch' href='//secure.gravatar.com' />
<link rel='dns-prefetch' href='//checkout.stripe.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel='dns-prefetch' href='//v0.wordpress.com' />
<link rel="alternate" type="application/rss+xml" title="Clean Swift &raquo; Feed" href="https://clean-swift.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Clean Swift &raquo; Comments Feed" href="https://clean-swift.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Clean Swift &raquo; Single Responsibility Principle for Methods Comments Feed" href="https://clean-swift.com/single-responsibility-principle-for-methods/feed/" />
		<!-- This site uses the Google Analytics by MonsterInsights plugin v8.1.0 - Using Analytics tracking - https://www.monsterinsights.com/ -->
							<script src="//www.googletagmanager.com/gtag/js?id=UA-2234863-10"  type="text/javascript" data-cfasync="false" async></script>
			<script type="text/javascript" data-cfasync="false">
				var mi_version = '8.1.0';
				var mi_track_user = true;
				var mi_no_track_reason = '';
				
								var disableStrs = [
															'ga-disable-UA-2234863-10',
									];

				/* Function to detect opted out users */
				function __gtagTrackerIsOptedOut() {
					for ( var index = 0; index < disableStrs.length; index++ ) {
						if ( document.cookie.indexOf( disableStrs[ index ] + '=true' ) > -1 ) {
							return true;
						}
					}

					return false;
				}

				/* Disable tracking if the opt-out cookie exists. */
				if ( __gtagTrackerIsOptedOut() ) {
					for ( var index = 0; index < disableStrs.length; index++ ) {
						window[ disableStrs[ index ] ] = true;
					}
				}

				/* Opt-out function */
				function __gtagTrackerOptout() {
					for ( var index = 0; index < disableStrs.length; index++ ) {
						document.cookie = disableStrs[ index ] + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
						window[ disableStrs[ index ] ] = true;
					}
				}

				if ( 'undefined' === typeof gaOptout ) {
					function gaOptout() {
						__gtagTrackerOptout();
					}
				}
								window.dataLayer = window.dataLayer || [];

				window.MonsterInsightsDualTracker = {
					helpers: {},
					trackers: {},
				};
				if ( mi_track_user ) {
					function __gtagDataLayer() {
						dataLayer.push( arguments );
					}

					function __gtagTracker( type, name, parameters ) {
						if ( type === 'event' ) {
							
															parameters.send_to = monsterinsights_frontend.ua;
								__gtagDataLayer.apply( null, arguments );
													} else {
							__gtagDataLayer.apply( null, arguments );
						}
					}
					__gtagTracker( 'js', new Date() );
					__gtagTracker( 'set', {
						'developer_id.dZGIzZG' : true,
											} );
															__gtagTracker( 'config', 'UA-2234863-10', {"forceSSL":"true"} );
										window.gtag = __gtagTracker;										(
						function () {
							/* https://developers.google.com/analytics/devguides/collection/analyticsjs/ */
							/* ga and __gaTracker compatibility shim. */
							var noopfn = function () {
								return null;
							};
							var newtracker = function () {
								return new Tracker();
							};
							var Tracker = function () {
								return null;
							};
							var p = Tracker.prototype;
							p.get = noopfn;
							p.set = noopfn;
							p.send = function (){
								var args = Array.prototype.slice.call(arguments);
								args.unshift( 'send' );
								__gaTracker.apply(null, args);
							};
							var __gaTracker = function () {
								var len = arguments.length;
								if ( len === 0 ) {
									return;
								}
								var f = arguments[len - 1];
								if ( typeof f !== 'object' || f === null || typeof f.hitCallback !== 'function' ) {
									if ( 'send' === arguments[0] ) {
										var hitConverted, hitObject = false, action;
										if ( 'event' === arguments[1] ) {
											if ( 'undefined' !== typeof arguments[3] ) {
												hitObject = {
													'eventAction': arguments[3],
													'eventCategory': arguments[2],
													'eventLabel': arguments[4],
													'value': arguments[5] ? arguments[5] : 1,
												}
											}
										}
										if ( 'pageview' === arguments[1] ) {
											if ( 'undefined' !== typeof arguments[2] ) {
												hitObject = {
													'eventAction': 'page_view',
													'page_path' : arguments[2],
												}
											}
										}
										if ( typeof arguments[2] === 'object' ) {
											hitObject = arguments[2];
										}
										if ( typeof arguments[5] === 'object' ) {
											Object.assign( hitObject, arguments[5] );
										}
										if ( 'undefined' !== typeof arguments[1].hitType ) {
											hitObject = arguments[1];
											if ( 'pageview' === hitObject.hitType ) {
												hitObject.eventAction = 'page_view';
											}
										}
										if ( hitObject ) {
											action = 'timing' === arguments[1].hitType ? 'timing_complete' : hitObject.eventAction;
											hitConverted = mapArgs( hitObject );
											__gtagTracker( 'event', action, hitConverted );
										}
									}
									return;
								}

								function mapArgs( args ) {
									var arg, hit = {};
									var gaMap = {
										'eventCategory': 'event_category',
										'eventAction': 'event_action',
										'eventLabel': 'event_label',
										'eventValue': 'event_value',
										'nonInteraction': 'non_interaction',
										'timingCategory': 'event_category',
										'timingVar': 'name',
										'timingValue': 'value',
										'timingLabel': 'event_label',
										'page' : 'page_path',
										'location' : 'page_location',
										'title' : 'page_title',
									};
									for ( arg in args ) {
																				if ( ! ( ! args.hasOwnProperty(arg) || ! gaMap.hasOwnProperty(arg) ) ) {
											hit[gaMap[arg]] = args[arg];
										} else {
											hit[arg] = args[arg];
										}
									}
									return hit;
								}

								try {
									f.hitCallback();
								} catch ( ex ) {
								}
							};
							__gaTracker.create = newtracker;
							__gaTracker.getByName = newtracker;
							__gaTracker.getAll = function () {
								return [];
							};
							__gaTracker.remove = noopfn;
							__gaTracker.loaded = true;
							window['__gaTracker'] = __gaTracker;
						}
					)();
									} else {
										console.log( "" );
					( function () {
							function __gtagTracker() {
								return null;
							}
							window['__gtagTracker'] = __gtagTracker;
							window['gtag'] = __gtagTracker;
					} )();
									}
			</script>
				<!-- / Google Analytics by MonsterInsights -->
				<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/clean-swift.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.8.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='urvanov_syntax_highlighter-css'  href='https://clean-swift.com/wp-content/plugins/urvanov-syntax-highlighter/css/min/urvanov_syntax_highlighter.min.css?ver=2.8.26' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-tomorrow-night-css'  href='https://clean-swift.com/wp-content/plugins/urvanov-syntax-highlighter/themes/tomorrow-night/tomorrow-night.css?ver=2.8.26' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='https://clean-swift.com/wp-content/plugins/urvanov-syntax-highlighter/fonts/monaco.css?ver=2.8.26' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-library-css'  href='https://clean-swift.com/wp-includes/css/dist/block-library/style.min.css?ver=5.8.1' type='text/css' media='all' />
<style id='wp-block-library-inline-css' type='text/css'>
.has-text-align-justify{text-align:justify;}
</style>
<link rel='stylesheet' id='mediaelement-css'  href='https://clean-swift.com/wp-includes/js/mediaelement/mediaelementplayer-legacy.min.css?ver=4.2.16' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css'  href='https://clean-swift.com/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-components-css'  href='https://clean-swift.com/wp-includes/css/dist/components/style.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-editor-css'  href='https://clean-swift.com/wp-includes/css/dist/block-editor/style.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-nux-css'  href='https://clean-swift.com/wp-includes/css/dist/nux/style.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-reusable-blocks-css'  href='https://clean-swift.com/wp-includes/css/dist/reusable-blocks/style.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-editor-css'  href='https://clean-swift.com/wp-includes/css/dist/editor/style.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='gumroad_block-cgb-style-css-css'  href='https://clean-swift.com/wp-content/plugins/gumroad/dist/blocks.style.build.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='stripe-checkout-button-css'  href='https://checkout.stripe.com/v3/checkout/button.css' type='text/css' media='all' />
<link rel='stylesheet' id='simpay-public-css'  href='https://clean-swift.com/wp-content/plugins/stripe/includes/core/assets/css/simpay-public.min.css?ver=2.6.3' type='text/css' media='all' />
<link rel='stylesheet' id='graphy-font-css'  href='https://fonts.googleapis.com/css?family=Source+Serif+Pro%3A400%7CLora%3A400%2C400italic%2C700&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='https://clean-swift.com/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='normalize-css'  href='https://clean-swift.com/wp-content/themes/graphy/css/normalize.css?ver=4.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='graphy-style-css'  href='https://clean-swift.com/wp-content/themes/graphy/style.css?ver=2.1.2' type='text/css' media='all' />
<link rel='stylesheet' id='social-logos-css'  href='https://clean-swift.com/wp-content/plugins/jetpack/_inc/social-logos/social-logos.min.css?ver=10.2' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='https://clean-swift.com/wp-content/plugins/jetpack/css/jetpack.css?ver=10.2' type='text/css' media='all' />
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.0' id='jquery-core-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' id='urvanov_syntax_highlighter_js-js-extra'>
/* <![CDATA[ */
var UrvanovSyntaxHighlighterSyntaxSettings = {"version":"2.8.26","is_admin":"0","ajaxurl":"https:\/\/clean-swift.com\/wp-admin\/admin-ajax.php","prefix":"urvanov-syntax-highlighter-","setting":"urvanov-syntax-highlighter-setting","selected":"urvanov-syntax-highlighter-setting-selected","changed":"urvanov-syntax-highlighter-setting-changed","special":"urvanov-syntax-highlighter-setting-special","orig_value":"data-orig-value","debug":""};
var UrvanovSyntaxHighlighterSyntaxStrings = {"copy":"Copied to the clipboard","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/urvanov-syntax-highlighter/js/min/urvanov_syntax_highlighter.min.js?ver=2.8.26' id='urvanov_syntax_highlighter_js-js'></script>
<script type='text/javascript' id='monsterinsights-frontend-script-js-extra'>
/* <![CDATA[ */
var monsterinsights_frontend = {"js_events_tracking":"true","download_extensions":"doc,pdf,ppt,zip,xls,docx,pptx,xlsx","inbound_paths":"[]","home_url":"https:\/\/clean-swift.com","hash_tracking":"false","ua":"UA-2234863-10","v4_id":""};
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/google-analytics-for-wordpress/assets/js/frontend-gtag.min.js?ver=8.1.0' id='monsterinsights-frontend-script-js'></script>
<link rel="https://api.w.org/" href="https://clean-swift.com/wp-json/" /><link rel="alternate" type="application/json" href="https://clean-swift.com/wp-json/wp/v2/posts/140" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://clean-swift.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://clean-swift.com/wp-includes/wlwmanifest.xml" /> 
<link rel='shortlink' href='https://wp.me/p6v6Iz-2g' />
<link rel="alternate" type="application/json+oembed" href="https://clean-swift.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fclean-swift.com%2Fsingle-responsibility-principle-for-methods%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://clean-swift.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fclean-swift.com%2Fsingle-responsibility-principle-for-methods%2F&#038;format=xml" />
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com">
	<link href='https://fonts.googleapis.com/css2?display=swap&family=Noto+Sans:wght@400;700' rel='stylesheet'><meta name="viewport" content="width=device-width, initial-scale=1" /><style type='text/css'>img#wpstats{display:none}</style>
			<style type="text/css">
		/* Colors */
				
				/* Logo */
			.site-logo {
											}
						</style>
	<link rel="icon" href="https://clean-swift.com/wp-content/uploads/2015/08/cropped-Swift-32x32.png" sizes="32x32" />
<link rel="icon" href="https://clean-swift.com/wp-content/uploads/2015/08/cropped-Swift-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://clean-swift.com/wp-content/uploads/2015/08/cropped-Swift-180x180.png" />
<meta name="msapplication-TileImage" content="https://clean-swift.com/wp-content/uploads/2015/08/cropped-Swift-270x270.png" />
<link rel="stylesheet" type="text/css" id="wp-custom-css" href="https://clean-swift.com/?custom-css=6280067d25" />	<style id="egf-frontend-styles" type="text/css">
		p {font-family: 'Noto Sans', sans-serif;font-size: 18px;font-style: normal;font-weight: 400;} h1 {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 700;} h2 {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 700;} h3 {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 700;} h4 {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 400;} h5 {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 400;} h6 {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 400;} blockquote {font-family: 'Noto Sans', sans-serif;font-size: 18px;font-style: normal;font-weight: 400;} li {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 400;} ol {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 400;} ul {font-family: 'Noto Sans', sans-serif;font-style: normal;font-weight: 400;} 	</style>
	</head>

<body class="post-template-default single single-post postid-140 single-format-standard no-sidebar footer-4 has-avatars">
<div id="page" class="hfeed site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	<header id="masthead" class="site-header">

		<div class="site-branding">
				<div class="site-logo"><a href="https://clean-swift.com/" rel="home"><img alt="" src="https://clean-swift.com/wp-content/uploads/2015/08/Swift.png" width="60" /></a></div>
				<div class="site-title"><a href="https://clean-swift.com/" rel="home">Clean Swift</a></div>
						<div class="site-description">Clean Architecture + TDD. Code less. Test more.</div>
						</div><!-- .site-branding -->

				<nav id="site-navigation" class="main-navigation">
			<button class="menu-toggle"><span class="menu-text">Menu</span></button>
			<div class="menu-navigation-container"><ul id="menu-navigation" class="menu"><li id="menu-item-347" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-347"><a href="https://clean-swift.com/handbook/">Handbook</a></li>
<li id="menu-item-438" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-438"><a href="https://clean-swift.com/effective-unit-testing/">Testing</a></li>
<li id="menu-item-417" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-417"><a href="https://clean-swift.com/mentorship/">Mentorship</a></li>
<li id="menu-item-400" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-400"><a href="https://clean-swift.com/store/">Store</a></li>
<li id="menu-item-487" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-487"><a href="https://clean-swift.com/consulting/">Services</a></li>
<li id="menu-item-217" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-217"><a href="https://clean-swift.com/work-with-raymond/">Work</a></li>
<li id="menu-item-117" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-117"><a href="https://clean-swift.com/blog/">Blog</a></li>
<li id="menu-item-116" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-116"><a href="https://clean-swift.com/about/">About</a></li>
<li id="menu-item-491" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-491"><a href="http://twitter.com/rayvinly"></a></li>
<li id="menu-item-492" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-492"><a href="https://www.linkedin.com/in/rayvinly"></a></li>
<li id="menu-item-493" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-493"><a href="https://github.com/Clean-Swift"></a></li>
</ul></div>						<form role="search" method="get" class="search-form" action="https://clean-swift.com/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form>					</nav><!-- #site-navigation -->
		
		
	</header><!-- #masthead -->

	<div id="content" class="site-content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main">

		
			
<div class="post-full post-full-summary">
	<article id="post-140" class="post-140 post type-post status-publish format-standard hentry category-uncategorized tag-principle tag-single-responsibility tag-single-responsibility-principle">
		<header class="entry-header">
			<div class="cat-links"><a rel="category tag" href="https://clean-swift.com/category/uncategorized/" class="category category-1">Uncategorized</a></div><!-- .cat-links -->
			<h1 class="entry-title">Single Responsibility Principle for Methods</h1>
				<div class="entry-meta">
		Posted		<span class="posted-on">on		<a href="https://clean-swift.com/single-responsibility-principle-for-methods/" rel="bookmark"><time class="entry-date published updated" datetime="2016-03-15T05:30:21-04:00">March 15, 2016</time></a>		</span>
		<span class="byline">by			<span class="author vcard">
				<a class="url fn n" href="https://clean-swift.com/author/cleanswift/" title="View all posts by Raymond"><span class="author-name">Raymond</span></a>
			</span>
		</span>
					<span class="entry-meta-sep"> / </span>
			<span class="comments-link">
				<a href="https://clean-swift.com/single-responsibility-principle-for-methods/#comments">3 Comments</a>			</span>
			</div><!-- .entry-meta -->
						</header><!-- .entry-header -->

		<div class="entry-content">
			<p>In my <a href="/single-responsibility-principle-for-class/" title="Single Responsibility Principle for Class">last post</a>, you learned what the Single Responsibility Principle is, why it is important, and its benefits. You’re now able to apply SRP at the <em>class level</em>.</p>
<p>Today, I’ll show you how to apply SRP at the <em>method level</em>.</p>
<p>By looking at some practical examples, you’ll learn how to spot potential code smells so that you can refactor your methods into shorter methods. You’ll write shorter methods with each doing just one thing. This’ll make it much easier to write unit tests because the inputs and outputs become obvious. There are also fewer edge cases per method.</p>
<p><span id="more-140"></span></p>
<h2>Class level vs method level</h2>
<p>The original SRP states that:</p>
<blockquote><p>
  Each software module should have one and only one reason to change.
</p></blockquote>
<p>Last time, we treated software module as <strong>class</strong>. This time, we’ll treat software module as <strong>method</strong>.</p>
<p>So, the SRP can be restated as:</p>
<blockquote><p>
  There should never be more than one reason for a method to change.
</p></blockquote>
<h2>What is reason to change?</h2>
<p>Let’s say you have a method M that does several things: A, B, C, and D. Things A and B implement feature X, while things C and D implement feature Y.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca5ee465241935" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func M
{
  A
  B
  C
  D
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5ee465241935-8">8</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">M</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">A</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">B</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-5"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">C</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-6"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">D</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-7"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5ee465241935-8">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>When feature X’s requirements change, you’ll need to modify method M. While doing so, there’s a fair chance you’ll also inadvertently alter feature Y.</p>
<p>Your tests for method M have to cover for all test cases for feature X, feature Y, and a full permutation of both features X and Y. This makes it difficult to write the tests in the first place. They are also more fragile and break when a change is made.</p>
<p>How do you feel when you update feature X and unintentionally change the behavior of Y? You lose confidence in your tests. You keep juggle around in method M, hoping it’ll work again. Eventually, it spirals into a massive method M.</p>
<p>And then no developer, including you who wrote it in the first place, wants to touch method M again.</p>
<p>That’s no way to programmer happiness.</p>
<p>So how can we do better? Extract things C and D into a new method N. Invoke N from M.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca5f7268501639" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func M
{
  A
  B
  N()
}

func N
{
  C
  D
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5f7268501639-13">13</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">M</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">A</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">B</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-5"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-e">N</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-6"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-8"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">N</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-9"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-10"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">C</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-11"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">D</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-12"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5f7268501639-13">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>M still does two things A and B. But it’s ok, because A and B are both necessary to implement feature X. Similarly, things C and D in N implement feature Y.</p>
<p>Now, you could separate A, B, C, D into four methods. But that’s an overkill.</p>
<p>The key is to maintain the <strong>cohesion</strong> between things that change for the same reason, and <strong>decouple</strong> the things that change for different reasons.</p>
<p>As Uncle Bob pointed out in his post on the <a href="http://blog.8thlight.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html" title="The Single Responsibility Principle">Single Responsibility Principle</a>, on the topic of cohesion vs coupling:</p>
<blockquote><p>
  Gather together the things that change for the same reasons. Separate those things that change for different reasons.
</p></blockquote>
<h2>A massive <code>viewDidLoad()</code> method</h2>
<p>I recently ran a workshop and showed this <a href="https://gist.github.com/rayvinly/27e1cc51efc3a1015a1e" title="Massive View Did Load">massive <code>viewDidLoad()</code> method</a> to a group of iOS developers.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca5fa810511091" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
class ViewController: UITableViewController
{
  override func viewDidLoad()
  {
    super.viewDidLoad()
    let currentUser = userManager.loggedInUser()
    if let currentUser = currentUser {
      var followerPosts = [Post]()
      let followers = userManager.followersForUser(currentUser)
      for follower in followers {
        postManager.fetchPostsForUser(follower) { (posts: [Post]?, error: ErrorType?) -&gt; () in
          if let error = error {
            self.showAlert(error)
          } else if let posts = posts {
            followerPosts += posts
          }
          if follower == followers.last! {
            self.recentPosts = Array(followerPosts.sort { $0 &gt; $1 }[0...4])
            self.tableView.reloadData()
            self.loginButton.hidden = true
          }
        }
      }
    } else {
      recentPosts = 
      tableView.reloadData()
      loginButton.hidden = false
    }
  }
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-27">27</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-28">28</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-29">29</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-30">30</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fa810511091-31">31</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-1"><span class="crayon-r">class</span><span class="crayon-h"> </span><span class="crayon-v">ViewController</span><span class="crayon-o">:</span><span class="crayon-t"> UITableViewController</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-m">override</span><span class="crayon-h"> </span><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">viewDidLoad</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">super</span><span class="crayon-sy">.</span><span class="crayon-v ">viewDidLoad</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">currentUser</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">userManager</span><span class="crayon-sy">.</span><span class="crayon-v ">loggedInUser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">currentUser</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">currentUser</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">var</span><span class="crayon-h"> </span><span class="crayon-v">followerPosts</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">Post</span><span class="crayon-sy">]</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">followers</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">userManager</span><span class="crayon-sy">.</span><span class="crayon-v ">followersForUser</span><span class="crayon-sy">(</span><span class="crayon-v">currentUser</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">follower</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">followers</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">postManager</span><span class="crayon-sy">.</span><span class="crayon-v ">fetchPostsForUser</span><span class="crayon-sy">(</span><span class="crayon-v">follower</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">posts</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">Post</span><span class="crayon-sy">]</span><span class="crayon-sy">?</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">error</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">ErrorType</span><span class="crayon-sy">?</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">in</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">error</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">error</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v ">showAlert</span><span class="crayon-sy">(</span><span class="crayon-v">error</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">posts</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">posts</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">followerPosts</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-v">posts</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">follower</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-v">followers</span><span class="crayon-sy">.</span><span class="crayon-v ">last</span><span class="crayon-o">!</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v ">recentPosts</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e ">Array</span><span class="crayon-sy">(</span><span class="crayon-v">followerPosts</span><span class="crayon-sy">.</span><span class="crayon-v ">sort</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">$</span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">$</span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-o">...</span><span class="crayon-cn">4</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v ">tableView</span><span class="crayon-sy">.</span><span class="crayon-v ">reloadData</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v ">loginButton</span><span class="crayon-sy">.</span><span class="crayon-v ">hidden</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">true</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">recentPosts</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">tableView</span><span class="crayon-sy">.</span><span class="crayon-v ">reloadData</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">loginButton</span><span class="crayon-sy">.</span><span class="crayon-v ">hidden</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">false</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-29"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-30"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fa810511091-31">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0022 seconds] -->
<p></p>
<p>How many things does this <code>viewDidLoad()</code> method do?</p>
<p>In short, when the view finishes loading, it tries to show the 5 most recent posts of a user’s followers. If the user isn’t logged in, it shows a login button.</p>
<p>Let’s break it down into bullet points:</p>
<ul>
<li>When the view finishes loading</li>
<li>5 posts</li>
<li>Sort posts by most recent first</li>
<li>Fetch posts over the network</li>
<li>Get the currently logged in user</li>
<li>Get the user’s followers</li>
<li>Show a login button if logged out</li>
</ul>
<p>This <code>viewDidLoad()</code> method <em>massively</em> violates the SRP.</p>
<p>If you want to see how I break down this massive <code>viewDidLoad()</code> method into shorter methods, you can subscribe below to find out the details of future workshops.</p>
<!-- Begin MailChimp Signup Form -->
<div id="mc_embed_signup">
  <form action="//clean-swift.us6.list-manage.com/subscribe/post?u=e6eeee7417bb2a227470a5624&amp;id=62e21e3683" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
	<div id="mc_embed_signup_scroll">
	  <h2>Get the Clean Swift Xcode Templates</h2>
	  <p>Join over 15,000 developers and subscribe to get my Xcode templates. Learn how to apply the VIP cycle to your projects. Extract business and presentation logic into interactor and presenter. Route to other scenes and pass data. Write fast, maintainable unit tests. Be confident making changes.
	  </p>
	  <div class="mc-field-group">
		<input type="text" value="" name="FNAME" placeholder="Your first name" class="required name" id="mce-FNAME">
	  </div>
	  <div class="mc-field-group">
		<input type="email" value="" name="EMAIL" placeholder="Your email" class="required email" id="mce-EMAIL">
	  </div>
	  <div id="mce-responses" class="clear">
		<div class="response" id="mce-error-response" style="display:none"></div>
		<div class="response" id="mce-success-response" style="display:none"></div>
	  </div>
	  <div style="position: absolute; left: -5000px;" aria-hidden="true">
		<input type="text" name="b_e6eeee7417bb2a227470a5624_62e21e3683" tabindex="-1" value="">
	  </div>
	  <div class="clear">
		<input type="submit" value="Download Xcode Templates" name="subscribe" id="mc-embedded-subscribe" class="button">
	  </div>
	  <p class="footnote">I promise I'll never send you spam. You can unsubscribe at any time.</p>
</div>
  </form>
</div>
<script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script>
<script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<h2>Spotting keywords in feature spec for multiple responsibilities</h2>
<p>When you look at a feature requirement, it is often useful to keep an eye out for some keywords that can give you clues into some potential code smells.</p>
<p>It should XXX <strong>and/or</strong> XXX.</p>
<ul>
<li>The <code>fetchPosts()</code> method should check the login status <strong>and</strong> fetch posts <strong>and</strong> parse JSON data into post objects.</li>
</ul>
<p>It should XXX <strong>when</strong> XXX.</p>
<ul>
<li>The <code>fetchPosts()</code> method should parse JSON data into post objects <strong>when</strong> it fetches posts.</li>
</ul>
<p><strong>If</strong> XXX, it should do XXX.</p>
<ul>
<li><strong>If</strong> the user is logged in, the <code>fetchPosts()</code> method should fetch posts. <strong>If</strong> it successfully fetches posts, it should parse JSON data into posts objects.</li>
</ul>
<p>The client can specify a feature requirement in any of these three versions. If you pay attention to  the keywords before you begin to write the code, it’ll help you see multiple responsibilities from the beginning so you don’t end up writing massive methods.</p>
<h2>Potential code smells to watch out for refactoring opportunities</h2>
<p>For existing code, you can also detect potential code smells by noticing specific language constructs and how they are used.</p>
<p>Let’s consider the following <code>accelerate()</code> method for a <code>Car</code>.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca5fc793724681" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
class Car
{
  func accelerate()
  {
    guard engine.state == .Start &amp;&amp; battery.hasCharge else { return }
    switch accelerator.state {
    case .Pressed:
      while accelerator.duration &gt; 0.0 {
        if engine.state == .Start &amp;&amp; battery.hasCharge &amp;&amp; pumpFuel() {
          let surfaceMaterial = getSurfaceMaterial()
          let tireMaterial = getTireMaterial()
          let friction = calculateFriction(surfaceMaterial, tireMaterial, steering)
          let acceleration = accelerator.level * (weight - friction) / (weight / gravity)
          let distance = currentVelocity * duration + (acceleration * duration * duration) / 2
          let nextPosition = calculateNextPosition(currentPosition, distance, acceleration)
          moveToPosition(nextPosition)
        }
        accelerator.duration -= duration
      }
    case .Released:
      break
    }
  }
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fc793724681-25">25</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-1"><span class="crayon-r">class</span><span class="crayon-h"> </span><span class="crayon-e">Car</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">guard </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Pressed</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">surfaceMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getSurfaceMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getTireMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-v">surfaceMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">steering</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">level</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">gravity</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">currentVelocity</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">nextPosition</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateNextPosition</span><span class="crayon-sy">(</span><span class="crayon-v">currentPosition</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">moveToPosition</span><span class="crayon-sy">(</span><span class="crayon-v">nextPosition</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">duration</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Released</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">break</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-23"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-24"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fc793724681-25">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>The following language constructs are very common, and aren’t necessarily bad by themselves. What you need to focus on is the <strong>context</strong> in which they are used.</p>
<h3><code>&amp;&amp;</code>, <code>||</code></h3>
<p>This should be obvious. If you <em>AND</em> or <em>OR</em> multiple things together, you could be doing more than one unrelated things. If they aren&#8217;t related, break them down into separate methods.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca5fe754418175" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  if engine.state == .Start &amp;&amp; battery.hasCharge &amp;&amp; pumpFuel() {
    // ...
  }
  // ...
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca5fe754418175-9">9</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-6"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-7"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-8"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca5fe754418175-9">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>Here, checking the engine state and if the battery has charge are unrelated. They are also too implementation dependent. (We’ll look at pumping fuel next.) It can be improved to:</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca600971054709" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  if engineStarted() &amp;&amp; batteryHasCharge() &amp;&amp; pumpFuel() {
    // ...
  }
  // ...
}

func engineStarted() -&gt; Bool
{
  return engine.state == .Start
}

func batteryHasCharge() -&gt; Bool
{
  return battery.hasCharge
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca600971054709-19">19</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">engineStarted</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">batteryHasCharge</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-6"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-7"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-8"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-10"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">engineStarted</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Bool</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-11"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-12"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-13"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-14">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-15"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">batteryHasCharge</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Bool</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-16"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-17"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-18"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca600971054709-19">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>Now, if the determination of engine state and calculation of battery charge has to change, you only need to change in one place, <code>engineStarted()</code> and <code>batteryHasCharge()</code>.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca602448201103" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func engineStarted() -&gt; Bool
{
  return engine.passCheck &amp;&amp; engine.wellOiled &amp;&amp; engine.state == .Start
}

func batteryHasCharge() -&gt; Bool
{
  return battery.connected &amp;&amp; battery.health &gt; 0.3 &amp;&amp; battery.charge &gt; 0.10
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca602448201103-10">10</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">engineStarted</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Bool</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">passCheck</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">wellOiled</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-6"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">batteryHasCharge</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Bool</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-7"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-8"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">connected</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">health</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.3</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">charge</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.10</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-9"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca602448201103-10">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>Now, you’re glad you’ve refactored it to separate methods. There’s just one place to change and it’s well tested.</p>
<h3><code>if</code></h3>
<p>If a <em>condition</em> is true, then do <em>something</em>. This is probably the most used statement in any application.</p>
<p>The problem arises when the condition becomes yet another thing. If <em>do-first-thing-that-returns-bool</em>, then <em>do-second-thing</em>.</p>
<p>If your condition is more than just checking state, you may be doing too many things. If that’s the case, refactor the first thing into a separate method that returns a <code>Bool</code>. The new method can then be reused and invoked in other places.</p>
<p>Another problem occurs when you nest too many <em>if-then-else</em>. It usually means you are doing one too many things at each nesting. Refactor the nested <code>if</code> into its own method.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca604199718554" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  if engineStarted() &amp;&amp; batteryHasCharge() &amp;&amp; pumpFuel() {
    // ...
  }
  // ...
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca604199718554-9">9</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">engineStarted</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">batteryHasCharge</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-6"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-7"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-8"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca604199718554-9">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>Pumping fuel from the fuel tank through the fuel pump into the engine compartment is not merely checking state. It is doing something essential. It’s already refactored into its own <code>pumpFuel()</code> method. But we can do even better by moving it out of the condition and into the body.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca605028478803" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  if engineStarted() &amp;&amp; batteryHasCharge() {
    pumpFuel()
    // ...
  }
  // ...
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca605028478803-10">10</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">engineStarted</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">batteryHasCharge</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-7"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-8"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-9"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca605028478803-10">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>In Swift, you use <code>if let</code> for optional binding, this is simply syntactical, not code smell.</p>
<h3><code>switch</code></h3>
<p>Swift makes <code>switch</code> very powerful. It can match all kinds of things such as numbers, strings, intervals, and even multiple values in tuples. It can also perform pattern matching and value binding for optionals. Finally, you can use <code>where</code> to check for conditions.</p>
<p>To quote the Spider-Man,</p>
<blockquote><p>
  With great power comes great responsibility.
</p></blockquote>
<p>You have to be careful not to mix too many things together in a <code>switch</code> statement. Prefer cleanness over coolness. Complex pattern matching is hard to read and understand.</p>
<p>If you are doing too many things in a matched case, refactor it to its own method with a descriptive name for reusability and testability.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca608945209719" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  switch accelerator.state {
  case .Pressed:
    while accelerator.duration &gt; 0.0 {
      if engine.state == .Start &amp;&amp; battery.hasCharge &amp;&amp; pumpFuel() {
        let surfaceMaterial = getSurfaceMaterial()
        let tireMaterial = getTireMaterial()
        let friction = calculateFriction(surfaceMaterial, tireMaterial, steering)
        let acceleration = accelerator.level * (weight - friction) / (weight / gravity)
        let distance = currentVelocity * duration + (acceleration * duration * duration) / 2
        let nextPosition = calculateNextPosition(currentPosition, distance, acceleration)
        moveToPosition(nextPosition)
      }
      accelerator.duration -= duration
    }
  case .Released:
    break
  }
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca608945209719-22">22</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-5"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Pressed</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">surfaceMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getSurfaceMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getTireMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-v">surfaceMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">steering</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">level</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">gravity</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">currentVelocity</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">nextPosition</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateNextPosition</span><span class="crayon-sy">(</span><span class="crayon-v">currentPosition</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">moveToPosition</span><span class="crayon-sy">(</span><span class="crayon-v">nextPosition</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">duration</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-18"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Released</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">break</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-20"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-21"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca608945209719-22">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p>The whole acceleration algorithm is embedded in the <code>accelerate()</code> method. These nitty gritty details of physics and geometry should be refactored to a lower level to be individually tested.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca60a401571662" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  switch accelerator.state {
  case .Pressed:
    accelerateCar()
  case .Released:
    break
  }
}

func accelerateCar()
{
  while accelerator.duration &gt; 0.0 {
    if engine.state == .Start &amp;&amp; battery.hasCharge &amp;&amp; pumpFuel() {
      let surfaceMaterial = getSurfaceMaterial()
      let tireMaterial = getTireMaterial()
      let friction = calculateFriction(surfaceMaterial, tireMaterial, steering)
      let acceleration = accelerator.level * (weight - friction) / (weight / gravity)
      let distance = currentVelocity * duration + (acceleration * duration * duration) / 2
      let nextPosition = calculateNextPosition(currentPosition, distance, acceleration)
      moveToPosition(nextPosition)
    }
    accelerator.duration -= duration
  }
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60a401571662-27">27</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-5"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Pressed</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">accelerateCar</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-7"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Released</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">break</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-9"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-10"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-12"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerateCar</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-13"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-14"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">surfaceMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getSurfaceMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getTireMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-v">surfaceMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">steering</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">level</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">gravity</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">currentVelocity</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">nextPosition</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateNextPosition</span><span class="crayon-sy">(</span><span class="crayon-v">currentPosition</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">moveToPosition</span><span class="crayon-sy">(</span><span class="crayon-v">nextPosition</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">duration</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-25"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-26"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60a401571662-27">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
<p>Even better, refactor the <code>switch</code> statement to its own method and give the method a meaningful name for readability and cleanness.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca60b896603837" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  if canAccelerate() {
    accelerateCar()
  }
}

func canAccelerate() -&gt; Bool
{
  switch accelerator.state {
  case .Pressed:
    return true
  case .Released:
    return false
  }
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60b896603837-18">18</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">canAccelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">accelerateCar</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-6"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-7"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-8">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-9"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">canAccelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Bool</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-10"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-11"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-12"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Pressed</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-t">true</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-14"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Released</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-t">false</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-16"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-17"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60b896603837-18">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>When you use <code>switch</code> for pattern matching, try to keep the cases simple and use <code>where</code> judiciously. The pattern matching algorithm should be refactored into its own method with a meaningful name such as <code>findMakerAndModelFromVIN()</code>.</p>
<h3><code>for</code>, <code>while</code>, <code>repeat</code></h3>
<p>Loops can smell similarly to <code>if</code> and <code>switch</code>. You have a condition to determine if the loop should repeat. The condition is usually pretty simple and not a problem. But if you do too many things inside the loop, you may want to take a closer look.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca60d608587282" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  while accelerator.duration &gt; 0.0 {
    if engine.state == .Start &amp;&amp; battery.hasCharge &amp;&amp; pumpFuel() {
      let surfaceMaterial = getSurfaceMaterial()
      let tireMaterial = getTireMaterial()
      let friction = calculateFriction(surfaceMaterial, tireMaterial, steering)
      let acceleration = accelerator.level * (weight - friction) / (weight / gravity)
      let distance = currentVelocity * duration + (acceleration * duration * duration) / 2
      let nextPosition = calculateNextPosition(currentPosition, distance, acceleration)
      moveToPosition(nextPosition)
    }
    accelerator.duration -= duration
  }
  // ...
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60d608587282-18">18</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">surfaceMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getSurfaceMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getTireMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-v">surfaceMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">steering</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">level</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">gravity</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">currentVelocity</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">nextPosition</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateNextPosition</span><span class="crayon-sy">(</span><span class="crayon-v">currentPosition</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">moveToPosition</span><span class="crayon-sy">(</span><span class="crayon-v">nextPosition</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">duration</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-15"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-16"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-17"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60d608587282-18">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>In the <code>while</code> loop of the <code>accelerate()</code> method, we are doing way too many things. For every time step,</p>
<ul>
<li>Get the surface and tire materials</li>
<li>Calculate the friction of the road on the car</li>
<li>Calculate the acceleration of the car</li>
<li>Calculate the distance to travel</li>
<li>Figure out the next position of the car</li>
<li>Move the car to the new position</li>
</ul>
<p>Do all these physics and geometry need to coexist in the <code>accelerate()</code> method? Not really. So let’s refactor it.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca60f970713913" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  // ...
  while accelerator.duration &gt; 0.0 {
    if engine.state == .Start &amp;&amp; battery.hasCharge &amp;&amp; pumpFuel() {
      let distance = calculateDistanceToTravel()
      let nextPosition = calculateNextPosition(currentPosition, distance)
      moveToPosition(nextPosition)
    }
  }
  // ...
}

func calculateFriction() -&gt; Double
{
  let surfaceMaterial = getSurfaceMaterial()
  let tireMaterial = getTireMaterial()
  let friction = calculateFriction(surfaceMaterial, tireMaterial, steering)
  return friction
}

func calculateAcceleration(friction: Double) -&gt; Double
{
  let acceleration = accelerator.level * (weight - friction) / (weight / gravity)
  return acceleration
}

func calculateDistance(acceleration: Double) -&gt; Double
{
  let distance = currentVelocity * duration + (acceleration * duration * duration) / 2
  return distance
}

func calculateDistanceToTravel() -&gt; Double
{
  let friction = calculateFriction()
  let acceleration = calculateAcceleration(friction)
  let distance = calculateDistance(acceleration)
  return distance
}

func calculateNextPosition(currentPosition: Point, _ distance: Double) -&gt; Point
{
  return Point(x: currentPosition.x + distance, y: currentPosition.y)
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-27">27</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-28">28</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-29">29</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-30">30</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-31">31</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-32">32</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-33">33</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-34">34</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-35">35</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-36">36</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-37">37</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-38">38</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-39">39</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-40">40</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-41">41</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-42">42</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-43">43</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-44">44</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-45">45</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca60f970713913-46">46</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">duration</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-e">pumpFuel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateDistanceToTravel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">nextPosition</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateNextPosition</span><span class="crayon-sy">(</span><span class="crayon-v">currentPosition</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">moveToPosition</span><span class="crayon-sy">(</span><span class="crayon-v">nextPosition</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-10"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-11"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-12"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-14"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Double</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-15"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-16"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">surfaceMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getSurfaceMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-17"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">getTireMaterial</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-18"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-v">surfaceMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">tireMaterial</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">steering</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-19"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">friction</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-20"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-21">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-22"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">calculateAcceleration</span><span class="crayon-sy">(</span><span class="crayon-v">friction</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">Double</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Double</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-23"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-24"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">accelerator</span><span class="crayon-sy">.</span><span class="crayon-v ">level</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">weight</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">gravity</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-25"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-26"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-27">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-28"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">calculateDistance</span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">Double</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Double</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-29"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-30"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">currentVelocity</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">duration</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-cn">2</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-31"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">distance</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-32"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-33">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-34"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">calculateDistanceToTravel</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Double</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-35"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-36"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">friction</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateFriction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-37"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">acceleration</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateAcceleration</span><span class="crayon-sy">(</span><span class="crayon-v">friction</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-38"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">let</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculateDistance</span><span class="crayon-sy">(</span><span class="crayon-v">acceleration</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-39"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">distance</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-40"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-41">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-42"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">calculateNextPosition</span><span class="crayon-sy">(</span><span class="crayon-v">currentPosition</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">Point</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">Double</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-e">Point</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-43"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-44"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-e">Point</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">currentPosition</span><span class="crayon-sy">.</span><span class="crayon-v ">x</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">distance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">currentPosition</span><span class="crayon-sy">.</span><span class="crayon-v ">y</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-45"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca60f970713913-46">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0018 seconds] -->
<p></p>
<p>The original <code>accelerate()</code> method becomes much simpler and shows only the steps at the high level. The physics and geometry lower level details are extracted. You can write unit tests to make sure all the complexity is fully tested and verified to work. If you need to make a change later, you have a test suite to rely upon.</p>
<h3><code>guard</code></h3>
<p><code>guard</code> is great to ensure some requirements are met before the method continues. Just make sure you don’t specify too many requirements. If that’s the case, refactor these requirements into separate methods.</p>
<p>Alternatively, you can extract the whole guard statement into its own method that return a <code>Bool</code>. They can then be individually tested and reused elsewhere.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca611747433690" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  guard engine.state == .Start &amp;&amp; battery.hasCharge else { return }
  // ...
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca611747433690-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca611747433690-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca611747433690-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca611747433690-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca611747433690-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca611747433690-6">6</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca611747433690-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca611747433690-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca611747433690-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-e">guard </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca611747433690-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca611747433690-5"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca611747433690-6">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>Checking if the car can move is likely a very useful assertion elsewhere, so it makes sense to refactor it out.</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca613536834801" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
func accelerate()
{
  guard canMove() else { return }
  // ...
}

func canMove() -&gt; Bool
{
  return engine.state == .Start &amp;&amp; battery.hasCharge
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca613536834801-11">11</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-1"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">accelerate</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-e">guard </span><span class="crayon-e">canMove</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// ...</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-5"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-6">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-7"><span class="crayon-r">func</span><span class="crayon-h"> </span><span class="crayon-e">canMove</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">-&gt;</span><span class="crayon-h"> </span><span class="crayon-t">Bool</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-8"><span class="crayon-sy">{</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-9"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">engine</span><span class="crayon-sy">.</span><span class="crayon-v ">state</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-v ">Start</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">battery</span><span class="crayon-sy">.</span><span class="crayon-v ">hasCharge</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-10"><span class="crayon-sy">}</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca613536834801-11">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>Again, this increases reusability and testability for the <code>canMove()</code> method.</p>
<h3><code>a ? b : c</code></h3>
<p>The ternary conditional operator:</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca615216137732" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
a ? b : c
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca615216137732-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca615216137732-2">2</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca615216137732-1"><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">c</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca615216137732-2">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p></p>
<p>is a shorthand for:</p>
<p></p><!-- Urvanov Syntax Highlighter v2.8.26 -->

		<div id="urvanov-syntax-highlighter-6189c31eca616886065180" class="urvanov-syntax-highlighter-syntax crayon-theme-tomorrow-night urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div><span class="crayon-language">Swift</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
if a {
  b
} else {
  c
}
</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca616886065180-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca616886065180-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca616886065180-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca616886065180-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6189c31eca616886065180-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6189c31eca616886065180-6">6</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca616886065180-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">a</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca616886065180-2"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">b</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca616886065180-3"><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca616886065180-4"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">c</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6189c31eca616886065180-5"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6189c31eca616886065180-6">&nbsp;</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p></p>
<p>Since it’s a shorthand, it is supposed to be short. If you make it too complex, or even nest them, it kinds of defeat the purpose.</p>
<p>Some people love these tertiary operations because they are concise. But use with caution. Make sure your condition and branches are simple. If you have to <code>&amp;&amp;</code> or <code>||</code> multiple conditions, execute more than one statement in a branch, or calling multiple methods, they are almost certainly too complex. They can greatly reduce readability and are hard to understand.</p>
<h3>Number of lines of code</h3>
<p>While this isn&#8217;t syntactical, but it&#8217;s still a factor to consider. When your method starts to grow and consists of many lines of code, it’s time to consider if you are doing too many things.</p>
<p>Method size may indicate you are specifying unrelated things to happen after one another.</p>
<p>On one hand, it’s fine if a task requires multiple lines of code to initialize, configure, execute, and return results. That&#8217;s just the verboseness of the language or class design.</p>
<p>On the other hand, if you find yourself having more than one algorithms in a single method, you may want to refactor them into multiple methods and invoke them from your original method.</p>
<!-- Begin MailChimp Signup Form -->
<div id="mc_embed_signup">
  <form action="//clean-swift.us6.list-manage.com/subscribe/post?u=e6eeee7417bb2a227470a5624&amp;id=62e21e3683" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
	<div id="mc_embed_signup_scroll">
	  <h2>Get the Clean Swift Xcode Templates</h2>
	  <p>Join over 15,000 developers and subscribe to get my Xcode templates. Learn how to apply the VIP cycle to your projects. Extract business and presentation logic into interactor and presenter. Route to other scenes and pass data. Write fast, maintainable unit tests. Be confident making changes.
	  </p>
	  <div class="mc-field-group">
		<input type="text" value="" name="FNAME" placeholder="Your first name" class="required name" id="mce-FNAME">
	  </div>
	  <div class="mc-field-group">
		<input type="email" value="" name="EMAIL" placeholder="Your email" class="required email" id="mce-EMAIL">
	  </div>
	  <div id="mce-responses" class="clear">
		<div class="response" id="mce-error-response" style="display:none"></div>
		<div class="response" id="mce-success-response" style="display:none"></div>
	  </div>
	  <div style="position: absolute; left: -5000px;" aria-hidden="true">
		<input type="text" name="b_e6eeee7417bb2a227470a5624_62e21e3683" tabindex="-1" value="">
	  </div>
	  <div class="clear">
		<input type="submit" value="Download Xcode Templates" name="subscribe" id="mc-embedded-subscribe" class="button">
	  </div>
	  <p class="footnote">I promise I'll never send you spam. You can unsubscribe at any time.</p>
</div>
  </form>
</div>
<script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script>
<script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this post:</h3><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow noopener noreferrer" data-shared="sharing-twitter-140" class="share-twitter sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-facebook"><a rel="nofollow noopener noreferrer" data-shared="sharing-facebook-140" class="share-facebook sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=facebook" target="_blank" title="Click to share on Facebook"><span>Facebook</span></a></li><li class="share-linkedin"><a rel="nofollow noopener noreferrer" data-shared="sharing-linkedin-140" class="share-linkedin sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=linkedin" target="_blank" title="Click to share on LinkedIn"><span>LinkedIn</span></a></li><li class="share-reddit"><a rel="nofollow noopener noreferrer" data-shared="" class="share-reddit sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=reddit" target="_blank" title="Click to share on Reddit"><span>Reddit</span></a></li><li class="share-tumblr"><a rel="nofollow noopener noreferrer" data-shared="" class="share-tumblr sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=tumblr" target="_blank" title="Click to share on Tumblr"><span>Tumblr</span></a></li><li class="share-pinterest"><a rel="nofollow noopener noreferrer" data-shared="sharing-pinterest-140" class="share-pinterest sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-pocket"><a rel="nofollow noopener noreferrer" data-shared="" class="share-pocket sd-button share-icon" href="https://clean-swift.com/single-responsibility-principle-for-methods/?share=pocket" target="_blank" title="Click to share on Pocket"><span>Pocket</span></a></li><li class="share-end"></li></ul></div></div></div>					</div><!-- .entry-content -->

				<div class="tags-links">
			<a href="https://clean-swift.com/tag/principle/" rel="tag">principle</a>, <a href="https://clean-swift.com/tag/single-responsibility/" rel="tag">Single Responsibility</a>, <a href="https://clean-swift.com/tag/single-responsibility-principle/" rel="tag">Single Responsibility Principle</a>		</div>
		
			<div class="author-profile">
		<div class="author-profile-avatar">
			<img alt='' src='https://secure.gravatar.com/avatar/8558c41ce3a589cedbe26b22aab2deee?s=90&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/8558c41ce3a589cedbe26b22aab2deee?s=180&#038;d=mm&#038;r=g 2x' class='avatar avatar-90 photo' height='90' width='90' loading='lazy'/>		</div><!-- .author-profile-avatar -->
		<div class="author-profile-meta">
			<div class="author-profile-name"><strong>Raymond</strong></div>
									<div class="author-profile-link menu">
				<a href="http://clean-swift.com"></a>																															</div><!-- .author-profile-link -->
					</div><!-- .author-profile-meta -->
		<div class="author-profile-description">
			I've been developing in iOS since the iPhone debuted, jumped on Swift when it was announced. Writing well-tested apps with a clean architecture has been my goal.			<a class="author-profile-description-link" href="https://clean-swift.com/author/cleanswift/" rel="author">View all posts by Raymond &rarr;</a>
		</div><!-- .author-profile-description -->
	</div><!-- .author-profile -->
	
	</article><!-- #post-## -->
</div><!-- .post-full -->

	<nav class="navigation post-navigation">
		<h2 class="screen-reader-text">Post navigation</h2>
		<div class="nav-links">
			<div class="nav-previous"><div class="post-nav-title">Older post</div><a href="https://clean-swift.com/single-responsibility-principle-for-class/" rel="prev">Single Responsibility Principle for Class</a></div><div class="nav-next"><div class="post-nav-title">Newer post</div><a href="https://clean-swift.com/mobile-development-projects-fail/" rel="next">This is why most mobile development projects fail</a></div>		</div><!-- .nav-links -->
	</nav><!-- .post-navigation -->
	

			
<div id="comments" class="comments-area">

	
			<h2 class="comments-title">
			3 Comments		</h2>

		
		<ol class="comment-list">
					<li id="comment-569" class="comment even thread-even depth-1">
			<article id="div-comment-569" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/6532d5d65b35838a5c4a3377059f2f20?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/6532d5d65b35838a5c4a3377059f2f20?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">Artem</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://clean-swift.com/single-responsibility-principle-for-methods/#comment-569"><time datetime="2016-04-15T11:10:46-04:00">April 15, 2016 at 11:10 am</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Great post, Raymond!<br />
I feel you experience when I read it. Sometimes  these ideas come into mind but lazy can kill it. So lazy is evil. Now I know that do small methods with SPR it a right way, and you need to force yourself to do that.<br />
Thanks.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-569' data-commentid="569" data-postid="140" data-belowelement="div-comment-569" data-respondelement="respond" data-replyto="Reply to Artem" aria-label='Reply to Artem'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-5506" class="comment odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-5506" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/018792bdb5a433a0f8b40654c05566d3?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/018792bdb5a433a0f8b40654c05566d3?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn">Arlen Walker</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://clean-swift.com/single-responsibility-principle-for-methods/#comment-5506"><time datetime="2017-08-21T17:06:27-04:00">August 21, 2017 at 5:06 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Nice work, but I have a quibble: I think your first example isn&#8217;t quite complete. You posit A &amp; B implement feature X while C &amp; D implement feature Y. Then you factor out C/D into a separate method. in order to keep with SRP.</p>
<p>But in doing so you change the level of abstraction of the original method (M). Now it directly implements feature X but only indirectly implements feature Y. To use the abstraction level terminology from Fowler, method M now is at the Implementation level of abstraction for feature X (does the actual work) but it&#8217;s at the Specification level for feature Y (calls something else to do the work). This means M would change if the Specification for Y changed, or when the Implementation of X changed.</p>
<p>A slightly more complete solution, I think, would have been to extract both features out to the Specification level. Then method M would be at the same abstraction level for both features. M&#8217;s reason to change then would be if the feature specifications changed, while N and O would each change only if the implementation of their feature changed.</p>
<p>None of this is affects your overall idea; it just keeps the solution consistent.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-5506' data-commentid="5506" data-postid="140" data-belowelement="div-comment-5506" data-respondelement="respond" data-replyto="Reply to Arlen Walker" aria-label='Reply to Arlen Walker'>Reply</a></div>			</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-5507" class="comment byuser comment-author-cleanswift bypostauthor even depth-2">
			<article id="div-comment-5507" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/8558c41ce3a589cedbe26b22aab2deee?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/8558c41ce3a589cedbe26b22aab2deee?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' loading='lazy'/>						<b class="fn"><a href='http://clean-swift.com' rel='external nofollow ugc' class='url'>Raymond</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://clean-swift.com/single-responsibility-principle-for-methods/#comment-5507"><time datetime="2017-08-21T18:13:34-04:00">August 21, 2017 at 6:13 pm</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Hi Arlen,</p>
<p>I completely agree with your argument. I was just doing step 1 of the refactoring. If this is real code, I would absolutely move A and B to a new method O in the second step.</p>
<p>Thank you for taking the example a step further, and the excellent explanation with regard to the level of abstraction.</p>
				</div><!-- .comment-content -->

				<div class="reply"><a rel='nofollow' class='comment-reply-link' href='#comment-5507' data-commentid="5507" data-postid="140" data-belowelement="div-comment-5507" data-respondelement="respond" data-replyto="Reply to Raymond" aria-label='Reply to Raymond'>Reply</a></div>			</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		
	
	
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/single-responsibility-principle-for-methods/#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://clean-swift.com/wp-comments-post.php?wpe-comment-post=cleanswift" method="post" id="commentform" class="comment-form" novalidate><p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p><p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" required="required"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200" /></p>
<p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p><p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='140' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="c4458e63cf" /></p><p style="display: none !important;"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js" name="ak_js" value="224"/><script>document.getElementById( "ak_js" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	
</div><!-- #comments -->

		
		</main><!-- #main -->
	</div><!-- #primary -->


	</div><!-- #content -->

	<footer id="colophon" class="site-footer">

		
	<div id="supplementary" class="footer-widget-area" role="complementary">
		<div class="footer-widget-wrapper">
			<div class="footer-widget">
								<div class="footer-widget-1 widget-area">
									</div><!-- .footer-widget-1 -->
												<div class="footer-widget-2 widget-area">
									</div><!-- .footer-widget-2 -->
												<div class="footer-widget-3 widget-area">
									</div><!-- .footer-widget-3 -->
												<div class="footer-widget-4 widget-area">
									</div><!-- .footer-widget-4 -->
							</div><!-- .footer-widget -->
		</div><!-- .footer-widget-wrapper -->
	</div><!-- #supplementary -->

		<div class="site-bottom">

			<div class="site-info">
				<div class="site-copyright">
					&copy; 2021 <a href="https://clean-swift.com/" rel="home">Clean Swift LLC</a>. All rights reserved. <a href="privacy-policy">Privacy</a> and <a href="terms-of-service">Terms</a>.
				</div><!-- .site-copyright -->
				<div class="site-credit">
					Powered by <a href="https://wordpress.org/">WordPress</a>				<span class="site-credit-sep"> | </span>
					Theme: <a href="http://themegraphy.com/wordpress-themes/graphy/">Graphy</a> by Themegraphy				</div><!-- .site-credit -->
			</div><!-- .site-info -->

		</div><!-- .site-bottom -->

	</footer><!-- #colophon -->
</div><!-- #page -->

	<div style="display:none">
	<div class="grofile-hash-map-8558c41ce3a589cedbe26b22aab2deee">
	</div>
	<div class="grofile-hash-map-6532d5d65b35838a5c4a3377059f2f20">
	</div>
	<div class="grofile-hash-map-018792bdb5a433a0f8b40654c05566d3">
	</div>
	</div>

	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"https:\/\/clean-swift.com\/single-responsibility-principle-for-methods\/":140};
	</script>
						<script type='text/javascript' src='https://js.stripe.com/v3/' id='sandhills-stripe-js-v3-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/stripe/includes/core/assets/js/simpay-polyfill.min.js?ver=2.6.3' id='simpay-polyfill-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/stripe/includes/core/assets/js/vendor/accounting.min.js?ver=2.6.3' id='simpay-accounting-js'></script>
<script type='text/javascript' id='simpay-shared-js-extra'>
/* <![CDATA[ */
var spGeneral = {"strings":{"currency":"USD","currencySymbol":"$","currencyPosition":"left","decimalSeparator":".","thousandSeparator":",","ajaxurl":"https:\/\/clean-swift.com\/wp-admin\/admin-ajax.php"},"booleans":{"isTestMode":false,"isZeroDecimal":false,"scriptDebug":false},"i18n":{"mediaTitle":"Insert Media","mediaButtonText":"Use Image"},"integers":{"decimalPlaces":2,"minAmount":1}};
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/stripe/includes/core/assets/js/simpay-public-shared.min.js?ver=2.6.3' id='simpay-shared-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/underscore.min.js?ver=1.13.1' id='underscore-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/backbone.min.js?ver=1.4.0' id='backbone-js'></script>
<script type='text/javascript' id='wp-api-request-js-extra'>
/* <![CDATA[ */
var wpApiSettings = {"root":"https:\/\/clean-swift.com\/wp-json\/","nonce":"500b2a5447","versionString":"wp\/v2\/"};
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/api-request.min.js?ver=5.8.1' id='wp-api-request-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/wp-api.min.js?ver=5.8.1' id='wp-api-js'></script>
<script type='text/javascript' id='simpay-public-js-extra'>
/* <![CDATA[ */
var simplePayForms = [];
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/stripe/includes/core/assets/js/simpay-public.min.js?ver=2.6.3' id='simpay-public-js'></script>
<script type='text/javascript' src='https://secure.gravatar.com/js/gprofiles.js?ver=202145' id='grofiles-cards-js'></script>
<script type='text/javascript' id='wpgroho-js-extra'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=10.2' id='wpgroho-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/themes/graphy/js/skip-link-focus-fix.js?ver=20160525' id='graphy-skip-link-focus-fix-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/themes/graphy/js/navigation.js?ver=20160525' id='graphy-navigation-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/themes/graphy/js/doubletaptogo.min.js?ver=1.0.0' id='double-tap-to-go-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/comment-reply.min.js?ver=5.8.1' id='comment-reply-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/themes/graphy/js/functions.js?ver=20160822' id='graphy-functions-js'></script>
<script type='text/javascript' src='https://clean-swift.com/wp-includes/js/wp-embed.min.js?ver=5.8.1' id='wp-embed-js'></script>
<script type='text/javascript' id='sharing-js-js-extra'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1","is_stats_active":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='https://clean-swift.com/wp-content/plugins/jetpack/_inc/build/sharedaddy/sharing.min.js?ver=10.2' id='sharing-js-js'></script>
<script type='text/javascript' id='sharing-js-js-after'>
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-twitter' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-twitter' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-facebook' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-facebook' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-linkedin' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-linkedin' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomlinkedin', 'menubar=1,resizable=1,width=580,height=450' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-tumblr' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-tumblr' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcomtumblr', 'menubar=1,resizable=1,width=450,height=450' );
						return false;
					}
				} );
			} )();
var windowOpen;
			( function () {
				function matches( el, sel ) {
					return !! (
						el.matches && el.matches( sel ) ||
						el.msMatchesSelector && el.msMatchesSelector( sel )
					);
				}

				document.body.addEventListener( 'click', function ( event ) {
					if ( ! event.target ) {
						return;
					}

					var el;
					if ( matches( event.target, 'a.share-pocket' ) ) {
						el = event.target;
					} else if ( event.target.parentNode && matches( event.target.parentNode, 'a.share-pocket' ) ) {
						el = event.target.parentNode;
					}

					if ( el ) {
						event.preventDefault();

						// If there's another sharing window open, close it.
						if ( typeof windowOpen !== 'undefined' ) {
							windowOpen.close();
						}
						windowOpen = window.open( el.getAttribute( 'href' ), 'wpcompocket', 'menubar=1,resizable=1,width=450,height=450' );
						return false;
					}
				} );
			} )();
</script>
<script src='https://stats.wp.com/e-202145.js' defer></script>
<script>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:10.2',blog:'96072011',post:'140',tz:'-4',srv:'clean-swift.com'} ]);
	_stq.push([ 'clickTrackerInit', '96072011', '140' ]);
</script>

</body>
</html>
