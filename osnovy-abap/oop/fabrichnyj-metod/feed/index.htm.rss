<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Комментарии: Фабричный метод (Factory method)	</title>
	<atom:link href="https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 06:14:28 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>
		Автор: Astrafox		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17718</link>

		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Sat, 09 Jul 2016 08:31:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17718</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17717&quot;&gt;Сергей&lt;/a&gt;.

Ошибочка, убрал]]></description>
			<content:encoded><![CDATA[<p>Ошибочка, убрал</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: Сергей		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17717</link>

		<dc:creator><![CDATA[Сергей]]></dc:creator>
		<pubDate>Fri, 08 Jul 2016 14:25:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17717</guid>

					<description><![CDATA[Ребят, а почему строке 35 снова объявление параметра?]]></description>
			<content:encoded><![CDATA[<p>Ребят, а почему строке 35 снова объявление параметра?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: Astrafox		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17712</link>

		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Mon, 13 Jun 2016 11:15:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17712</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17710&quot;&gt;svirinstel&lt;/a&gt;.

У меня (да и много где еще) подобный функционал реализован в 1 классе, а возможность сохранения в памяти или БД реализована через вызов соответствующих методов и передачу необязательных параметров с ИД журнала.]]></description>
			<content:encoded><![CDATA[<p>У меня (да и много где еще) подобный функционал реализован в 1 классе, а возможность сохранения в памяти или БД реализована через вызов соответствующих методов и передачу необязательных параметров с ИД журнала.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: Astrafox		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17711</link>

		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Thu, 26 May 2016 09:32:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17711</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17710&quot;&gt;svirinstel&lt;/a&gt;.

Согласен]]></description>
			<content:encoded><![CDATA[<p>Согласен</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: svirinstel		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17710</link>

		<dc:creator><![CDATA[svirinstel]]></dc:creator>
		<pubDate>Thu, 26 May 2016 09:29:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17710</guid>

					<description><![CDATA[Да, и еще, чтобы не делать Exception внутри метода Write родительского класса, достаточно сделать его абстрактным. Собственно, можно еще закрыть создание экземпляра род. класса, тоже объявив его абстрактным.

Недавно сделал реализации двух видов логов: для SLG1 и для хранящегося только в оперативной памяти. Собственно, класс родительский с общим набором абстрактных методов и фабричным методом + добавил интерфейс в дочерний класс SLG, чтобы была возможность сохранить его. Если интересно, могу куда-нибудь скинуть реализацию.]]></description>
			<content:encoded><![CDATA[<p>Да, и еще, чтобы не делать Exception внутри метода Write родительского класса, достаточно сделать его абстрактным. Собственно, можно еще закрыть создание экземпляра род. класса, тоже объявив его абстрактным.</p>
<p>Недавно сделал реализации двух видов логов: для SLG1 и для хранящегося только в оперативной памяти. Собственно, класс родительский с общим набором абстрактных методов и фабричным методом + добавил интерфейс в дочерний класс SLG, чтобы была возможность сохранить его. Если интересно, могу куда-нибудь скинуть реализацию.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: Astrafox		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17707</link>

		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Tue, 17 May 2016 08:14:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17707</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17706&quot;&gt;svirinstel&lt;/a&gt;.

Супер, спасибо за пример.]]></description>
			<content:encoded><![CDATA[<p>Супер, спасибо за пример.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: svirinstel		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17706</link>

		<dc:creator><![CDATA[svirinstel]]></dc:creator>
		<pubDate>Tue, 17 May 2016 08:09:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17706</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17705&quot;&gt;Astrafox&lt;/a&gt;.

Согласен.
Поговорил с коллегой, кажется нашли неплохой пример в стандарте - CL_ABAP_TYPEDESCR. Есть несколько фабричных методов (DESCRIBE_BY_DATA, _NAME, ...), которые возвращают дочерние классы.]]></description>
			<content:encoded><![CDATA[<p>Согласен.<br />
Поговорил с коллегой, кажется нашли неплохой пример в стандарте &#8212; CL_ABAP_TYPEDESCR. Есть несколько фабричных методов (DESCRIBE_BY_DATA, _NAME, &#8230;), которые возвращают дочерние классы.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: Astrafox		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17705</link>

		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Tue, 17 May 2016 08:02:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17705</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17704&quot;&gt;svirinstel&lt;/a&gt;.

Возвращает действительно один и тот же. Пример конечно не совсем корректный. Но паттерн может применяться как в указанном примере в виде именованного конструктора, а может так же скрывать наследников, как это сделано например в классе WebRequest.Create(..) который скрывает иерархию наследования. Но ведь никто не запрещает делать и то и другое одновременно (скрывать иерархию в именованных конструкторах) :)]]></description>
			<content:encoded><![CDATA[<p>Возвращает действительно один и тот же. Пример конечно не совсем корректный. Но паттерн может применяться как в указанном примере в виде именованного конструктора, а может так же скрывать наследников, как это сделано например в классе WebRequest.Create(..) который скрывает иерархию наследования. Но ведь никто не запрещает делать и то и другое одновременно (скрывать иерархию в именованных конструкторах) 🙂</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: svirinstel		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17704</link>

		<dc:creator><![CDATA[svirinstel]]></dc:creator>
		<pubDate>Tue, 17 May 2016 07:35:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17704</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17701&quot;&gt;Astrafox&lt;/a&gt;.

эм, а разве он в результате не возвращает один и тот же объект класса , а не наследников? К сожалению, проверить возможности нет, ковыряюсь в справке:
public static TimeSpan FromSeconds( double value )
public static TimeSpan FromMilliseconds( double value )
Или это родительский класс, а по факту возвращаются экземпляры дочерних классов?]]></description>
			<content:encoded><![CDATA[<p>эм, а разве он в результате не возвращает один и тот же объект класса , а не наследников? К сожалению, проверить возможности нет, ковыряюсь в справке:<br />
public static TimeSpan FromSeconds( double value )<br />
public static TimeSpan FromMilliseconds( double value )<br />
Или это родительский класс, а по факту возвращаются экземпляры дочерних классов?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Автор: svirinstel		</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17703</link>

		<dc:creator><![CDATA[svirinstel]]></dc:creator>
		<pubDate>Tue, 17 May 2016 07:14:00 +0000</pubDate>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2740#comment-17703</guid>

					<description><![CDATA[В ответ на &lt;a href=&quot;https://abap-blog.ru/osnovy-abap/oop/fabrichnyj-metod/#comment-17699&quot;&gt;Astrafox&lt;/a&gt;.

Согласен, нужно всегда стремиться к упрощению понимания и использования архитектуры.]]></description>
			<content:encoded><![CDATA[<p>Согласен, нужно всегда стремиться к упрощению понимания и использования архитектуры.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
