{"id":862,"date":"2012-06-21T07:51:18","date_gmt":"2012-06-21T03:51:18","guid":{"rendered":"http:\/\/abap-blog.ru\/?p=862"},"modified":"2021-03-02T10:02:22","modified_gmt":"2021-03-02T06:02:22","slug":"nenormalnoe-programmirovanie","status":"publish","type":"post","link":"https:\/\/abap-blog.ru\/osnovy-abap\/sap-dynpro\/nenormalnoe-programmirovanie\/","title":{"rendered":"\u041d\u0435\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},"content":{"rendered":"<p>\u041f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0435 ALV \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0432 \u0432\u0438\u0434\u0435 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 ME59N. \u041d\u0438\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435\u0447\u0442\u043e \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0435.<\/p>\n<p><a href=\"http:\/\/abap-blog.ru\/wp-content\/uploads\/2012\/06\/alvTree.png\"><img loading=\"lazy\" class=\"size-full wp-image-863 alignnone\" title=\"alvTree\" src=\"http:\/\/abap-blog.ru\/wp-content\/uploads\/2012\/06\/alvTree.png\" alt=\"\" width=\"1006\" height=\"258\" srcset=\"https:\/\/abap-blog.ru\/wp-content\/uploads\/2012\/06\/alvTree.png 1006w, https:\/\/abap-blog.ru\/wp-content\/uploads\/2012\/06\/alvTree-300x76.png 300w\" sizes=\"(max-width: 1006px) 100vw, 1006px\" \/><\/a><\/p>\n<p><!--more-->\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c GUI \u0441\u0442\u0430\u0442\u0443\u0441 \u0441 \u0442\u0440\u0435\u043c\u044f \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 (\u0441\u043c \u043a\u043e\u0434.). \u041a\u043e\u0434 \u043d\u0435 \u0441\u0430\u043c\u044b\u0439 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439, \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0434\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u0430:<\/p>\n<pre class=\"lang:abap decode:true \">REPORT zalv_pl.\r\n\r\nTYPE-POOLS: &lt;icon&gt;.\r\n\r\nTYPES: BEGIN OF ty_spfli_ex,\r\n        icon_field  TYPE icon_d,\r\n        t_cell_type TYPE SALV_T_INT4_COLUMN,\r\n        t_color     TYPE lvc_t_scol.\r\n        INCLUDE STRUCTURE spfli.\r\nTYPES: END OF ty_spfli_ex.\r\n\r\nCLASS lcl_report DEFINITION.\r\n  PUBLIC SECTION.\r\n    CLASS-DATA:\r\n      gt_all_data TYPE STANDARD TABLE OF ty_spfli_ex,  \" \u0412\u0441\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\r\n      gt_alv_data TYPE STANDARD TABLE OF ty_spfli_ex,  \" \u0414\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u044b \u0432 ALV c \u0443\u0447\u0451\u0442\u043e\u043c \u0441\u0432\u0435\u0440\u043d\u0443\u0442\u044b\u0445\r\n      go_alv      TYPE REF TO cl_salv_table,\r\n      gv_field    TYPE STRING,\r\n      gv_icon_field TYPE LVC_FNAME,\r\n      gv_first_field TYPE STRING.\r\n    CLASS-METHODS:\r\n      on_added_function FOR EVENT added_function OF cl_salv_events_table IMPORTING e_salv_function,\r\n      on_link_click FOR EVENT link_click OF cl_salv_events_table IMPORTING row,\r\n      get_data, \" \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\r\n      show_alv, \" \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 ALV \u0442\u0430\u0431\u043b\u0438\u0446\u044b\r\n      hide_all, \" \u0421\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0432\u0441\u0435\r\n      show_all, \" \u0420\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0432\u0441\u0435\r\n      FORWARD,  \" \u0412\u043f\u0435\u0440\u0435\u0434\r\n      set_key   \" \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u043f\u043e\u043b\u0435 \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0431\u0443\u0434\u0435\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b\r\n        IMPORTING\r\n          i_field  TYPE CSEQUENCE,\r\n      set_column_key_color\r\n        IMPORTING\r\n          i_column TYPE CSEQUENCE\r\n          i_clear  TYPE abap_bool OPTIONAL,\r\n      set_icon\r\n        IMPORTING\r\n          i_icon   TYPE CSEQUENCE,\r\n      show_by   \" \u0440\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443\r\n        IMPORTING\r\n          i_field  TYPE ANY\r\n          i_row    TYPE I,\r\n      hide_by   \" \u0421\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443\r\n        IMPORTING\r\n          i_field  TYPE ANY\r\n          i_row    TYPE I.\r\nENDCLASS.\r\n\r\n\" \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0434\u043b\u044f \u0434\u0432\u043e\u0439\u043d\u043e\u0433\u043e \u0449\u0435\u043b\u0447\u043a\u0430\r\nCLASS lcl_report IMPLEMENTATION.\r\n  METHOD get_data.\r\n    CLEAR gt_all_data.\r\n    SELECT * FROM spfli INTO CORRESPONDING FIELDS OF TABLE gt_all_data.\r\n  ENDMETHOD.\r\n\r\n  METHOD set_column_key_color.\r\n    DATA: lo_columns TYPE REF TO cl_salv_columns_table,\r\n          lv_color   TYPE LVC_S_COLO,\r\n          lo_column  TYPE REF TO cl_salv_column_table.\r\n\r\n    lo_columns = go_alv-&gt;get_columns( ).\r\n    TRY.\r\n      lo_column ?= lo_columns-&gt;get_column( i_column ).\r\n    CATCH CX_SALV_NOT_FOUND.\r\n      EXIT.\r\n    ENDTRY.\r\n\r\n    IF i_clear IS INITIAL.\r\n      lv_color-col = 4.\r\n      lv_color-int = 1.\r\n    ENDIF.\r\n    lo_column-&gt;set_color( lv_color ).\r\n  ENDMETHOD.\r\n\r\n  METHOD show_alv.\r\n    DATA:\r\n      lo_columns  TYPE REF TO cl_salv_columns_table,\r\n      lo_column   TYPE REF TO cl_salv_column_table,\r\n      lo_events   TYPE REF TO cl_salv_events_table,\r\n      lv_fname    TYPE LVC_FNAME.\r\n\r\n    IF go_alv IS NOT BOUND.\r\n      TRY.\r\n          cl_salv_table=&gt;factory(\r\n             IMPORTING\r\n               r_salv_table = go_alv\r\n             CHANGING\r\n               t_table = gt_alv_data ).\r\n        CATCH cx_salv_msg .\r\n          MESSAGE '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 ALV' TYPE 'E'.\r\n      ENDTRY.\r\n\r\n      go_alv-&gt;set_screen_status( EXPORTING\r\n                                 REPORT   = 'ZTMP1'\r\n                                 pfstatus = 'SALV_TABLE_STANDARD'\r\n                                 set_functions = cl_salv_model_base=&gt;c_functions_none ).\r\n\r\n      \" \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u0439\r\n      TRY.\r\n        lo_events = go_alv-&gt;get_event( ).\r\n        SET HANDLER on_added_function FOR lo_events.\r\n        SET HANDLER on_link_click FOR lo_events.\r\n      CATCH CX_SALV_NOT_FOUND.\r\n        EXIT.\r\n      ENDTRY.\r\n\r\n      \" \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043a\u043e\u043b\u043e\u043d\u043e\u043a\r\n      TRY.\r\n        lo_columns = go_alv-&gt;get_columns( ).\r\n        lo_columns-&gt;set_optimize( abap_true ).\r\n        lo_columns-&gt;set_cell_type_column( 'T_CELL_TYPE' ).\r\n\r\n        lo_column ?= lo_columns-&gt;get_column( 'MANDT' ).\r\n        lo_column-&gt;set_technical( abap_true ).\r\n\r\n        lo_column ?= lo_columns-&gt;get_column( 'CARRID' ).\r\n        lo_column-&gt;set_key( abap_false ).\r\n\r\n        lo_column ?= lo_columns-&gt;get_column( 'CONNID' ).\r\n        lo_column-&gt;set_key( abap_false ).\r\n\r\n        lo_column ?= lo_columns-&gt;get_column( gv_icon_field ).\r\n        set_column_key_color( gv_icon_field ).\r\n\r\n        lo_columns-&gt;set_color_column( 'T_COLOR' ).\r\n\r\n        lv_fname = gv_field.\r\n        lo_columns-&gt;set_column_position( EXPORTING columnname = lv_fname POSITION = 2 ).\r\n        set_column_key_color( lv_fname ).\r\n      CATCH CX_SALV_NOT_FOUND CX_SALV_DATA_ERROR.\r\n        EXIT.\r\n      ENDTRY.\r\n\r\n      \" \u0421\u0432\u0435\u0440\u043d\u0435\u043c \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438\r\n      hide_all( ).\r\n      go_alv-&gt;display( ).\r\n    ELSE. \" ALV \u0441\u043e\u0437\u0434\u0430\u043d - \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\r\n      lv_fname = gv_field.\r\n      lo_columns = go_alv-&gt;get_columns( ).\r\n      lo_columns-&gt;set_column_position(\r\n        EXPORTING\r\n          columnname = lv_fname\r\n          POSITION   = 2\r\n      ).\r\n\r\n      set_column_key_color( lv_fname ).\r\n\r\n      lo_columns-&gt;set_column_position(\r\n        EXPORTING\r\n          columnname = gv_icon_field\r\n          POSITION   = 1\r\n      ).\r\n\r\n      hide_all( ).\r\n      go_alv-&gt;refresh( ).\r\n    ENDIF.\r\n  ENDMETHOD.\r\n\r\n  METHOD hide_all.\r\n    DATA: lv_index TYPE I,\r\n          lv_cond  TYPE STRING.\r\n\r\n    FIELD-SYMBOLS: &lt;fs_line&gt; TYPE ty_spfli_ex,\r\n                   &lt;fs_field&gt; TYPE ANY,\r\n                   &lt;fs_key&gt;   TYPE ANY,\r\n                   &lt;fs_new_line&gt; TYPE ty_spfli_ex.\r\n\r\n    DATA: ls_type  TYPE SALV_S_INT4_COLUMN.\r\n\r\n    ls_type-columnname = gv_icon_field.\r\n    ls_type-VALUE = IF_SALV_C_CELL_TYPE=&gt;HOTSPOT.\r\n\r\n    SORT gt_all_data BY (gv_field).\r\n    CLEAR: gt_alv_data.\r\n    LOOP AT gt_all_data ASSIGNING &lt;fs_line&gt;.\r\n      UNASSIGN &lt;fs_field&gt;.\r\n      ASSIGN COMPONENT gv_field OF STRUCTURE &lt;fs_line&gt; TO &lt;fs_field&gt;.\r\n      CHECK &lt;fs_field&gt; IS ASSIGNED.\r\n      IF ( &lt;fs_key&gt; IS NOT ASSIGNED ) OR ( &lt;fs_key&gt; &lt;&gt; &lt;fs_field&gt; ).\r\n        ASSIGN &lt;fs_field&gt; TO &lt;fs_key&gt;.\r\n        APPEND INITIAL LINE TO gt_alv_data ASSIGNING &lt;fs_new_line&gt;.\r\n        MOVE-CORRESPONDING &lt;fs_line&gt; TO &lt;fs_new_line&gt;.\r\n        lv_index = 0.\r\n        lv_cond = &lt;fs_field&gt;.\r\n        CONCATENATE gv_field ' = `' lv_cond '`' INTO lv_cond.\r\n        LOOP AT gt_all_data TRANSPORTING NO FIELDS WHERE (lv_cond).\r\n          lv_index = lv_index + 1.\r\n          IF lv_index &gt; 1.\r\n            &lt;fs_new_line&gt;-icon_field = icon_positive.\r\n            APPEND ls_type TO &lt;fs_new_line&gt;-t_cell_type.\r\n            EXIT.\r\n          ENDIF.\r\n        ENDLOOP.\r\n      ENDIF.\r\n    ENDLOOP.\r\n\r\n    go_alv-&gt;refresh( ).\r\n  ENDMETHOD.\r\n\r\n  METHOD show_by.\r\n    DATA:\r\n      lv_index TYPE I,\r\n      s_scol   TYPE lvc_s_scol,\r\n      lv_cond  TYPE STRING,\r\n      ls_line  TYPE ty_spfli_ex.\r\n\r\n    FIELD-SYMBOLS &lt;fs_line&gt; TYPE ty_spfli_ex.\r\n\r\n    DATA: ls_type  TYPE SALV_S_INT4_COLUMN.\r\n\r\n    ls_type-columnname = gv_icon_field.\r\n    ls_type-VALUE = IF_SALV_C_CELL_TYPE=&gt;HOTSPOT.\r\n\r\n    SORT gt_all_data BY (gv_field).\r\n    lv_cond = i_field.\r\n    CONCATENATE gv_field ` = '` lv_cond `'` INTO lv_cond.\r\n\r\n    lv_index = 0.\r\n    LOOP AT gt_all_data INTO ls_line WHERE (lv_cond).\r\n      lv_index = lv_index + 1.\r\n      IF lv_index &gt; 1.\r\n        CLEAR s_scol.\r\n        s_scol-color-col = 4.\r\n        APPEND s_scol TO ls_line-t_color.\r\n        s_scol-color-col = 4.\r\n        s_scol-color-int = 1.\r\n        s_scol-fname = gv_icon_field.\r\n        APPEND s_scol TO ls_line-t_color.\r\n        s_scol-color-col = 4.\r\n        s_scol-color-int = 1.\r\n        s_scol-fname = gv_field.\r\n        APPEND s_scol TO ls_line-t_color.\r\n        INSERT ls_line INTO gt_alv_data INDEX i_row + lv_index - 1.\r\n       ENDIF.\r\n    ENDLOOP.\r\n\r\n    READ TABLE gt_alv_data INDEX i_row ASSIGNING &lt;fs_line&gt;.\r\n    IF &lt;fs_line&gt; IS ASSIGNED.\r\n      &lt;fs_line&gt;-icon_field = icon_negative.\r\n      APPEND ls_type TO &lt;fs_line&gt;-t_cell_type.\r\n    ENDIF.\r\n\r\n    go_alv-&gt;refresh( ).\r\n  ENDMETHOD.\r\n\r\n  METHOD hide_by.\r\n    DATA: lv_cond TYPE STRING.\r\n    FIELD-SYMBOLS &lt;fs_line&gt; TYPE ty_spfli_ex.\r\n\r\n    DATA: ls_type  TYPE SALV_S_INT4_COLUMN.\r\n\r\n    ls_type-columnname = gv_icon_field.\r\n    ls_type-VALUE = IF_SALV_C_CELL_TYPE=&gt;HOTSPOT.\r\n\r\n    lv_cond = i_field.\r\n    CONCATENATE '`' lv_cond '`' INTO lv_cond.\r\n    CONCATENATE gv_field '=' lv_cond 'AND' gv_icon_field 'IS INITIAL' INTO lv_cond SEPARATED BY SPACE.\r\n    DELETE gt_alv_data WHERE (lv_cond).\r\n\r\n    READ TABLE gt_alv_data INDEX i_row ASSIGNING &lt;fs_line&gt;.\r\n    IF &lt;fs_line&gt; IS ASSIGNED.\r\n      &lt;fs_line&gt;-icon_field = icon_positive.\r\n      APPEND ls_type TO &lt;fs_line&gt;-t_cell_type.\r\n    ENDIF.\r\n\r\n    go_alv-&gt;refresh( ).\r\n  ENDMETHOD.\r\n\r\n  METHOD set_key.\r\n    gv_field = i_field.\r\n    IF gv_first_field IS INITIAL.\r\n      gv_first_field = i_field.\r\n    ENDIF.\r\n  ENDMETHOD.\r\n\r\n  METHOD set_icon.\r\n    gv_icon_field = i_icon.\r\n  ENDMETHOD.\r\n\r\n  METHOD on_link_click.\r\n    FIELD-SYMBOLS: &lt;fs_line&gt; TYPE ty_spfli_ex,\r\n                   &lt;fs_field&gt; TYPE ANY.\r\n    READ TABLE gt_alv_data INDEX row ASSIGNING &lt;fs_line&gt;.\r\n    IF &lt;fs_line&gt; IS ASSIGNED.\r\n      ASSIGN COMPONENT gv_field OF STRUCTURE &lt;fs_line&gt; TO &lt;fs_field&gt;.\r\n      CHECK &lt;fs_field&gt; IS ASSIGNED.\r\n      IF &lt;fs_line&gt;-icon_field = icon_negative.\r\n        hide_by( EXPORTING i_field = &lt;fs_field&gt; i_row = row ).\r\n      ELSEIF &lt;fs_line&gt;-icon_field = icon_positive.\r\n        show_by( EXPORTING i_field = &lt;fs_field&gt; i_row = row ).\r\n      ENDIF.\r\n    ENDIF.\r\n  ENDMETHOD.\r\n\r\n  METHOD on_added_function.\r\n    CASE e_salv_function.\r\n      WHEN 'FORW'.\r\n        FORWARD( ).\r\n      WHEN 'HIALL'.\r\n        hide_all( ).\r\n        show_alv( ).\r\n      WHEN 'SHALL'.\r\n        show_all( ).\r\n    ENDCASE.\r\n  ENDMETHOD.\r\n\r\n  METHOD FORWARD.\r\n    DATA:\r\n      lo_descr TYPE REF TO cl_abap_structdescr,\r\n      lv_flag  TYPE abap_bool,\r\n      lv_lines TYPE I,\r\n      lv_fname TYPE LVC_FNAME,\r\n      lv_prev  TYPE STRING,\r\n      ls_descr TYPE abap_compdescr.\r\n\r\n    lv_fname = gv_field.\r\n    set_column_key_color( i_column = lv_fname i_clear = abap_true ).\r\n\r\n    lo_descr ?= cl_abap_structdescr=&gt;describe_by_name( 'ty_spfli_ex' ).\r\n    lv_lines = LINES( lo_descr-&gt;components ).\r\n    LOOP AT lo_descr-&gt;components INTO ls_descr.\r\n      IF ( ls_descr-NAME = gv_field ) AND ( sy-tabix &lt;&gt; lv_lines ).\r\n        lv_flag = abap_true.\r\n        CONTINUE.\r\n      ELSEIF ( sy-tabix = lv_lines ) AND ( ls_descr-NAME = gv_field ).\r\n        set_key( gv_first_field ).\r\n        lv_fname = gv_first_field.\r\n        set_column_key_color( i_column = lv_fname ).\r\n        show_alv( ).\r\n        EXIT.\r\n      ENDIF.\r\n      IF lv_flag = abap_true.\r\n        set_key( ls_descr-NAME ).\r\n        lv_fname = ls_descr-NAME.\r\n        set_column_key_color( i_column = lv_fname ).\r\n        show_alv( ).\r\n        EXIT.\r\n      ENDIF.\r\n      lv_prev = ls_descr-NAME.\r\n    ENDLOOP.\r\n  ENDMETHOD.\r\n\r\n  METHOD show_all.\r\n    DATA: lv_index TYPE I,\r\n          s_scol   TYPE lvc_s_scol,\r\n          lv_cond  TYPE STRING.\r\n\r\n    FIELD-SYMBOLS: &lt;fs_line&gt; TYPE ty_spfli_ex,\r\n                   &lt;fs_field&gt; TYPE ANY,\r\n                   &lt;fs_key&gt;   TYPE ANY,\r\n                   &lt;fs_new_line&gt; TYPE ty_spfli_ex.\r\n\r\n    DATA: ls_type  TYPE SALV_S_INT4_COLUMN.\r\n\r\n    ls_type-columnname = gv_icon_field.\r\n    ls_type-VALUE = IF_SALV_C_CELL_TYPE=&gt;HOTSPOT.\r\n\r\n    SORT gt_all_data BY (gv_field).\r\n    CLEAR: gt_alv_data.\r\n    LOOP AT gt_all_data ASSIGNING &lt;fs_line&gt;.\r\n      UNASSIGN &lt;fs_field&gt;.\r\n      ASSIGN COMPONENT gv_field OF STRUCTURE &lt;fs_line&gt; TO &lt;fs_field&gt;.\r\n      CHECK &lt;fs_field&gt; IS ASSIGNED.\r\n\r\n      APPEND INITIAL LINE TO gt_alv_data ASSIGNING &lt;fs_new_line&gt;.\r\n      MOVE-CORRESPONDING &lt;fs_line&gt; TO &lt;fs_new_line&gt;.\r\n      IF ( &lt;fs_key&gt; IS NOT ASSIGNED ) OR ( &lt;fs_key&gt; &lt;&gt; &lt;fs_field&gt; ).\r\n        ASSIGN &lt;fs_field&gt; TO &lt;fs_key&gt;.\r\n        lv_index = 0.\r\n        lv_cond = &lt;fs_field&gt;.\r\n        CONCATENATE gv_field ' = `' lv_cond '`' INTO lv_cond.\r\n        LOOP AT gt_all_data TRANSPORTING NO FIELDS WHERE (lv_cond).\r\n          lv_index = lv_index + 1.\r\n          IF lv_index &gt; 1.\r\n            &lt;fs_new_line&gt;-icon_field = icon_negative.\r\n            APPEND ls_type TO &lt;fs_new_line&gt;-t_cell_type.\r\n            EXIT.\r\n          ENDIF.\r\n        ENDLOOP.\r\n      ELSEIF ( &lt;fs_key&gt; IS ASSIGNED ) AND ( &lt;fs_key&gt; = &lt;fs_field&gt; ).\r\n        CLEAR s_scol.\r\n        s_scol-color-col = 4.\r\n        APPEND s_scol TO &lt;fs_new_line&gt;-t_color.\r\n        s_scol-color-col = 4.\r\n        s_scol-color-int = 1.\r\n        s_scol-fname = gv_icon_field.\r\n        APPEND s_scol TO &lt;fs_new_line&gt;-t_color.\r\n        s_scol-color-col = 4.\r\n        s_scol-color-int = 1.\r\n        s_scol-fname = gv_field.\r\n        APPEND s_scol TO &lt;fs_new_line&gt;-t_color.\r\n      ENDIF.\r\n    ENDLOOP.\r\n\r\n    go_alv-&gt;refresh( ).\r\n  ENDMETHOD.\r\n\r\nENDCLASS.\r\n\r\nSTART-OF-SELECTION.\r\n  lcl_report=&gt;get_data( ).\r\n  lcl_report=&gt;set_key( 'CARRID' ).\r\n  lcl_report=&gt;set_icon( 'ICON_FIELD' ).\r\n  lcl_report=&gt;show_alv( ).<\/pre>\n","protected":false},"excerpt":{"rendered":"<p>\u041f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0435 ALV \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0432 \u0432\u0438\u0434\u0435 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 ME59N. \u041d\u0438\u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435\u0447\u0442\u043e \u043f\u043e\u0434\u043e\u0431\u043d\u043e\u0435.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[308],"tags":[],"_links":{"self":[{"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/posts\/862"}],"collection":[{"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/comments?post=862"}],"version-history":[{"count":8,"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/posts\/862\/revisions"}],"predecessor-version":[{"id":6482,"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/posts\/862\/revisions\/6482"}],"wp:attachment":[{"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/media?parent=862"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/categories?post=862"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/abap-blog.ru\/wp-json\/wp\/v2\/tags?post=862"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}