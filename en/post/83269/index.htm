<!DOCTYPE html>
<html lang="en" data-vue-meta="%7B%22lang%22:%7B%22ssr%22:%22en%22%7D%7D">
<head >
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0,viewport-fit=cover">
  <title>Принцип подстановки Барбары Лисков / Habr</title>
  <style>
    /* cyrillic-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSxf6TF0.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveQhf6TF0.woff2) format('woff2');
      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSBf6TF0.woff2) format('woff2');
      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveRhf6.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }
  </style>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.961b6771.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.881c3e9d.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.204e3e20.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.fdbba7e2.js" as="script">
  <link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.961b6771.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.204e3e20.css">
  <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/en-compiled.66c1ca62e1b536e255d334fce9a49f38.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({en: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
  
  <script data-vue-meta="ssr" src="/js/ads.js" onload="window['zhY4i4nJ9K'] = true" data-vmid="checkad"></script><script data-vue-meta="ssr" type="application/ld+json" data-vmid="ldjson-schema">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/post\/83269\/"},"headline":"Принцип подстановки Барбары Лисков","datePublished":"2010-02-08T10:39:35+03:00","dateModified":"2016-06-24T18:04:23+03:00","author":{"@type":"Person","name":"Василий Меленчук"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Привет, хабрачеловеки!  Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования кла...","url":"https:\/\/habr.com\/ru\/post\/83269\/#post-content-body","about":["h_programming","f_develop"],"image":["https:\/\/habrastorage.org\/getpro\/habr\/post_images\/9b8\/71b\/a0b\/9b871ba0b4fe575aa9d896a6d642c55a.jpg"]}</script>
  <script src="//www.googletagservices.com/tag/js/gpt.js" async></script>
  <style>.grecaptcha-badge{visibility: hidden;}</style>
  <meta name="habr-version" content="2.50.0">
  
  <meta data-vue-meta="ssr" property="fb:app_id" content="444736788986613"><meta data-vue-meta="ssr" property="fb:pages" content="472597926099084"><meta data-vue-meta="ssr" name="twitter:card" content="summary_large_image"><meta data-vue-meta="ssr" name="twitter:site" content="@habr_eng"><meta data-vue-meta="ssr" property="og:site_name" content="Habr" data-vmid="og:site_name"><meta data-vue-meta="ssr" property="og:title" content="Принцип подстановки Барбары Лисков" data-vmid="og:title"><meta data-vue-meta="ssr" name="twitter:title" content="Принцип подстановки Барбары Лисков" data-vmid="twitter:title"><meta data-vue-meta="ssr" name="aiturec:title" content="Принцип подстановки Барбары Лисков" data-vmid="aiturec:title"><meta data-vue-meta="ssr" name="description" content="Привет, хабрачеловеки!

Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете..." data-vmid="description"><meta data-vue-meta="ssr" itemprop="description" content="Привет, хабрачеловеки!

Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете..." data-vmid="description:itemprop"><meta data-vue-meta="ssr" property="og:description" content="Привет, хабрачеловеки!

Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете..." data-vmid="og:description"><meta data-vue-meta="ssr" name="twitter:description" content="Привет, хабрачеловеки!

Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете..." data-vmid="twitter:description"><meta data-vue-meta="ssr" property="aiturec:description" content="Привет, хабрачеловеки!

Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете..." data-vmid="aiturec:description"><meta data-vue-meta="ssr" itemprop="image" content="https://habr.com/share/publication/83269/de21b7cbdfc420c7069af3136ecf1af9/" data-vmid="image:itemprop"><meta data-vue-meta="ssr" property="og:image" content="https://habr.com/share/publication/83269/de21b7cbdfc420c7069af3136ecf1af9/" data-vmid="og:image"><meta data-vue-meta="ssr" property="og:image:width" content="1200" data-vmid="og:image:width"><meta data-vue-meta="ssr" property="og:image:height" content="630" data-vmid="og:image:height"><meta data-vue-meta="ssr" property="aiturec:image" content="https://habr.com/share/publication/83269/de21b7cbdfc420c7069af3136ecf1af9/" data-vmid="aiturec:image"><meta data-vue-meta="ssr" name="twitter:image" content="https://habr.com/share/publication/83269/de21b7cbdfc420c7069af3136ecf1af9/" data-vmid="twitter:image"><meta data-vue-meta="ssr" property="vk:image" content="https://habr.com/share/publication/83269/de21b7cbdfc420c7069af3136ecf1af9/" data-vmid="vk:image"><meta data-vue-meta="ssr" property="aiturec:item_id" content="83269" data-vmid="aiturec:item_id"><meta data-vue-meta="ssr" property="aiturec:datetime" content="2010-02-08T07:39:35.000Z" data-vmid="aiturec:datetime"><meta data-vue-meta="ssr" property="og:type" content="article" data-vmid="og:type"><meta data-vue-meta="ssr" property="og:locale" content="ru_RU" data-vmid="og:locale"><meta data-vue-meta="ssr" name="keywords" content="ооп, проектирование, классы, принцип подстановки, c++, наследование">
  <link data-vue-meta="ssr" href="https://habr.com/en/post/83269/" rel="og:url" data-vmid="og:url"><link data-vue-meta="ssr" href="https://habr.com/en/rss/post/83269/?fl=en" type="application/rss+xml" title="" rel="alternate" name="rss"><link data-vue-meta="ssr" href="https://habr.com/ru/post/83269/" rel="canonical" data-vmid="canonical"><link data-vue-meta="ssr" data-vmid="hreflang"><link data-vue-meta="ssr" image_src="image" href="https://habr.com/share/publication/83269/de21b7cbdfc420c7069af3136ecf1af9/" data-vmid="image:href">
  <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
  <meta name="msapplication-TileColor" content="#629FBC">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="16x16"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png"
  >
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="32x32"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="76x76"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="120x120"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="152x152"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="180x180"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="256x256"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png"
  >
  <link
    rel="mask-icon"
    color="#77a2b6"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg"
  >
  <link
    crossorigin="use-credentials"
    href="/manifest.webmanifest"
    rel="manifest"
  >
</head>
<body>


<div id="app" data-server-rendered="true" data-async-called="true"><div class="tm-layout__wrapper"><!----> <div></div> <!----> <header class="tm-header"><div class="tm-page-width"><div class="tm-header__container"><!----> <span class="tm-header__logo-wrap"><a href="/en/" class="tm-header__logo tm-header__logo_en"><svg height="16" width="16" class="tm-svg-img tm-header__icon"><title>Habr</title> <use xlink:href="/img/habr-logo-en.svg#logo"></use></svg></a> <span class="tm-header__beta-sign" style="display:none;">β</span></span> <!----> <a href="/en/sandbox/start/" class="tm-header__become-author-btn">
            How to become an author
          </a> <!----> <!----> <!----></div></div></header> <div class="tm-layout"><div class="tm-page-progress-bar"></div> <div data-menu-sticky="true" class="tm-base-layout__header tm-base-layout__header_is-sticky"><div class="tm-page-width"><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!----> <a href="/en/all/" class="tm-main-menu__item">
        All streams
      </a> <a href="/en/flows/develop/" class="tm-main-menu__item">
          Development
        </a><a href="/en/flows/admin/" class="tm-main-menu__item">
          Admin
        </a><a href="/en/flows/design/" class="tm-main-menu__item">
          Design
        </a><a href="/en/flows/management/" class="tm-main-menu__item">
          Management
        </a><a href="/en/flows/marketing/" class="tm-main-menu__item">
          Marketing
        </a><a href="/en/flows/popsci/" class="tm-main-menu__item">
          PopSci
        </a></nav></div></div> <div class="tm-header-user-menu tm-base-layout__user-menu"><a href="/en/search/" class="tm-header-user-menu__item tm-header-user-menu__search"><svg height="24" width="24" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark"><title>Search</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#search"></use></svg></a> <!----> <!----> <!----> <div class="tm-header-user-menu__item tm-header-user-menu__user_desktop"><div class="tm-dropdown"><div class="tm-dropdown__head"><svg height="24" width="24" data-test-id="menu-toggle-guest" class="tm-svg-img tm-header-user-menu__icon"><title>Profile</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#header-user"></use></svg> <!----></div> <!----></div> <!----></div> <!----></div></div></div></div> <!----> <div class="tm-page-width"></div> <main class="tm-layout__container"><div hl="en" data-async-called="true" class="tm-page"><div class="tm-page-width"><!----> <div class="tm-page__wrapper"><div class="tm-page__main tm-page__main_has-sidebar"><div class="pull-down"><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg height="24" width="24" class="tm-svg-img pull-down__arrow"><title>Pull to refresh</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#pull-arrow"></use></svg></div></div> <div class="tm-article-presenter"> <div class="tm-article-presenter__body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><div class="tm-article-presenter__header"> <div class="tm-article-snippet tm-article-presenter__snippet"><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/en/users/basilisk/" title="basilisk" class="tm-user-info__userpic"><div class="tm-entity-image"><img alt="" height="24" loading="lazy" src="//habrastorage.org/r/w32/getpro/habr/avatars/377/4dd/c28/3774ddc28eda4265cbff8728481d59d4.jpg" width="24" class="tm-entity-image__pic"></div></a> <span class="tm-user-info__user"><a href="/en/users/basilisk/" class="tm-user-info__username">
      basilisk
    </a> </span></span> <span class="tm-article-snippet__datetime-published"><time datetime="2010-02-08T07:39:35.000Z" title="2010-02-08, 10:39">8  February  2010 at 10:39</time></span></div> <!----></div> <h1 lang="ru" class="tm-article-snippet__title tm-article-snippet__title_h1"><span>Принцип подстановки Барбары Лисков</span></h1> <div class="tm-article-snippet__hubs"><span class="tm-article-snippet__hubs-item"><a href="/en/hub/programming/" class="tm-article-snippet__hubs-item-link"><span>Programming</span> <span title="Core hub" class="tm-article-snippet__profiled-hub">*</span></a></span></div> <!----> <!----> <!----></div></div> <!----> <div data-gallery-root="" lang="ru" class="tm-article-body"><div id="post-content-body" class="article-formatted-body article-formatted-body_version-1"><div xmlns="http://www.w3.org/1999/xhtml">Привет, хабрачеловеки!<br/>
<br/>
Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете как-то негусто. Имеются формулировки вида:<br/>
<br/>
<em>«Пусть q(x) является свойством верным относительно объектов x некоторого типа T. Тогда q(y) также должно быть верным для объектов y типа S, где S является подтипом типа T.» </em> © <a href="http://ru.wikipedia.org/wiki/Принцип_подстановки_Барбары_Лисков">Wikipedia</a> <br/>
<br/>
Но они <strike>выносят мой мозг</strike> меня совершенно не радуют.<br/>
<br/>
Если хочется услышать объяснение этой <strike>хрени</strike> умной фразы — прошу под кат.<br/>
<a name="habracut"></a><br/>
Итак, принцип подстановки Барбары Лисков. Он же Liskov Substitution Principle. Он же LSP. Простыми словами принцип звучит так:<br/>
<br/>
<strong>Наследующий класс должен дополнять, а не замещать поведение базового класса.</strong><br/>
<br/>
<h4>1. Что это значит на практике?</h4><br/>
Если у нас есть класс A (не виртуальный, а вполне реально используемый в коде) и отнаследованный от него класс B, то если мы заменим все использования класса A на B, ничего не должно измениться в работе программы. Ведь класс B всего лишь расширяет функционал класса A. Если эта проверка работает, то поздравляю: ваша программа соответствует принципу подстановки Лисков! Если нет, стоит <strike>уволить ведущего программиста</strike> задуматься: «а правильно ли спроектированы классы?». <br/>
<br/>
<h4>2. Ну и зачем это нужно?</h4><br/>
Надеюсь, всем понятно, что принцип Лисков — это из области теории ООП. На практике, никто не заставляет следовать ему под дулом пистолета. Более того, могут быть случаи, когда следовать ему сложно и никому не нужно. <br/>
<br/>
Словом, прям как с валидным HTML: сайт прошёл проверку на W3C валидаторе — плюсадин в карму верстальщика. Не прошёл — нужно чётко понимать почему он не прошёл: это ошибка или же очередной выкрунтас другими способами реализовать невозможно?<br/>
<br/>
Из этого можно сделать выводы:<br/>
* следование принципу подстановки Лисков делает ваш проект ближе к духу ООП;<br/>
* это позволит избежать ряда ошибок (о них ниже).<br/>
<br/>
<h4>3. Пример</h4><br/>
Я решил не изобретать очередной велосипед, а к тому же мне очень понравился пример <a href="http://www.eventhelix.com/RealtimeMantra/Object_Oriented/liskov_substitution_principle.htm">отсюда</a>. Его то я и буду использовать (с лёгкими модификациями).<br/>
<br/>
Итак, ситуация: мы проектируем программку для управления термостатами. Программа должна уметь работать с несколькими разными моделями устройств. Программа циклически проверяет температуру и пытается выправить её до требуемой. Саму программу мы, разумеется, писать не будем, а остановимся на проектировании иерархии классов-интерфейсов для термостатов.<br/>
<br/>
<h5>3.1. Дебют</h5><br/>
Первым делом — базовый класс. У него должны быть следующие методы:<br/>
* <strong>InitializeDevice</strong>: инициализация подключенного термостата. Понятное дело, метод pure virtual: для разных устройств могут потребоваться разные предварительные ласки, чтобы оно заработало как следует.<br/>
* <strong>Get/Set Reference</strong>: геттер/сеттер для требуемой (опорной) температуры. Вполне себе конкретные методы (не виртуальные) для установки переменной.<br/>
* <strong>GetTemperature</strong>: чтение температуры из устройства. Опять чисто вирутальный метод.<br/>
* <strong>AdjustTemperature</strong>: снова чисто виртуальный метод. Собственно, для установки температуры.<br/>
<br/>
Опишем это более понятным языком, то есть C++:<br/>
<code><font color="black"><ol>
<li><font color="#0000ff">class</font> TemperatureController</li>
<li>{</li>
<li>  <font color="#008000">// Переменная для хранения опорной температуры</font></li>
<li>  <font color="#0000ff">int</font> m_referenceTemperature;</li>
<li><font color="#0000ff">public</font>:</li>
<li>    </li>
<li>  <font color="#0000ff">int</font> GetReferenceTemperature() <font color="#0000ff">const</font></li>
<li>  {</li>
<li>   <font color="#0000ff">return</font> m_referenceTemperature;</li>
<li>  }</li>
<li>  </li>
<li>  <font color="#0000ff">void</font> SetReferenceTemperature(<font color="#0000ff">int</font> referenceTemperature)</li>
<li>  {</li>
<li>    m_referenceTemperature = referenceTemperature;</li>
<li>  }</li>
<li>  </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">int</font> GetTemperature() <font color="#0000ff">const</font> = 0;</li>
<li> </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">void</font> AdjustTemperature(<font color="#0000ff">int</font> temperature) = 0;</li>
<li> </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">void</font> InitializeDevice() = 0;</li>
<li>};</li>
</ol></font></code><br/>
<br/>
<h5>3.2. Миттельшпиль</h5><br/>
А теперь нарисуем 2 конкретных класса для работы с «реальными» термостатами широко известных и популярных фирм Brand_A и Brand_B (Как? Вы их не знаете? Я тоже):<br/>
<code><font color="black"><ol>
<li><font color="#0000ff">class</font> Brand_A_TemperatureController : <font color="#0000ff">public</font> TemperatureController</li>
<li>{</li>
<li><font color="#0000ff">public</font>:</li>
<li>  </li>
<li>  <font color="#0000ff">int</font> GetTemperature() <font color="#0000ff">const</font></li>
<li>  {</li>
<li>   <font color="#0000ff">return</font> (io_read(TEMP_REGISTER));</li>
<li>  }</li>
<li> </li>
<li>  <font color="#0000ff">void</font> AdjustTemperature(<font color="#0000ff">int</font> temperature)</li>
<li>  {</li>
<li>    io_write(TEMP_CHANGE_REGISTER, temperature);</li>
<li>  }</li>
<li> </li>
<li>  <font color="#0000ff">void</font> InitializeDevice()</li>
<li>  {</li>
<li>    <font color="#008000">// Уговариваем девайс дружить с нами</font></li>
<li>  }</li>
<li>};</li>
<li> </li>
<li><font color="#0000ff">class</font> Brand_B_TemperatureController : <font color="#0000ff">public</font> TemperatureController</li>
<li>{</li>
<li><font color="#0000ff">public</font>:</li>
<li>  </li>
<li>  <font color="#0000ff">int</font> GetTemperature() <font color="#0000ff">const</font></li>
<li>  {</li>
<li>   <font color="#0000ff">return</font> (io_read(STATUS_REGISTER) &amp; TEMP_MASK);</li>
<li>  }</li>
<li> </li>
<li>  <font color="#0000ff">void</font> AdjustTemperature(<font color="#0000ff">int</font> temperature)</li>
<li>  {</li>
<li>   <font color="#008000">// Уж больно хитрый девайс попался: ему температуру в надо </font></li>
<li>   <font color="#008000">// Кельвинах предоставить! Хорошо, что не в Фаренгейтах.</font></li>
<li>   io_write(CHANGE_REGISTER, temperature + 273);</li>
<li>  } </li>
<li> </li>
<li>  <font color="#0000ff">void</font> InitializeDevice()</li>
<li>  {</li>
<li>   <font color="#008000">// Склоняем термостат к сотрудничеству</font></li>
<li>  }</li>
<li>};</li>
</ol></font></code><br/>
Вуаля! Осталось написать пару строчек в нашу программу:<br/>
<code><font color="black"><ol>
<li>. . .</li>
<li>TemperatureController *pTempCtrl = GetNextTempController();</li>
<li>pTempCtrl->SetReferenceTemperature(10);</li>
<li>pTempCtrl->InitializeDevice();</li>
<li>. . .</li>
</ol></font></code><br/>
И всё круто! Программка работает, заказчик доволен, мы читаем Хабр.<br/>
<br/>
<h5>3.3. Эндшпиль</h5><br/>
Проходит какое-то время и маркетологи (они не зря хлеб же едят!) придумали новый стильный термостат с большим сенсорным экраном и FM тюнером. Наш заказчик, приобрёв новый девайс, снова объявляется и с порога заявляет: «Хочу, понимаешь ли, чтобы программа поддерживала мою прелессссть!».<br/>
<br/>
Ок, добавим ещё один девайс. Написать Brand_C_TemperatureController нам же труда не составит? В процессе доработки неожиданно выясняется, что новый термостат кроме своего сенсорного экрана имеет и продвинутую автоматику: т.е. его не надо вручную проверять и подгонять температуры. Достаточно скормить один раз требуемую температуру (у нас это ReferenceTemperature), а всё остальное он сделает сам. Это и хорошо (меньше возни), и плохо (наши классы не особо то приспособлены для такой ситуации). <br/>
<br/>
Выход находим в 5 минут: Get/Set Reference в базовом классе объявляем виртуальными, а в классе для нового Brand_C термостата мы просто переопределяем эти методы для прямого чтения/записи температуры в термостат. Красота, не так ли? Сказано — сделано:<br/>
<br/>
<code><font color="black"><ol>
<li><font color="#0000ff">class</font> TemperatureController</li>
<li>{</li>
<li>  <font color="#008000">// Переменная для хранения опорной температуры</font></li>
<li>  <font color="#0000ff">int</font> m_referenceTemperature;</li>
<li><font color="#0000ff">public</font>:</li>
<li> </li>
<li>  <font color="#008000">// Геттер/сеттер теперь виртуальный</font></li>
<li>  <font color="#008000">// Наш новый концепт</font></li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">int</font> GetReferenceTemperature() <font color="#0000ff">const</font></li>
<li>  {</li>
<li>   <font color="#0000ff">return</font> m_referenceTemperature;</li>
<li>  }</li>
<li>  </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">void</font> SetReferenceTemperature(<font color="#0000ff">int</font> referenceTemperature)</li>
<li>  {</li>
<li>    m_referenceTemperature = referenceTemperature;</li>
<li>  }</li>
<li>  </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">int</font> GetTemperature() <font color="#0000ff">const</font> = 0;</li>
<li> </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">void</font> AdjustTemperature(<font color="#0000ff">int</font> temperature) = 0;</li>
<li> </li>
<li>  <font color="#0000ff">virtual</font> <font color="#0000ff">void</font> InitializeDevice() = 0; </li>
<li>};</li>
<li> </li>
<li><font color="#0000ff">class</font> Brand_C_TemperatureController : <font color="#0000ff">public</font> TemperatureController</li>
<li>{</li>
<li><font color="#0000ff">public</font>:</li>
<li>  </li>
<li>  <font color="#008000">// Геттер/сеттер общается непосредственно с девайсом</font></li>
<li>  <font color="#0000ff">int</font> GetReferenceTemperature() <font color="#0000ff">const</font></li>
<li>  {</li>
<li>   <font color="#0000ff">return</font> (io_read(REFERENCE_REGISTER);</li>
<li>  }</li>
<li>  </li>
<li>  <font color="#0000ff">void</font> SetReferenceTemperature(<font color="#0000ff">int</font> referenceTemperature)</li>
<li>  {</li>
<li>    io_write(REFERENCE_REGISTER, referenceTemperature);</li>
<li>  }</li>
<li>  </li>
<li>  <font color="#0000ff">int</font> GetTemperature() <font color="#0000ff">const</font></li>
<li>  {</li>
<li>   <font color="#0000ff">return</font> (io_read(TEMP_MONITORING_REGISTER));</li>
<li>  }</li>
<li> </li>
<li>  <font color="#0000ff">void</font> AdjustTemperature(<font color="#0000ff">int</font> temperature)</li>
<li>  {</li>
<li>   <font color="#008000">// Нафиг ненужный метод: мы температурой управляем в другом месте</font></li>
<li>  } </li>
<li>  <font color="#0000ff">void</font> InitializeDevice()</li>
<li>  {</li>
<li>   <font color="#008000">// Тут шаманские пляски, чтобы термостат ниспослал нам хорошую погоду</font></li>
<li>  }  </li>
<li>};</li>
</ol></font></code><br/>
По закону жанра, становится понятно, что сейчас будет кульминация. Самое время сказать: «Шах и мат!»<br/>
<br/>
<h5>3.4. Ой, а что это было?</h5><br/>
Перед разбором полётов ещё раз вспомним принцип подстановки Лисков: <strong>Наследующий класс должен дополнять, а не замещать поведение базового класса.</strong> А что мы только что сделали? Правильно! Мы <em>заместили</em> методы GetReferenceTemperature и SetReferenceTemperature. Мы <em>изменили</em> поведение класса. Чем это чревато? Процитирую ещё раз использование наших классов, дабы не изнашивать колесо вашей мышки:<br/>
<code><font color="black"><ol>
<li>. . .</li>
<li>TemperatureController *pTempCtrl = GetNextTempController();</li>
<li>pTempCtrl->SetReferenceTemperature(10);</li>
<li>pTempCtrl->InitializeDevice();</li>
<li>. . .</li>
</ol></font></code><br/>
Ещё не понятно? В случае работы с оборудованием Brand_A и Brand_B — всё отлично. А вот в случае использования Brand_C мы сначала пишем в устройство температуру, а потом только инициализируем устройство. Чем всё это может законичиться — фантазируйте сами. Возможно, что ничего страшного и не случится. А возможно, что полдня просидим в дебаге.<br/>
<br/>
А вот если бы мы при создании класса Brand_C_TemperatureController (точнее, во время глупого переопределении злополучных геттеров/сеттеров) помнили про принцип подстановки, мы бы могли догадаться, что придуманная нами модель абстракции в новых реалиях — полное фуфло. Как эту ситуацию исправить? Увы, это не тема данной статьи. Я думаю, что итак всех утомил.<br/>
<br/>
<h4>4. Хочу ещё!</h4><br/>
По теме могу предложить почитать:<br/>
* <a href="http://ru.wikipedia.org/wiki/Принцип_подстановки_Барбары_Лисков">Статья в Википедии</a> (я предупреждал в самом начале!);<br/>
* <a href="http://www.jroller.com/sebastianKuebeck/entry/barbara_liskov_on_the_power">The Liskov Substitution Principle</a> — именно отсюда я и украл пример для этого топика;<br/>
* <a href="http://www.google.com/search?hl=en&amp;q=The+Liskov+Substitution+Principle">Гугл</a>.<br/>
<br/>
<h4>5. Десерт</h4><br/>
О! Вспомнил! Статью положено разбавлять картинками. Вот:<br/>
<img src="https://habrastorage.org/r/w780q1/getpro/habr/post_images/9b8/71b/a0b/9b871ba0b4fe575aa9d896a6d642c55a.jpg" alt="Принцип подстановки Барбары Лисков" data-src="https://habrastorage.org/getpro/habr/post_images/9b8/71b/a0b/9b871ba0b4fe575aa9d896a6d642c55a.jpg" data-blurred="true"/><a href="http://www.jroller.com/sebastianKuebeck/entry/barbara_liskov_on_the_power">©</a><br/>
<br/>
Если этот демотиватор заставил вас улыбнуться, значит вам понятно, про что я настрогал столько текста.<br/>
<br/>
Удачи! И пусть баги реже встречаются на вашем пути!</div></div> <!----> <!----></div> <div class="tm-article-presenter__meta"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Tags:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/en/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%BE%D0%BE%D0%BF%5D" class="tm-tags-list__link">ооп</a></li><li class="tm-separated-list__item"><a href="/en/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%5D" class="tm-tags-list__link">проектирование</a></li><li class="tm-separated-list__item"><a href="/en/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%5D" class="tm-tags-list__link">классы</a></li><li class="tm-separated-list__item"><a href="/en/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%BF%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF%20%D0%BF%D0%BE%D0%B4%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B8%5D" class="tm-tags-list__link">принцип подстановки</a></li><li class="tm-separated-list__item"><a href="/en/search/?target_type=posts&amp;order=relevance&amp;q=%5Bc%2B%2B%5D" class="tm-tags-list__link">c++</a></li><li class="tm-separated-list__item"><a href="/en/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%5D" class="tm-tags-list__link">наследование</a></li></ul></div> <div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Hubs:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/en/hub/programming/" class="tm-hubs-list__link">
    Programming
  </a></li></ul></div></div></article></div> <!----></div> <div class="tm-article-sticky-panel"><div class="tm-data-icons tm-article-sticky-panel__icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg height="16" width="16" class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon_medium"><title>Total votes 85: ↑75 and ↓10</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#counter-rating"></use></svg> <span title="Total votes 85: ↑75 and ↓10" class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_medium">+65</span></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----> <span title="Views" class="tm-icon-counter tm-data-icons__item"><svg height="16" width="16" class="tm-svg-img tm-icon-counter__icon"><title>Views</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#counter-views"></use></svg> <span class="tm-icon-counter__value">90K</span></span> <button title="Add to bookmarks" type="button" class="bookmarks-button tm-data-icons__item"><span title="Add to bookmarks" class="tm-svg-icon__wrapper bookmarks-button__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Add to bookmarks</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#counter-favorite"></use></svg></span> <span title="Users added post to bookmarks" class="bookmarks-button__counter">
    127
  </span></button> <!----> <div title="Share" class="tm-sharing tm-data-icons__item"><button type="button" class="tm-sharing__button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="tm-sharing__icon"><path fill="currentColor" d="M10.33.275l9.047 7.572a.2.2 0 010 .306l-9.048 7.572a.2.2 0 01-.328-.153V11c-8 0-9.94 6-9.94 6S-1 5 10 5V.428a.2.2 0 01.328-.153z"></path></svg></button> <!----></div> <DIV class="v-portal" style="display:none;"></DIV></div> </div></div> <!----> <!----> <div class="tm-article-presenter__footer"><div class="tm-article-blocks"><!----> <section class="tm-block tm-block_spacing-bottom"><!----> <div class="tm-block__body tm-block__body_variant-balanced"><div class="tm-article-author"> <div class="tm-user-card tm-article-author__user-card tm-user-card_variant-article"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/en/users/basilisk/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" src="//habrastorage.org/getpro/habr/avatars/377/4dd/c28/3774ddc28eda4265cbff8728481d59d4.jpg" class="tm-entity-image__pic"></div></a> <div class="tm-user-card__meta"><div title=" 104 votes " class="tm-karma tm-user-card__karma"><div class="tm-karma__votes tm-karma__votes_positive">
    65
  </div> <div class="tm-karma__text">
    Karma
  </div></div> <div title="User`s rating" class="tm-rating tm-user-card__rating"><div class="tm-rating__header"> <div class="tm-rating__counter">0</div></div> <div class="tm-rating__text">
    Rating
  </div></div></div></div></div> <div class="tm-user-card__info tm-user-card__info_variant-article"><div class="tm-user-card__title tm-user-card__title_variant-article"><span class="tm-user-card__name tm-user-card__name_variant-article">Василий Меленчук</span> <a href="/en/users/basilisk/" class="tm-user-card__nickname tm-user-card__nickname_variant-article">
          @basilisk
        </a> <!----></div> <p class="tm-user-card__short-info tm-user-card__short-info_variant-article">User</p></div></div> <div class="tm-user-card__buttons tm-user-card__buttons_variant-article"><!----> <!----> <!----> <!----> <!----></div></div> <!----></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----></section> <div class="tm-article-blocks__comments"><div class="tm-article-page-comments"><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/en/post/83269/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style"><svg height="16" width="16" class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted"><title>Comments</title> <use xlink:href="/img/megazord-v24.ce74655c.svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted">
       Comments 55 
    </span></a> <!----></div></div></div> <div class="tm-ad-banner__container tm-page-article__banner"><!----> <div id="articleBottomBanner" class="tm-ad-banner"></div></div> <!----> <!----> <!----> <!----> </div></div></div></div></div> <div class="tm-page__sidebar"><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__ads tm-layout-sidebar__ads_initial"><div class="tm-ad-banner__container tm-layout-sidebar__banner"><!----> <div id="sidebarBanner" class="tm-ad-banner"></div></div></div> <div class="tm-sexy-sidebar tm-sexy-sidebar_initial" style="margin-top:0px;"><!----> <!----></div></div></div></div></div></div></main> <!----></div> <div class="tm-footer-menu"><div class="tm-page-width"><div class="tm-footer-menu__container"><div class="tm-footer-menu__block"><h3 class="tm-footer-menu__block-title">
          Your account
        </h3> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/en/post/83269/&amp;hl=en" rel="nofollow" target="_self">
                Log in
              </a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/en/post/83269/&amp;hl=en" rel="nofollow" target="_self">
                Sign up
              </a></li></ul></div></div><div class="tm-footer-menu__block"><h3 class="tm-footer-menu__block-title">
          Sections
        </h3> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/en/" class="footer-menu__item-link router-link-active">
                Posts
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/news/" class="footer-menu__item-link">
                News
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/hubs/" class="footer-menu__item-link">
                Hubs
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/companies/" class="footer-menu__item-link">
                Companies
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/users/" class="footer-menu__item-link">
                Authors
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/sandbox/" class="footer-menu__item-link">
                Sandbox
              </a></li></ul></div></div><div class="tm-footer-menu__block"><h3 class="tm-footer-menu__block-title">
          Information
        </h3> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/en/docs/help/" class="footer-menu__item-link">
                How it works
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/docs/authors/codex/" class="footer-menu__item-link">
                For authors
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/docs/companies/corpblogs/" class="footer-menu__item-link">
                For companies
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/docs/docs/transparency/" class="footer-menu__item-link">
                Documents
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement" target="_blank">
                Agreement
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/" target="_blank">
                Confidential
              </a></li></ul></div></div><div class="tm-footer-menu__block"><h3 class="tm-footer-menu__block-title">
          Services
        </h3> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="https://docs.google.com/presentation/d/e/2PACX-1vQLwRfQmXibiUlWaRg-BAc38s7oM3lJiaPju7qmdJsp8ysIvZ_G-Npem0njJLMozE2bPHMpDqiI5hhy/pub?start=false&amp;loop=false&amp;delayms=60000&amp;slide=id.g91a03369cd_4_297" target="_blank">
                Ads
              </a></li><li class="tm-footer-menu__list-item"><a href="https://habrastorage.org/storage/stuff/habr/service_price.pdf" target="_blank">
                Subscription plans
              </a></li><li class="tm-footer-menu__list-item"><a href="https://docs.google.com/presentation/d/e/2PACX-1vQJJds8-Di7BQSP_guHxICN7woVYoN5NP_22ra-BIo4bqnTT9FR6fB-Ku2P0AoRpX0Ds-LRkDeAoD8F/pub?start=false&amp;loop=false&amp;delayms=60000" target="_blank">
                Content
              </a></li><li class="tm-footer-menu__list-item"><a href="https://tmtm.timepad.ru/" target="_blank">
                Seminars
              </a></li><li class="tm-footer-menu__list-item"><a href="/en/megaprojects/" class="footer-menu__item-link">
                Megaprojects
              </a></li></ul></div></div></div></div></div> <div class="tm-footer"><div class="tm-page-width"><div class="tm-footer__container"><!----> <div class="tm-footer__social"><a href="https://www.facebook.com/habr.eng" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Facebook</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a href="https://twitter.com/habr_eng" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Twitter</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a href="https://t.me/habr_eng" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Telegram</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-telegram"></use></svg></a></div> <DIV class="v-portal" style="display:none;"></DIV> <button class="tm-footer__link"><!---->
        Language settings
      </button> <a href="/en/about" class="tm-footer__link">
        About
      </a> <a href="/en/feedback/" class="tm-footer__link">
        Support
      </a> <!----> <a href="/berserk-mode-nope" class="tm-footer__link">
        Return to old version
      </a> <div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2021 </span> <span class="tm-copyright__name">«<a href="https://company.habr.com/en/" rel="noopener" target="_blank" class="tm-copyright__link">Habr</a>»</span></span></div></div></div></div> <!----> <!----></div> <div class="vue-portal-target"></div></div>
<script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"83269":{"id":"83269","timePublished":"2010-02-08T07:39:35+00:00","isCorporative":false,"lang":"ru","titleHtml":"Принцип подстановки Барбары Лисков","leadData":{"textHtml":"Привет, хабрачеловеки!\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЗахотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете как-то негусто. Имеются формулировки вида:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cem\u003E«Пусть q(x) является свойством верным относительно объектов x некоторого типа T. Тогда q(y) также должно быть верным для объектов y типа S, где S является подтипом типа T.» \u003C\u002Fem\u003E &copy; \u003Ca href=\"http:\u002F\u002Fru.wikipedia.org\u002Fwiki\u002FПринцип_подстановки_Барбары_Лисков\"\u003EWikipedia\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nНо они \u003Cstrike\u003Eвыносят мой мозг\u003C\u002Fstrike\u003E меня совершенно не радуют.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЕсли хочется услышать объяснение этой \u003Cstrike\u003Eхрени\u003C\u002Fstrike\u003E умной фразы — прошу под кат.\u003Cbr\u002F\u003E\r\n","imageUrl":null,"buttonTextHtml":"Читать дальше &rarr;","image":null},"editorVersion":"1.0","postType":"article","postLabels":[],"author":{"scoreStats":{"score":65,"votesCount":104},"rating":0,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"id":"36644","alias":"basilisk","fullname":"Василий Меленчук","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F377\u002F4dd\u002Fc28\u002F3774ddc28eda4265cbff8728481d59d4.jpg","speciality":null},"statistics":{"commentsCount":55,"favoritesCount":127,"readingCount":90159,"score":65,"votesCount":85},"hubs":[{"relatedData":null,"id":"359","alias":"programming","type":"collective","title":"Programming","titleHtml":"Programming","isProfiled":true}],"flows":[{"id":"1","alias":"develop","title":"Development"}],"relatedData":null,"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003EПривет, хабрачеловеки!\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЗахотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете как-то негусто. Имеются формулировки вида:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cem\u003E«Пусть q(x) является свойством верным относительно объектов x некоторого типа T. Тогда q(y) также должно быть верным для объектов y типа S, где S является подтипом типа T.» \u003C\u002Fem\u003E © \u003Ca href=\"http:\u002F\u002Fru.wikipedia.org\u002Fwiki\u002FПринцип_подстановки_Барбары_Лисков\"\u003EWikipedia\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nНо они \u003Cstrike\u003Eвыносят мой мозг\u003C\u002Fstrike\u003E меня совершенно не радуют.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЕсли хочется услышать объяснение этой \u003Cstrike\u003Eхрени\u003C\u002Fstrike\u003E умной фразы — прошу под кат.\u003Cbr\u002F\u003E\r\n\u003Ca name=\"habracut\"\u003E\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\r\nИтак, принцип подстановки Барбары Лисков. Он же Liskov Substitution Principle. Он же LSP. Простыми словами принцип звучит так:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cstrong\u003EНаследующий класс должен дополнять, а не замещать поведение базового класса.\u003C\u002Fstrong\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch4\u003E1. Что это значит на практике?\u003C\u002Fh4\u003E\u003Cbr\u002F\u003E\r\nЕсли у нас есть класс A (не виртуальный, а вполне реально используемый в коде) и отнаследованный от него класс B, то если мы заменим все использования класса A на B, ничего не должно измениться в работе программы. Ведь класс B всего лишь расширяет функционал класса A. Если эта проверка работает, то поздравляю: ваша программа соответствует принципу подстановки Лисков! Если нет, стоит \u003Cstrike\u003Eуволить ведущего программиста\u003C\u002Fstrike\u003E задуматься: «а правильно ли спроектированы классы?». \u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch4\u003E2. Ну и зачем это нужно?\u003C\u002Fh4\u003E\u003Cbr\u002F\u003E\r\nНадеюсь, всем понятно, что принцип Лисков — это из области теории ООП. На практике, никто не заставляет следовать ему под дулом пистолета. Более того, могут быть случаи, когда следовать ему сложно и никому не нужно. \u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nСловом, прям как с валидным HTML: сайт прошёл проверку на W3C валидаторе — плюсадин в карму верстальщика. Не прошёл — нужно чётко понимать почему он не прошёл: это ошибка или же очередной выкрунтас другими способами реализовать невозможно?\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nИз этого можно сделать выводы:\u003Cbr\u002F\u003E\r\n* следование принципу подстановки Лисков делает ваш проект ближе к духу ООП;\u003Cbr\u002F\u003E\r\n* это позволит избежать ряда ошибок (о них ниже).\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch4\u003E3. Пример\u003C\u002Fh4\u003E\u003Cbr\u002F\u003E\r\nЯ решил не изобретать очередной велосипед, а к тому же мне очень понравился пример \u003Ca href=\"http:\u002F\u002Fwww.eventhelix.com\u002FRealtimeMantra\u002FObject_Oriented\u002Fliskov_substitution_principle.htm\"\u003Eотсюда\u003C\u002Fa\u003E. Его то я и буду использовать (с лёгкими модификациями).\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nИтак, ситуация: мы проектируем программку для управления термостатами. Программа должна уметь работать с несколькими разными моделями устройств. Программа циклически проверяет температуру и пытается выправить её до требуемой. Саму программу мы, разумеется, писать не будем, а остановимся на проектировании иерархии классов-интерфейсов для термостатов.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch5\u003E3.1. Дебют\u003C\u002Fh5\u003E\u003Cbr\u002F\u003E\r\nПервым делом — базовый класс. У него должны быть следующие методы:\u003Cbr\u002F\u003E\r\n* \u003Cstrong\u003EInitializeDevice\u003C\u002Fstrong\u003E: инициализация подключенного термостата. Понятное дело, метод pure virtual: для разных устройств могут потребоваться разные предварительные ласки, чтобы оно заработало как следует.\u003Cbr\u002F\u003E\r\n* \u003Cstrong\u003EGet\u002FSet Reference\u003C\u002Fstrong\u003E: геттер\u002Fсеттер для требуемой (опорной) температуры. Вполне себе конкретные методы (не виртуальные) для установки переменной.\u003Cbr\u002F\u003E\r\n* \u003Cstrong\u003EGetTemperature\u003C\u002Fstrong\u003E: чтение температуры из устройства. Опять чисто вирутальный метод.\u003Cbr\u002F\u003E\r\n* \u003Cstrong\u003EAdjustTemperature\u003C\u002Fstrong\u003E: снова чисто виртуальный метод. Собственно, для установки температуры.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nОпишем это более понятным языком, то есть C++:\u003Cbr\u002F\u003E\r\n\u003Ccode\u003E\u003Cfont color=\"black\"\u003E\u003Col\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Eclass\u003C\u002Ffont\u003E TemperatureController\u003C\u002Fli\u003E\r\n\u003Cli\u003E{\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#008000\"\u003E\u002F\u002F Переменная для хранения опорной температуры\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E m_referenceTemperature;\u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E:\u003C\u002Fli\u003E\r\n\u003Cli\u003E    \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetReferenceTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#0000ff\"\u003Ereturn\u003C\u002Ffont\u003E m_referenceTemperature;\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E SetReferenceTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E referenceTemperature)\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E    m_referenceTemperature = referenceTemperature;\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E = 0;\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E AdjustTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E temperature) = 0;\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E InitializeDevice() = 0;\u003C\u002Fli\u003E\r\n\u003Cli\u003E};\u003C\u002Fli\u003E\r\n\u003C\u002Fol\u003E\u003C\u002Ffont\u003E\u003C\u002Fcode\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch5\u003E3.2. Миттельшпиль\u003C\u002Fh5\u003E\u003Cbr\u002F\u003E\r\nА теперь нарисуем 2 конкретных класса для работы с «реальными» термостатами широко известных и популярных фирм Brand_A и Brand_B (Как? Вы их не знаете? Я тоже):\u003Cbr\u002F\u003E\r\n\u003Ccode\u003E\u003Cfont color=\"black\"\u003E\u003Col\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Eclass\u003C\u002Ffont\u003E Brand_A_TemperatureController : \u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E TemperatureController\u003C\u002Fli\u003E\r\n\u003Cli\u003E{\u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E:\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#0000ff\"\u003Ereturn\u003C\u002Ffont\u003E (io_read(TEMP_REGISTER));\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E AdjustTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E temperature)\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E    io_write(TEMP_CHANGE_REGISTER, temperature);\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E InitializeDevice()\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E    \u003Cfont color=\"#008000\"\u003E\u002F\u002F Уговариваем девайс дружить с нами\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E};\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Eclass\u003C\u002Ffont\u003E Brand_B_TemperatureController : \u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E TemperatureController\u003C\u002Fli\u003E\r\n\u003Cli\u003E{\u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E:\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#0000ff\"\u003Ereturn\u003C\u002Ffont\u003E (io_read(STATUS_REGISTER) &amp; TEMP_MASK);\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E AdjustTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E temperature)\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#008000\"\u003E\u002F\u002F Уж больно хитрый девайс попался: ему температуру в надо \u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#008000\"\u003E\u002F\u002F Кельвинах предоставить! Хорошо, что не в Фаренгейтах.\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E   io_write(CHANGE_REGISTER, temperature + 273);\u003C\u002Fli\u003E\r\n\u003Cli\u003E  } \u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E InitializeDevice()\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#008000\"\u003E\u002F\u002F Склоняем термостат к сотрудничеству\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E};\u003C\u002Fli\u003E\r\n\u003C\u002Fol\u003E\u003C\u002Ffont\u003E\u003C\u002Fcode\u003E\u003Cbr\u002F\u003E\r\nВуаля! Осталось написать пару строчек в нашу программу:\u003Cbr\u002F\u003E\r\n\u003Ccode\u003E\u003Cfont color=\"black\"\u003E\u003Col\u003E\r\n\u003Cli\u003E. . .\u003C\u002Fli\u003E\r\n\u003Cli\u003ETemperatureController *pTempCtrl = GetNextTempController();\u003C\u002Fli\u003E\r\n\u003Cli\u003EpTempCtrl-\u003ESetReferenceTemperature(10);\u003C\u002Fli\u003E\r\n\u003Cli\u003EpTempCtrl-\u003EInitializeDevice();\u003C\u002Fli\u003E\r\n\u003Cli\u003E. . .\u003C\u002Fli\u003E\r\n\u003C\u002Fol\u003E\u003C\u002Ffont\u003E\u003C\u002Fcode\u003E\u003Cbr\u002F\u003E\r\nИ всё круто! Программка работает, заказчик доволен, мы читаем Хабр.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch5\u003E3.3. Эндшпиль\u003C\u002Fh5\u003E\u003Cbr\u002F\u003E\r\nПроходит какое-то время и маркетологи (они не зря хлеб же едят!) придумали новый стильный термостат с большим сенсорным экраном и FM тюнером. Наш заказчик, приобрёв новый девайс, снова объявляется и с порога заявляет: «Хочу, понимаешь ли, чтобы программа поддерживала мою прелессссть!».\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nОк, добавим ещё один девайс. Написать Brand_C_TemperatureController нам же труда не составит? В процессе доработки неожиданно выясняется, что новый термостат кроме своего сенсорного экрана имеет и продвинутую автоматику: т.е. его не надо вручную проверять и подгонять температуры. Достаточно скормить один раз требуемую температуру (у нас это ReferenceTemperature), а всё остальное он сделает сам. Это и хорошо (меньше возни), и плохо (наши классы не особо то приспособлены для такой ситуации). \u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nВыход находим в 5 минут: Get\u002FSet Reference в базовом классе объявляем виртуальными, а в классе для нового Brand_C термостата мы просто переопределяем эти методы для прямого чтения\u002Fзаписи температуры в термостат. Красота, не так ли? Сказано — сделано:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ccode\u003E\u003Cfont color=\"black\"\u003E\u003Col\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Eclass\u003C\u002Ffont\u003E TemperatureController\u003C\u002Fli\u003E\r\n\u003Cli\u003E{\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#008000\"\u003E\u002F\u002F Переменная для хранения опорной температуры\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E m_referenceTemperature;\u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E:\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#008000\"\u003E\u002F\u002F Геттер\u002Fсеттер теперь виртуальный\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#008000\"\u003E\u002F\u002F Наш новый концепт\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetReferenceTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#0000ff\"\u003Ereturn\u003C\u002Ffont\u003E m_referenceTemperature;\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E SetReferenceTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E referenceTemperature)\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E    m_referenceTemperature = referenceTemperature;\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E = 0;\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E AdjustTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E temperature) = 0;\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evirtual\u003C\u002Ffont\u003E \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E InitializeDevice() = 0; \u003C\u002Fli\u003E\r\n\u003Cli\u003E};\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Eclass\u003C\u002Ffont\u003E Brand_C_TemperatureController : \u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E TemperatureController\u003C\u002Fli\u003E\r\n\u003Cli\u003E{\u003C\u002Fli\u003E\r\n\u003Cli\u003E\u003Cfont color=\"#0000ff\"\u003Epublic\u003C\u002Ffont\u003E:\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#008000\"\u003E\u002F\u002F Геттер\u002Fсеттер общается непосредственно с девайсом\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetReferenceTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#0000ff\"\u003Ereturn\u003C\u002Ffont\u003E (io_read(REFERENCE_REGISTER);\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E SetReferenceTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E referenceTemperature)\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E    io_write(REFERENCE_REGISTER, referenceTemperature);\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E GetTemperature() \u003Cfont color=\"#0000ff\"\u003Econst\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#0000ff\"\u003Ereturn\u003C\u002Ffont\u003E (io_read(TEMP_MONITORING_REGISTER));\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }\u003C\u002Fli\u003E\r\n\u003Cli\u003E \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E AdjustTemperature(\u003Cfont color=\"#0000ff\"\u003Eint\u003C\u002Ffont\u003E temperature)\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#008000\"\u003E\u002F\u002F Нафиг ненужный метод: мы температурой управляем в другом месте\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  } \u003C\u002Fli\u003E\r\n\u003Cli\u003E  \u003Cfont color=\"#0000ff\"\u003Evoid\u003C\u002Ffont\u003E InitializeDevice()\u003C\u002Fli\u003E\r\n\u003Cli\u003E  {\u003C\u002Fli\u003E\r\n\u003Cli\u003E   \u003Cfont color=\"#008000\"\u003E\u002F\u002F Тут шаманские пляски, чтобы термостат ниспослал нам хорошую погоду\u003C\u002Ffont\u003E\u003C\u002Fli\u003E\r\n\u003Cli\u003E  }  \u003C\u002Fli\u003E\r\n\u003Cli\u003E};\u003C\u002Fli\u003E\r\n\u003C\u002Fol\u003E\u003C\u002Ffont\u003E\u003C\u002Fcode\u003E\u003Cbr\u002F\u003E\r\nПо закону жанра, становится понятно, что сейчас будет кульминация. Самое время сказать: «Шах и мат!»\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch5\u003E3.4. Ой, а что это было?\u003C\u002Fh5\u003E\u003Cbr\u002F\u003E\r\nПеред разбором полётов ещё раз вспомним принцип подстановки Лисков: \u003Cstrong\u003EНаследующий класс должен дополнять, а не замещать поведение базового класса.\u003C\u002Fstrong\u003E А что мы только что сделали? Правильно! Мы \u003Cem\u003Eзаместили\u003C\u002Fem\u003E методы GetReferenceTemperature и SetReferenceTemperature. Мы \u003Cem\u003Eизменили\u003C\u002Fem\u003E поведение класса. Чем это чревато? Процитирую ещё раз использование наших классов, дабы не изнашивать колесо вашей мышки:\u003Cbr\u002F\u003E\r\n\u003Ccode\u003E\u003Cfont color=\"black\"\u003E\u003Col\u003E\r\n\u003Cli\u003E. . .\u003C\u002Fli\u003E\r\n\u003Cli\u003ETemperatureController *pTempCtrl = GetNextTempController();\u003C\u002Fli\u003E\r\n\u003Cli\u003EpTempCtrl-\u003ESetReferenceTemperature(10);\u003C\u002Fli\u003E\r\n\u003Cli\u003EpTempCtrl-\u003EInitializeDevice();\u003C\u002Fli\u003E\r\n\u003Cli\u003E. . .\u003C\u002Fli\u003E\r\n\u003C\u002Fol\u003E\u003C\u002Ffont\u003E\u003C\u002Fcode\u003E\u003Cbr\u002F\u003E\r\nЕщё не понятно? В случае работы с оборудованием Brand_A и Brand_B — всё отлично. А вот в случае использования Brand_C мы сначала пишем в устройство температуру, а потом только инициализируем устройство. Чем всё это может законичиться — фантазируйте сами. Возможно, что ничего страшного и не случится. А возможно, что полдня просидим в дебаге.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nА вот если бы мы при создании класса Brand_C_TemperatureController (точнее, во время глупого переопределении злополучных геттеров\u002Fсеттеров) помнили про принцип подстановки, мы бы могли догадаться, что придуманная нами модель абстракции в новых реалиях — полное фуфло. Как эту ситуацию исправить? Увы, это не тема данной статьи. Я думаю, что итак всех утомил.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch4\u003E4. Хочу ещё!\u003C\u002Fh4\u003E\u003Cbr\u002F\u003E\r\nПо теме могу предложить почитать:\u003Cbr\u002F\u003E\r\n* \u003Ca href=\"http:\u002F\u002Fru.wikipedia.org\u002Fwiki\u002FПринцип_подстановки_Барбары_Лисков\"\u003EСтатья в Википедии\u003C\u002Fa\u003E (я предупреждал в самом начале!);\u003Cbr\u002F\u003E\r\n* \u003Ca href=\"http:\u002F\u002Fwww.jroller.com\u002FsebastianKuebeck\u002Fentry\u002Fbarbara_liskov_on_the_power\"\u003EThe Liskov Substitution Principle\u003C\u002Fa\u003E — именно отсюда я и украл пример для этого топика;\u003Cbr\u002F\u003E\r\n* \u003Ca href=\"http:\u002F\u002Fwww.google.com\u002Fsearch?hl=en&amp;q=The+Liskov+Substitution+Principle\"\u003EГугл\u003C\u002Fa\u003E.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch4\u003E5. Десерт\u003C\u002Fh4\u003E\u003Cbr\u002F\u003E\r\nО! Вспомнил! Статью положено разбавлять картинками. Вот:\u003Cbr\u002F\u003E\r\n\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fpost_images\u002F9b8\u002F71b\u002Fa0b\u002F9b871ba0b4fe575aa9d896a6d642c55a.jpg\" alt=\"Принцип подстановки Барбары Лисков\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fpost_images\u002F9b8\u002F71b\u002Fa0b\u002F9b871ba0b4fe575aa9d896a6d642c55a.jpg\" data-blurred=\"true\"\u002F\u003E\u003Ca href=\"http:\u002F\u002Fwww.jroller.com\u002FsebastianKuebeck\u002Fentry\u002Fbarbara_liskov_on_the_power\"\u003E©\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЕсли этот демотиватор заставил вас улыбнуться, значит вам понятно, про что я настрогал столько текста.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nУдачи! И пусть баги реже встречаются на вашем пути!\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"ооп"},{"titleHtml":"проектирование"},{"titleHtml":"классы"},{"titleHtml":"принцип подстановки"},{"titleHtml":"c++"},{"titleHtml":"наследование"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F83269\u002Fde21b7cbdfc420c7069af3136ecf1af9\u002F","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F83269\u002Fde21b7cbdfc420c7069af3136ecf1af9\u002F?format=vk","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fpost\\\u002F83269\\\u002F\"},\"headline\":\"Принцип подстановки Барбары Лисков\",\"datePublished\":\"2010-02-08T10:39:35+03:00\",\"dateModified\":\"2016-06-24T18:04:23+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Василий Меленчук\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Привет, хабрачеловеки!  Захотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования кла...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fpost\\\u002F83269\\\u002F#post-content-body\",\"about\":[\"h_programming\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fpost_images\\\u002F9b8\\\u002F71b\\\u002Fa0b\\\u002F9b871ba0b4fe575aa9d896a6d642c55a.jpg\"]}","metaDescription":"Привет, хабрачеловеки!\r\n\r\nЗахотелось вот поделиться сокровенным знанием по этой теме. К тому же материалов по этому, достаточно важному принципу проектирования классов и их наследования, в Рунете...","mainImageUrl":null,"amp":false},"polls":[],"commentsEnabled":true,"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"view":"cards","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"karma":{}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[],"hubs":""},"comments":{"articleComments":{},"searchCommentsResults":null,"previewComment":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"vacancies":{}},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"unreadCount":0,"pagesCount":0,"isLoadMore":false},"desktopState":{"desktopFl":null,"desktopHl":null,"isChecked":false,"isLoginDemanded":false},"dfp":{"slotsDict":{}},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":"true"},"flows":{"flows":[{"alias":"develop","id":1,"route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"alias":"admin","id":6,"route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"alias":"design","id":2,"route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"alias":"management","id":3,"route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"alias":"marketing","id":4,"route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"alias":"popsci","id":7,"route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}]},"global":{"isPwa":false,"device":"desktop","isHabrCom":true},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"en","hl":"en"},"info":{"infoPage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":{},"pathname":null,"path":null,"href":""},"searchQuery":null},"me":{"user":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"pinnedPost":{"pinnedPost":null},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":false,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"items":{},"pagesCache":{},"markedViewedSilently":{},"markedRead":{},"unreadCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null},"unviewedCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null}}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script>
<script src="https://assets.habr.com/habr-web/js/chunk-vendors.881c3e9d.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.fdbba7e2.js" defer></script>



    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

    ym(24049213, "init", {
      defer:true,
      trackLinks:true,
      accurateTrackBounce:true,
      webvisor:false,
    });
  </script>
  <noscript>
    <div>
      <img src="https://mc.yandex.ru/watch/24049213" style="position:absolute; left:-9999px;" alt="" />
    </div>
  </noscript>
  
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
</body>
</html>
