<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>cl_salv_functions | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/cl_salv_functions/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 06:01:59 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>Работа с SALV Hierseq Table</title>
		<link>https://abap-blog.ru/osnovy-abap/sap-dynpro/rabota-s-salv-hierseq-tabl/</link>
					<comments>https://abap-blog.ru/osnovy-abap/sap-dynpro/rabota-s-salv-hierseq-tabl/#respond</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Sat, 28 Apr 2012 13:55:48 +0000</pubDate>
				<category><![CDATA[SAP Dynpro]]></category>
		<category><![CDATA[cl_salv_columns_hierseq]]></category>
		<category><![CDATA[cl_salv_column_hierseq]]></category>
		<category><![CDATA[CL_SALV_EVENTS_HIERSEQ]]></category>
		<category><![CDATA[cl_salv_functions]]></category>
		<category><![CDATA[cl_salv_hierseq_table]]></category>
		<category><![CDATA[cl_salv_sorts]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=806</guid>

					<description><![CDATA[<p>Для отображения иерархической таблицы с двумя уровнями иерархии (главный и подчиненный) в SALV модели используется класс &#8212; cl_salv_hierseq_table. Примером подобной иерархии может служить заказ на закупку, который состоит из заголовочной части и позиций заказа. Связь в этой иерархии осуществляется с помощью ключевого поля «номер заказа» в заголовке и позиции заказа. Таблица создается с помощью фабрично-статического [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/osnovy-abap/sap-dynpro/rabota-s-salv-hierseq-tabl/">Работа с SALV Hierseq Table</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>Для отображения иерархической таблицы с двумя уровнями иерархии (главный и подчиненный) в SALV модели используется класс &#8212; <strong>cl_salv_hierseq_table</strong>.</p>
<p><strong><a href="http://abap-blog.ru/wp-content/uploads/2012/04/image021.png"><img loading="lazy" title="image02" src="http://abap-blog.ru/wp-content/uploads/2012/04/image021.png" alt="" width="509" height="170" /></a></strong></p>
<p>Примером подобной иерархии может служить заказ на закупку, который состоит из заголовочной части и позиций заказа. Связь в этой иерархии осуществляется с помощью ключевого поля «номер заказа» в заголовке и позиции заказа.</p>
<p>Таблица создается с помощью фабрично-статического метода factory(). При его вызове необходимо передать две таблицы с данными и таблицу, в которой прописана связь между ними с типом <strong>salv_t_hierseq_binding</strong>. <strong>В данной таблице указываются ключевые поля которые связывают таблицы, но не более 5 полей. Если у вас больше создавайте составные ключи в технических полях.</strong><br />
Следующий пример покажет, как вывести иерархическую таблицу закупочных заказов с позициями:</p>
<p><span id="more-806"></span></p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT  zrep_hier_tab.

CLASS lcl_report DEFINITION FINAL.
  PUBLIC SECTION.
    TYPES: BEGIN OF ty_ekko_data,
                      ebeln TYPE ebeln, " Заказ
                      lifnr TYPE lifnr, " Поставщик
           END OF ty_ekko_data,
           BEGIN OF ty_ekpo_data,
                      ebeln TYPE ebeln,
                      ebelp TYPE ebelp,
                      matnr TYPE matnr,
                      MENGE TYPE bstmg,
                      aedat TYPE aedat, " Дата изменения
           END OF ty_ekpo_data.
    CLASS-DATA:
      go_hier_table TYPE REF TO cl_salv_hierseq_table,
      gt_ekko_data TYPE STANDARD TABLE OF ty_ekko_data, " Таблица с заголовками заказов
      gt_ekpo_data TYPE STANDARD TABLE OF ty_ekpo_data. " Таблица с позициями заказов
    CLASS-METHODS:
      get_data,     " Получение данных из БД
      create_table, " Создание иерархической таблицы
      display.
ENDCLASS.                    "lcl_report DEFINITION

START-OF-SELECTION.
  lcl_report=&gt;get_data( ).
  lcl_report=&gt;create_table( ).
  lcl_report=&gt;display( ).

CLASS lcl_report IMPLEMENTATION.
  METHOD get_data.
    CLEAR: gt_ekko_data, gt_ekpo_data.
    SELECT * FROM ekko INTO CORRESPONDING FIELDS OF TABLE gt_ekko_data UP TO 10 ROWS WHERE bsart = 'NB'.
    SELECT * FROM ekpo INTO CORRESPONDING FIELDS OF TABLE gt_ekpo_data
      FOR ALL ENTRIES IN gt_ekko_data
      WHERE ebeln = gt_ekko_data-ebeln.
  ENDMETHOD.                    "get_data

  METHOD create_table.
    DATA:
      lt_bind TYPE salv_t_hierseq_binding,
      ls_bind TYPE salv_s_hierseq_binding.

    " Заполняем таблицу со связью между таблицми
    ls_bind-master = 'EBELN'.
    ls_bind-slave  = 'EBELN'.
    APPEND ls_bind TO lt_bind.

    TRY.
        CALL METHOD cl_salv_hierseq_table=&gt;factory
          EXPORTING
            t_binding_level1_level2 = lt_bind
          IMPORTING
            r_hierseq               = go_hier_table
          CHANGING
            t_table_level1          = gt_ekko_data
            t_table_level2          = gt_ekpo_data.

      CATCH cx_salv_data_error cx_salv_not_found.
        MESSAGE 'Ошибка при создании таблицы' TYPE 'S'.
    ENDTRY.

  ENDMETHOD.                    "create_table

  METHOD display.
    go_hier_table-&gt;display( ).
  ENDMETHOD.                    "display
ENDCLASS.                    "lcl_report IMPLEMENTATION</pre><p>Результат работы программы:</p>
<p><strong><a href="http://abap-blog.ru/wp-content/uploads/2012/04/image001.png"><img loading="lazy" class="alignnone size-full wp-image-807" title="image00" src="http://abap-blog.ru/wp-content/uploads/2012/04/image001.png" alt="" width="462" height="307" srcset="https://abap-blog.ru/wp-content/uploads/2012/04/image001.png 462w, https://abap-blog.ru/wp-content/uploads/2012/04/image001-300x199.png 300w" sizes="(max-width: 462px) 100vw, 462px" /></a></strong></p>
<p><strong id="internal-source-marker_0.35741033777594566">Настройка функций</strong></p>
<p><strong id="internal-source-marker_0.35741033777594566"><br />
</strong>Как и в случае с <strong>cl_salv_table</strong>, в полноэкранном режиме для установки GUI статуса необходимо использовать метод <strong>SET_SCREEN_STATUS</strong>, параметр <strong>REPORT</strong> отвечает за то из какой программы будет взят GUI статус, <strong>PFSTATUS</strong> – имя GUI статуса, <strong>SET_FUNCTIONS</strong> – определяет какие стандартные функции будут использованы в программе.<br />
Может принимать значения: <strong>C_FUNCTIONS_DEFAULT</strong> – сортировки, фильтры, выбор формата. <strong>C_FUNCTIONS_ALL</strong> – все функции ALV, <strong>C_FUNCTIONS_NONE</strong> – по умолчанию, только пользовательские функции. Константы определены в классе: <strong>CL_SALV_MODEL_BASE</strong>.<br />
Стандартный GUI статус можно взять в группе функций: <strong>SALV_METADATA_STATUS</strong> – статус: <strong>SALV_TABLE_STANDARD</strong> или <strong>SALV_TABLE_STDPOPUP</strong>, скопировать в свою программу и расширить необходимыми функциями.<br />
Для того чтобы динамически исключить какую либо функцию можно применить класс <strong>cl_salv_functions</strong>, но вместо метода remove_function использовать метод <strong>set_function</strong>, параметр name определяет какую функцию будем скрывать, boolean — определяет скрыта она или нет, если скрываем, ставим в abap_true. Метод <strong>remove_function</strong> не работает для полно экранного режима.<br />
Пример настройки функций через класс (когда используется контейнер):</p><pre class="urvanov-syntax-highlighter-plain-tag">METHOD setup_functions.
    DATA:
      lo_functions TYPE REF TO cl_salv_functions_list.

      lo_functions = go_hier_table-&gt;get_functions( ).
      lo_functions-&gt;set_all( ).
  ENDMETHOD.</pre><p>Настройка через GUI статус:</p><pre class="urvanov-syntax-highlighter-plain-tag">METHOD setup_functions.
    go_hier_table-&gt;set_screen_status(
      EXPORTING
        REPORT        = sy-repid
        pfstatus      = 'SALV_STANDARD'
        set_functions = CL_SALV_MODEL_BASE=&gt;C_FUNCTIONS_ALL
    ).
  ENDMETHOD.</pre><p>Результат:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/04/image011.png"><img loading="lazy" class="alignnone size-full wp-image-808" title="image01" src="http://abap-blog.ru/wp-content/uploads/2012/04/image011.png" alt="" width="464" height="238" srcset="https://abap-blog.ru/wp-content/uploads/2012/04/image011.png 464w, https://abap-blog.ru/wp-content/uploads/2012/04/image011-300x153.png 300w" sizes="(max-width: 464px) 100vw, 464px" /></a></p>
<p><strong id="internal-source-marker_0.35741033777594566">Настройка колонок</strong></p>
<p><strong id="internal-source-marker_0.35741033777594566"><br />
</strong>Настройка колонок работает так же как и с <strong>cl_salv_table</strong>, за исключением того что для настройки колонок используются классы – <strong>cl_salv_columns_hierseq</strong> и <strong>cl_salv_column_hierseq</strong>. Кроме того колонки настраиваются относительно уровня иерархии, при получении ссылки на экземпляр класса <strong>cl_salv_columns_hierseq</strong> необходимо указать уровень в иерархии.<br />
В настройке колонок можно настроить сворачивание иерархии, для этого в структуры необходимо добавить поле expand с типом char1. И в настройке колонок верхнего уровня указать колонку, отвечающую за эту логику через метод set_expand_column.<br />
Для того чтобы иерархия была развернута необходимо получить ссылку на экземпляр уровня иерархии представленный классом <strong>cl_salv_hierseq_level</strong> и вызвать метод – <strong>set_items_expanded</strong>. Для получения экземпляра данного класса необходимо использовать метод <strong>get_level</strong> (уровень) класса <strong>cl_salv_hierseq_table</strong>.</p>
<p>Пример настройки колонок:</p><pre class="urvanov-syntax-highlighter-plain-tag">METHOD setup_columns.
    DATA:
      lo_columns TYPE REF TO cl_salv_columns_hierseq,
      ls_color   TYPE LVC_S_COLO,
      lo_level   TYPE REF TO cl_salv_hierseq_level,
      lo_column  TYPE REF TO cl_salv_column_hierseq.

    ls_color-col = 4.
    ls_color-int = 1.

    TRY.
      lo_columns = go_hier_table-&gt;get_columns( LEVEL = 1 ).
      lo_columns-&gt;set_expand_column( 'EXPAND' ).

      lo_level = go_hier_table-&gt;get_level( 1 ).
      lo_level-&gt;set_items_expanded( abap_true ).

      lo_column ?= lo_columns-&gt;get_column( 'EBELN' ).
      lo_column-&gt;set_cell_type( IF_SALV_C_CELL_TYPE=&gt;hotspot ).

      lo_columns = go_hier_table-&gt;get_columns( LEVEL = 2 ).
      lo_column ?= lo_columns-&gt;get_column( 'EBELN' ).
      lo_column-&gt;set_cell_type( IF_SALV_C_CELL_TYPE=&gt;hotspot ).
      lo_column-&gt;set_color( ls_color ).

    CATCH cx_salv_not_found cx_salv_method_not_supported cx_salv_data_error.
    ENDTRY.
  ENDMETHOD.</pre><p>Результат:</p>
<p><strong><a href="http://abap-blog.ru/wp-content/uploads/2012/04/image021.png"><img loading="lazy" class="alignnone size-full wp-image-809" title="image02" src="http://abap-blog.ru/wp-content/uploads/2012/04/image021.png" alt="" width="509" height="170" srcset="https://abap-blog.ru/wp-content/uploads/2012/04/image021.png 509w, https://abap-blog.ru/wp-content/uploads/2012/04/image021-300x100.png 300w" sizes="(max-width: 509px) 100vw, 509px" /></a></strong></p>
<p><strong id="internal-source-marker_0.35741033777594566">Настройка сортировок</strong></p>
<p><strong id="internal-source-marker_0.35741033777594566"><br />
</strong>Настройка сортировок как и в классе <strong>cl_salv_table</strong> происходит через класс <strong>cl_salv_sorts</strong>, за исключением того что ссылку на него мы получаем указывая уровень иерархии.<br />
Пример настройки сортировок:</p><pre class="urvanov-syntax-highlighter-plain-tag">METHOD setup_sorts.
    DATA:
      lo_sorts TYPE REF TO cl_salv_sorts.

      TRY.
        lo_sorts = go_hier_table-&gt;get_sorts( 1 ).
        lo_sorts-&gt;add_sort(
          EXPORTING
            columnname = 'LIFNR'
            sequence   = IF_SALV_C_SORT=&gt;SORT_UP
            group      = IF_SALV_C_SORT=&gt;group_with_newpage ).
      CATCH cx_salv_not_found cx_salv_existing cx_salv_data_error.
      ENDTRY.
  ENDMETHOD.</pre><p>Результат:</p>
<p><strong><a href="http://abap-blog.ru/wp-content/uploads/2012/04/image031.png"><img loading="lazy" class="alignnone size-full wp-image-810" title="image03" src="http://abap-blog.ru/wp-content/uploads/2012/04/image031.png" alt="" width="499" height="461" srcset="https://abap-blog.ru/wp-content/uploads/2012/04/image031.png 499w, https://abap-blog.ru/wp-content/uploads/2012/04/image031-300x277.png 300w" sizes="(max-width: 499px) 100vw, 499px" /></a></strong></p>
<p><strong><strong>Обработка событий</strong></strong></p>
<p><strong><strong><br />
</strong></strong>За обработку событий отвечает класс <strong>CL_SALV_EVENTS_HIERSEQ</strong>, он позволяет обработать следующие события:</p>
<ul>
<li>TOP_OF_PAGE – обработка заголовка</li>
<li>END_OF_PAGE – обработка подвала</li>
<li>BEFORE_SALV_FUNCTION – событие срабатывает до стандартной функции</li>
<li>AFTER_SALV_FUNCTION – событие срабатывающее после стандартной функции</li>
<li>ADDED_FUNCTION – событие срабатывающее на нажатие своих функций</li>
<li>DOUBLE_CLICK – двойной щелчок</li>
<li>LINK_CLICK – обработка нажатий на активные элементы (в иерархической таблице только hotspot)</li>
</ul>
<p>Как видно из примера выше поле EBELN мы сделали активным элементом (hotspot), допустим нам необходимо, чтобы при нажатии на него открывалась транзакция на просмотр заказа. Первое что нужно сделать, это создать обработчик события. Объявление метода:</p><pre class="urvanov-syntax-highlighter-plain-tag">on_link_click FOR EVENT link_click OF cl_salv_events_hierseq IMPORTING row COLUMN LEVEL.</pre><p>Его реализация:</p><pre class="urvanov-syntax-highlighter-plain-tag">METHOD on_link_click.
    " Т.к. у нас 1 активный элемент, столбец проверять нет необходимости
    " Необходимо проверить на каком уровне был щелчок - level
    DATA:
      ls_ekpo_data TYPE ty_ekpo_data,
      lv_ebeln     TYPE ebeln,
      ls_ekko_data TYPE ty_ekko_data.

    CASE LEVEL.
      WHEN 1.
        READ TABLE gt_ekko_data INTO ls_ekko_data INDEX row.
        lv_ebeln = ls_ekko_data-ebeln.
      WHEN 2.
        READ TABLE gt_ekpo_data INTO ls_ekpo_data INDEX row.
        lv_ebeln = ls_ekpo_data-ebeln.
    ENDCASE.

    CHECK lv_ebeln IS NOT INITIAL.
    SET PARAMETER ID 'BES' FIELD lv_ebeln.
    CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.
  ENDMETHOD.</pre><p>Далее необходимо зарегистрировать обработчик события:</p><pre class="urvanov-syntax-highlighter-plain-tag">METHOD setup_events.
    DATA:
      lo_events TYPE REF TO cl_salv_events_hierseq.

     lo_events = go_hier_table-&gt;get_event( ).
     SET HANDLER on_link_click FOR lo_events.
  ENDMETHOD.</pre><p>Напоследок код программы целиком:</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT  zrep_hier_tab.

CLASS lcl_report DEFINITION FINAL.
  PUBLIC SECTION.
    TYPES: BEGIN OF ty_ekko_data,
                      expand TYPE char1,
                      ebeln TYPE ebeln, " Заказ
                      lifnr TYPE lifnr, " Поставщик
           END OF ty_ekko_data,
           BEGIN OF ty_ekpo_data,
                      expand TYPE char1,
                      ebeln TYPE ebeln,
                      ebelp TYPE ebelp,
                      matnr TYPE matnr,
                      MENGE TYPE bstmg,
                      aedat TYPE aedat, " Дата изменения
           END OF ty_ekpo_data.
    CLASS-DATA:
      go_hier_table TYPE REF TO cl_salv_hierseq_table,
      gt_ekko_data TYPE STANDARD TABLE OF ty_ekko_data, " Таблица с заголовками заказов
      gt_ekpo_data TYPE STANDARD TABLE OF ty_ekpo_data. " Таблица с позициями заказов
    CLASS-METHODS:
      get_data,     " Получение данных из БД
      create_table, " Создание иерархической таблицы
      setup_columns,    " Настройка колонок
      setup_functions,  " Настройка функций
      setup_sorts,      " Настройка сортировки
      setup_events,     " Настройка событий
      on_link_click FOR EVENT link_click OF cl_salv_events_hierseq IMPORTING row COLUMN LEVEL,
      display.
ENDCLASS.                    "lcl_report DEFINITION

START-OF-SELECTION.
  lcl_report=&gt;get_data( ).
  lcl_report=&gt;create_table( ).
  lcl_report=&gt;setup_functions( ).
  lcl_report=&gt;setup_columns( ).
  lcl_report=&gt;setup_sorts( ).
  lcl_report=&gt;setup_events( ).
  lcl_report=&gt;display( ).

CLASS lcl_report IMPLEMENTATION.
  METHOD get_data.
    CLEAR: gt_ekko_data, gt_ekpo_data.
    SELECT * FROM ekko INTO CORRESPONDING FIELDS OF TABLE gt_ekko_data UP TO 10 ROWS WHERE bsart = 'NB'.
    SELECT * FROM ekpo INTO CORRESPONDING FIELDS OF TABLE gt_ekpo_data
      FOR ALL ENTRIES IN gt_ekko_data
      WHERE ebeln = gt_ekko_data-ebeln.
  ENDMETHOD.                    "get_data

  METHOD create_table.
    DATA:
      lt_bind TYPE salv_t_hierseq_binding,
      ls_bind TYPE salv_s_hierseq_binding.

    " Заполняем таблицу со связью между таблицми
    ls_bind-master = 'EBELN'.
    ls_bind-slave  = 'EBELN'.
    APPEND ls_bind TO lt_bind.

    TRY.
        CALL METHOD cl_salv_hierseq_table=&gt;factory
          EXPORTING
            t_binding_level1_level2 = lt_bind
          IMPORTING
            r_hierseq               = go_hier_table
          CHANGING
            t_table_level1          = gt_ekko_data
            t_table_level2          = gt_ekpo_data.

      CATCH cx_salv_data_error cx_salv_not_found.
        MESSAGE 'Ошибка при создании таблицы' TYPE 'S'.
    ENDTRY.
  ENDMETHOD.                    "create_table

  METHOD display.
    go_hier_table-&gt;display( ).
  ENDMETHOD.                    "display

  METHOD setup_functions.
    go_hier_table-&gt;set_screen_status(
      EXPORTING
        REPORT        = sy-repid
        pfstatus      = 'SALV_TABLE_STANDARD'
        set_functions = CL_SALV_MODEL_BASE=&gt;C_FUNCTIONS_ALL
    ).
  ENDMETHOD.

  METHOD setup_sorts.
    DATA:
      lo_sorts TYPE REF TO cl_salv_sorts.

      TRY.
        lo_sorts = go_hier_table-&gt;get_sorts( 1 ).
        lo_sorts-&gt;add_sort(
          EXPORTING
            columnname = 'LIFNR'
            sequence   = IF_SALV_C_SORT=&gt;SORT_UP
            group      = IF_SALV_C_SORT=&gt;group_with_newpage ).
      CATCH cx_salv_not_found cx_salv_existing cx_salv_data_error.
      ENDTRY.
  ENDMETHOD.

  METHOD setup_columns.
    DATA:
      lo_columns TYPE REF TO cl_salv_columns_hierseq,
      ls_color   TYPE LVC_S_COLO,
      lo_level   TYPE REF TO cl_salv_hierseq_level,
      lo_column  TYPE REF TO cl_salv_column_hierseq.

    ls_color-col = 4.
    ls_color-int = 1.

    TRY.
      lo_columns = go_hier_table-&gt;get_columns( LEVEL = 1 ).
      lo_columns-&gt;set_expand_column( 'EXPAND' ).

      lo_level = go_hier_table-&gt;get_level( 1 ).
      lo_level-&gt;set_items_expanded( abap_true ).

      lo_column ?= lo_columns-&gt;get_column( 'EBELN' ).
      lo_column-&gt;set_cell_type( IF_SALV_C_CELL_TYPE=&gt;hotspot ).

      lo_columns = go_hier_table-&gt;get_columns( LEVEL = 2 ).
      lo_column ?= lo_columns-&gt;get_column( 'EBELN' ).
      lo_column-&gt;set_cell_type( IF_SALV_C_CELL_TYPE=&gt;hotspot ).
      lo_column-&gt;set_color( ls_color ).

    CATCH cx_salv_not_found cx_salv_method_not_supported cx_salv_data_error.
    ENDTRY.
  ENDMETHOD.

  METHOD on_link_click.
    " Т.к. у нас 1 активный элемент, столбец проверять нет необходимости
    " Необходимо проверить на каком уровне был щелчок - level
    DATA:
      ls_ekpo_data TYPE ty_ekpo_data,
      lv_ebeln     TYPE ebeln,
      ls_ekko_data TYPE ty_ekko_data.

    CASE LEVEL.
      WHEN 1.
        READ TABLE gt_ekko_data INTO ls_ekko_data INDEX row.
        lv_ebeln = ls_ekko_data-ebeln.
      WHEN 2.
        READ TABLE gt_ekpo_data INTO ls_ekpo_data INDEX row.
        lv_ebeln = ls_ekpo_data-ebeln.
    ENDCASE.

    CHECK lv_ebeln IS NOT INITIAL.
    SET PARAMETER ID 'BES' FIELD lv_ebeln.
    CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.
  ENDMETHOD.

  METHOD setup_events.
    DATA:
      lo_events TYPE REF TO cl_salv_events_hierseq.

     lo_events = go_hier_table-&gt;get_event( ).
     SET HANDLER on_link_click FOR lo_events.
  ENDMETHOD.

ENDCLASS.                    "lcl_report IMPLEMENTATION</pre><p></p><p>The post <a href="https://abap-blog.ru/osnovy-abap/sap-dynpro/rabota-s-salv-hierseq-tabl/">Работа с SALV Hierseq Table</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/osnovy-abap/sap-dynpro/rabota-s-salv-hierseq-tabl/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>SALV Table &#8212; Настройка PF-STATUS</title>
		<link>https://abap-blog.ru/osnovy-abap/sap-dynpro/salv-table-nastrojka-pf-status/</link>
					<comments>https://abap-blog.ru/osnovy-abap/sap-dynpro/salv-table-nastrojka-pf-status/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Thu, 09 Feb 2012 03:52:48 +0000</pubDate>
				<category><![CDATA[SAP Dynpro]]></category>
		<category><![CDATA[cl_salv_functions]]></category>
		<category><![CDATA[cl_salv_table]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=436</guid>

					<description><![CDATA[<p>На этапе создания экземпляра объекта (фабричным методом) мы определяем, как мы хотим использовать объект ALV таблицы, будет ли это полноэкранный режим, либо мы хотим поместить объект в подготовленный заранее контейнер. Данный выбор влияет на способ установки GUI статуса для ALV таблицы. В полноэкранном режиме для установки GUI статуса необходимо использовать метод SET_SCREEN_STATUS, параметр REPORT отвечает [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/osnovy-abap/sap-dynpro/salv-table-nastrojka-pf-status/">SALV Table — Настройка PF-STATUS</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>На этапе создания экземпляра объекта (фабричным методом) мы определяем, как мы хотим использовать объект ALV таблицы, будет ли это полноэкранный режим, либо мы хотим поместить объект в подготовленный заранее контейнер. Данный выбор влияет на способ установки GUI статуса для ALV таблицы.</p>
<p><span id="more-436"></span></p>
<p><strong>В полноэкранном режиме</strong> для установки GUI статуса необходимо использовать метод SET_SCREEN_STATUS, параметр REPORT отвечает за то из какой программы будет взят GUI статус, PFSTATUS – имя GUI статуса, SET_FUNCTIONS – определяет какие стандартные функции будут использованы в программе. Может принимать значения: C_FUNCTIONS_DEFAULT – сортировки, фильтры, выбор формата. C_FUNCTIONS_ALL – все функции ALV, C_FUNCTIONS_NONE – по умолчанию, только пользовательские функции. Константы определены в классе: CL_SALV_MODEL_BASE</p>
<p>Стандартный GUI статус можно взять в группе функций: <strong>SALV_METADATA_STATUS</strong> – статус: SALV_TABLE_STANDARD или  SALV_TABLE_STDPOPUP, скопировать в свою программу и расширить необходимыми функциями.</p>
<p>Для того чтобы динамически исключить какую либо функцию можно применить класс <strong>cl_salv_functions</strong>, но вместо метода <strong>remove_function</strong> использовать метод <strong>set_function</strong>, параметр <strong>name</strong> определяет какую функцию будем скрывать, <strong>boolean</strong> &#8212; определяет скрыта она или нет, если скрываем ставим в abap_true. Метод <strong>remove_function</strong> не работает для полно-экранного грида.</p>
<p>Пример измененного GUI статуса (функции начинающиеся с &amp; являются стандартными):</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/02/salv_gui.png"><img loading="lazy" class="alignright size-full wp-image-437" title="salv_gui" src="http://abap-blog.ru/wp-content/uploads/2012/02/salv_gui.png" alt="" width="718" height="197" srcset="https://abap-blog.ru/wp-content/uploads/2012/02/salv_gui.png 718w, https://abap-blog.ru/wp-content/uploads/2012/02/salv_gui-300x82.png 300w" sizes="(max-width: 718px) 100vw, 718px" /></a></p>
<p>Когда ALV объект создается <strong>в контейнере</strong>, для настройки функций используется класс: <strong>cl_salv_functions.</strong>  Получить экземпляр этого класса можно используя метод &#8212; get_functions( ) главного объекта ALV. Для установки функций по умолчанию можно воспользоваться методом set_default( ) или set_all( ) – для установки всех функций ALV объекта. Чтобы добавить свою функцию существует метод add_function. Ниже пример того как это сделать:</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT zalv_simple.

PARAMETERS p_dummy.
DATA:
      gt_data      TYPE spfli_tab,  " Таблица с данными
      go_functions TYPE REF TO cl_salv_functions,
      go_alv       TYPE REF TO cl_salv_table.

INITIALIZATION.

  SELECT * FROM spfli INTO CORRESPONDING FIELDS OF TABLE gt_data.
  " Фабричный метод возвращяет экзмепляр ALV объекта
  TRY.
      cl_salv_table=&gt;factory(
         EXPORTING
           r_container = cl_gui_container=&gt;screen0
         IMPORTING
           r_salv_table = go_alv
         CHANGING
           t_table = gt_data ).
    CATCH cx_salv_msg .
      MESSAGE 'Ошибка при создании ALV' TYPE 'E'.
  ENDTRY.

  " Установка функций (кнопок)
  go_functions = go_alv-&gt;get_functions( ).

  IF go_functions IS BOUND.
    go_functions-&gt;set_all( abap_true ).
    go_functions-&gt;add_function(
      EXPORTING
        NAME      = 'ADDFUNC'
        icon      = '@01@'
        text      = 'ДопКнопка'
        tooltip   = 'Всплывающая подсказка'
        POSITION  = if_salv_c_function_position=&gt;right_of_salv_functions ).
  ENDIF.

  " показать alv
  go_alv-&gt;display( ).</pre><p></p><p>The post <a href="https://abap-blog.ru/osnovy-abap/sap-dynpro/salv-table-nastrojka-pf-status/">SALV Table — Настройка PF-STATUS</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/osnovy-abap/sap-dynpro/salv-table-nastrojka-pf-status/feed/</wfw:commentRss>
			<slash:comments>10</slash:comments>
		
		
			</item>
	</channel>
</rss>
