<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>DEQUEUE | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/dequeue/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 06:09:27 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>Концепция блокировок в SAP</title>
		<link>https://abap-blog.ru/database-work/koncepciya-blokirovok-v-sap/</link>
					<comments>https://abap-blog.ru/database-work/koncepciya-blokirovok-v-sap/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Fri, 10 Jan 2014 02:00:33 +0000</pubDate>
				<category><![CDATA[Работа с БД]]></category>
		<category><![CDATA[DEQUEUE]]></category>
		<category><![CDATA[DEQUEUE_ALL]]></category>
		<category><![CDATA[ENQUEUE]]></category>
		<category><![CDATA[ENQUEUE_READ]]></category>
		<category><![CDATA[SM12]]></category>
		<category><![CDATA[Система блокировок]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=570</guid>

					<description><![CDATA[<p>Если несколько программ конкурируют за доступ к одним и тем же данным, Вам необходимо обеспечить синхронизацию обращения к этим данным чтобы они оставались корректными и работа логики приложений не была нарушена. К примеру, если в системе резервирования билетов необходимо оформить билет на рейс, необходимо защитить данные в таблице хранящей записи о рейсах, чтобы во время [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/database-work/koncepciya-blokirovok-v-sap/">Концепция блокировок в SAP</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>Если несколько программ конкурируют за доступ к одним и тем же данным, Вам необходимо обеспечить синхронизацию обращения к этим данным чтобы они оставались корректными и работа логики приложений не была нарушена.</p>
<p><strong>К примеру</strong>, если в системе резервирования билетов необходимо оформить билет на рейс, необходимо защитить данные в таблице хранящей записи о рейсах, чтобы во время оформления другая программа не успела зарезервировать место раньше.</p>
<p><span id="more-570"></span></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/03/1.png"><img loading="lazy" class="alignnone wp-image-571" title="1" src="http://abap-blog.ru/wp-content/uploads/2012/03/1.png" alt="" width="518" height="330" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/1.png 1440w, https://abap-blog.ru/wp-content/uploads/2012/03/1-300x190.png 300w, https://abap-blog.ru/wp-content/uploads/2012/03/1-1024x651.png 1024w" sizes="(max-width: 518px) 100vw, 518px" /></a></p>
<p>С помощью блокировок можно скоординировать доступ к критичным данным. Программа должна предварительно запросить блокировку на эти данные. В данном случае необходимо чтобы программа как можно раньше сняла блокировку, чтобы не задерживать выполнение других.</p>
<p>СУБД физически блокирует записи в таблице во время их изменения, например: если используется синтаксис <strong>SELECT SINGLE &lt;f&gt; FROM</strong><strong>&lt;dbtab&gt; FOR UPDATE</strong>. Другие пользователи, которые хотят изменить те же данные, должны ожидать пока физическая блокировка будет снята. В конце ЛЕР (логической единицы работы, англ. LUW) базы данных все физические блокировки снимаются. В системе R3 это означает что при каждой смене экрана, будет сниматься физическая блокировка базы данных, так как при смене экрана вызывается неявный DB COMMIT, тем самым завершая ЛЕР базы данных.  Следовательно, физической блокировки записей средствами СУБД не достаточно, если данные собираются на нескольких экранах и необходимо сохранять блокировку во время их переключения. (использование множества экранов при сборе данных не является единственным вариантом вызова неявного DB Commit).</p>
<p>Для сохранения блокировки, в случае использования множества экранов (и не только), в системе R3 используется глобальная таблица блокировок, которая служит для установки <strong>логических блокировок</strong> для записей в таблицах. Все логические блокировки (далее блокировки) не зависят от сервера приложений, на котором они были вызваны, т.о. они являются общими для всех серверов приложений.</p>
<p>Кроме того вы можете использовать блокировки даже для тех записей, которых ещё не существует в системе.</p>
<p>Допускается использование специального символа @ при передаче значений параметров. Если указать в качестве значения параметра &#8212; 12345@, будут заблокированы объекты в диапазонах: от 123450 до 123459, от 12345a до 12345z, от 12345A до 12345Z и все объекты со специальными символами в 6-й позиции.</p>
<p>Логические блокировки вызываются модулем блокировки, который создаётся для объекта блокировки. Для вызова блокировки вызывается модуль ENQUEUE_&lt;имяОбъекта&gt;. Для снятия блокировки необходимо вызвать модуль DEQUEUE_&lt;ИмяОбъекта&gt;. Создаётся объект блокировки в транзакции SE11 (ABAP словарь). Например: объект EMMARCE блокирует таблицу MARC от записи. На вкладке ПарамБлокировки задаётся уровень блокировки:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/03/3.png"><img loading="lazy" class="alignnone size-full wp-image-573" title="3" src="http://abap-blog.ru/wp-content/uploads/2012/03/3.png" alt="" width="663" height="219" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/3.png 663w, https://abap-blog.ru/wp-content/uploads/2012/03/3-300x99.png 300w" sizes="(max-width: 663px) 100vw, 663px" /></a></p>
<p>Таким образом, мы можем заблокировать таблицу от записи на уровне манданта, материала, завода.  Свои объекты блокировок должны называться, начиная с EY или EZ. <em>Кроме того важной особенностью системы блокировок является то, что мы можем заблокировать еще не созданный (не существующий) объект.</em> После создания и активации объекта блокировок, модули блокирования/деблокирования создаются автоматически.</p>
<h3>Установка, настройка и администрирование логических блокировок</h3>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/03/4.png"><img loading="lazy" class="alignnone wp-image-574" title="4" src="http://abap-blog.ru/wp-content/uploads/2012/03/4.png" alt="" width="518" height="304" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/4.png 1440w, https://abap-blog.ru/wp-content/uploads/2012/03/4-300x176.png 300w, https://abap-blog.ru/wp-content/uploads/2012/03/4-1024x600.png 1024w" sizes="(max-width: 518px) 100vw, 518px" /></a></p>
<p>При вызове модуля блокирования система может вернуть два исключения. Первое FOREIGN_LOCK – означает, что блокировка уже установлена ранее.  SYSTEM_FAILURE – системная ошибка механизма блокировок.</p>
<p>Данные исключения необходимо корректно обработать, например: попросить пользователя подождать или сообщить о блокировании ресурса. Обратите внимание, что если блокировка не сработает, из-за уже установленной ранее, в системные переменные сообщений запишутся данные об ошибке, в частности параметр <strong>SY-MSGV1</strong> будет содержать имя пользователя установившего блокировку.</p>
<p>В случае завершения работы ABAP программы, все блокировки снимаются автоматически (неявно, но если произойдёт разрыв сети, то блокировка какое-то время будет «висеть» в системе).  Кроме того, блокировки могут так же сниматься программой обновления, за эту логику отвечает параметр _SCOPE (описание ниже). При вызове сообщений с типом X или A, вызовом команды LEAVE PROGRAM, LEAVE TO TRANSACTION или вводом команды /n блокировки так же снимаются.</p>
<p>Если вы хотите снять все блокировки в программе можно воспользоваться ФМ: DEQUEUE_ALL.  Для просмотра таблицы блокировок можно использовать транзакцию SM12, или ФМ: ENQUE_READ. Для удаления записи из таблицы блокировок ФМ: ENQUE_DELETE (или тр. SM12).</p>
<h4>Параметры EUQUEUE модуля</h4>
<p><strong>Mode_&lt;ИмяТаблицы&gt;</strong> &#8212; режим блокировки.  Перезаписывает режим блокировки из объекта блокировки:</p>
<ul>
<li>E (Exclusive lock &amp; cumulative) – блокирование от изменения данных, повторный вызов блокировки объекта в этом режиме не приведёт к ошибке, если вызов происходит в рамках одной программы (При запуске внутри одной сессии других программ через оператор CALL TRANSACTION или SUBMIT, если запущенная программа попытается выставить блокировку, система не позволит ей этого сделать). Следует использовать, когда вы изменяете какие-либо критичные данные, но не запрещаете просмотр этих данных. Если выставлена подобная блокировка, нельзя поставить блокировку в режиме S.</li>
<li>S (Shared lock) – данный режим следует использовать, в случае если вы хотите, чтобы во время показа данных пользователю, никто другой не смог их изменить. Может устанавливаться несколькими пользователями одновременно при просмотре данных. Если выставлена подобная блокировка, нельзя поставить блокировку в режиме E. Если была выставлена блокировка в режиме E (X), нельзя установить блокировку в режиме S.</li>
<li>O (Optimistic lock) –используется в тех случаях, когда вы отображаете какие-либо данные в режиме редактирования и хотите иметь возможность изменить их позже. Пример: перед вами список рейсов, вы думаете забронировать билет на один из них, что повлияет на количество занятых мест на этом рейсе. Соответственно вы должны поставить блокировки на все отображаемые рейсы, но так чтобы не мешать другим пользователям работать в системе бронирования. С другой стороны, установленные в таком режиме блокировки должны иметь возможность преобразовываться в реальные блокировки для записи (режим E).</li>
<li>X (Exclusive lock &amp; not cumulative) &#8212; расширенная блокировка от изменения данных (Если в своей программе вы вызываете блокировку от изменения данных второй раз для того же объекта, то в случае с X блокировка не пройдёт, но если вы поставили E или S система блокировок не выдаст исключения, <b>это важно понимать когда вы будете использовать систему блокировок в расширениях SAP системы или перед вызовом BAPI функций</b>).</li>
</ul>
<p>Кроме вышеуказанных режимов есть еще и другие значения этого параметра, которые выступают в роли команды для модуля блокировки:</p>
<ul>
<li>R &#8212; перевод ранее установленной оптимистичной блокировки в блокировку на запись E.</li>
<li>С &#8212; проверка возможности преобразования оптимистичной блокировки в блокировку на запись E.</li>
<li>U,V,W &#8212; проверка возможности установки блокировки в режимах X,E,S соответственно.</li>
</ul>
<p>На рисунках ниже демонстрируется, что будет происходить при установке блокировок в разных режимах (если программа ранее уже установила блокировку на объект и если блокировка была установлена другой программой):</p>
<p><a style="line-height: 1.5em;" href="http://abap-blog.ru/wp-content/uploads/2012/03/1111.png"><img loading="lazy" class="alignnone wp-image-1716" src="http://abap-blog.ru/wp-content/uploads/2012/03/1111.png" alt="111" width="479" height="305" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/1111.png 798w, https://abap-blog.ru/wp-content/uploads/2012/03/1111-300x190.png 300w" sizes="(max-width: 479px) 100vw, 479px" /></a></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/03/11111.png"><img loading="lazy" class="alignnone wp-image-1718" src="http://abap-blog.ru/wp-content/uploads/2012/03/11111.png" alt="1111" width="487" height="288" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/11111.png 812w, https://abap-blog.ru/wp-content/uploads/2012/03/11111-300x177.png 300w" sizes="(max-width: 487px) 100vw, 487px" /></a></p>
<p><b>&lt;ИмяПараметра&gt;</b> &#8212; при вводе параметров вы указываете, какие записи в таблицы будете блокировать.</p>
<p><b>X_&lt;ИмяПараметра&gt;</b> &#8212; в случае если значение равно X, блокируются записи с пустыми значениями.</p>
<p><b>_SCOPE</b> – может принимать следующие значения:</p>
<ul>
<li>«1» &#8212; Блокировка остаётся в программе и снимается ею же, либо после завершения транзакции. Если программа использует асинхронное обновление данных, нет гарантии что во время работы процесса обновления изменяемые данные не были заблокированы другим пользователем, соответственно не следует использовать при асинхронных обновлениях, используйте scope = 3.</li>
<li>«2» &#8212; По умолчанию. Блокировка снимается программой обновления, либо модулем деблокирования. Сразу при запуске ROLLBACK WORK. В случае если запускается COMMIT WORK и есть отложенные модули обновления (CALL FUNCTION ‘…’ IN UPDATE TASK), блокировка снимается после выполнения модулей обновления V1, на этапе вызова модулей обновления V2 блокировки уже сняты. Если до вызова COMMIT WORK не было запущено модулей обновления, блокировки не будут сняты.</li>
<li>«3» &#8212; Устанавливается две блокировки, одна остаётся установленной в программе и должна быть удалена в ней. Другая блокировка передаётся в программу обновления. Блокировка будет снята тогда, когда мы снимем её в программе и закончится обновление (по второму сценарию), либо после завершения программы.</li>
</ul>
<p><b>_wait</b> – если значение «X», функциональный модуль, в случае если уже стоит блокировка, будет ожидать определённый промежуток времени перед повторным вызовом ФМ. Количество повторений задаётся параметром в профиле (RZ11) &#8212; <b>ENQUE/DELAY_MAX</b>. Время, которое будет ожидать система 1 секунда (по умолчанию), параметр <b>ENQUE/DELAY_MAX_REFINE</b> отвечает за то, сколько раз в секунду будет происходить проверка.</p>
<p><b>_collect</b> – отвечает за то, что блокировка, перед тем как попасть в таблицу блокировок, будет помещена во временный буфер, после чего используя ФМ: <b>FLUSH_ENQUEUE</b> весь этот буфер будет отправлен на сервер блокировок (в таблицу блокировок), в случае если хотя бы одна блокировка не удалась, система выдаст исключение. Для очистки буфера служит ФМ: <b>RESET_ENQUEUE</b>. Используется при множественной блокировке объектов.</p>
<h3>Две концепции применения блокировок при изменении данных</h3>
<p>Если вы хотите быть уверенными в том, что редактируете актуальную версию данных и намерены её сохранить в базе данных, следует использовать одну из концепций установки блокировок: пессимистичную и оптимистичную. Оптимистичная концепция была внедрена начиная с версии ABAP 7.0. EhP2.</p>
<p>Пессимистичная блокировка (классическая) использует следующий порядок действий:</p>
<ol>
<li>Установить блокировку в режиме E (X)</li>
<li>Если блокировка установлена, считать данные из БД</li>
<li>Изменить данные в программе и БД</li>
<li>Снять блокировку</li>
</ol>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/03/classiclock.png"><img loading="lazy" class="alignnone size-large wp-image-1723" src="http://abap-blog.ru/wp-content/uploads/2012/03/classiclock-1024x674.png" alt="classiclock" width="550" height="362" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/classiclock-1024x674.png 1024w, https://abap-blog.ru/wp-content/uploads/2012/03/classiclock-300x197.png 300w, https://abap-blog.ru/wp-content/uploads/2012/03/classiclock.png 1440w" sizes="(max-width: 550px) 100vw, 550px" /></a></p>
<p>Оптимистичная блокировка:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/03/optimistic.png"><img loading="lazy" class="alignnone size-full wp-image-1728" src="http://abap-blog.ru/wp-content/uploads/2012/03/optimistic.png" alt="optimistic" width="648" height="427" srcset="https://abap-blog.ru/wp-content/uploads/2012/03/optimistic.png 648w, https://abap-blog.ru/wp-content/uploads/2012/03/optimistic-300x197.png 300w" sizes="(max-width: 648px) 100vw, 648px" /></a></p>
<p>Как было сказано выше, оптимистичные блокировки используются, когда пользователю отображаются данные в режиме изменения, но менять их в текущий момент пользователь не хочет. Если пользователь захочет сохранить измененные данные, ему потребуется сначала преобразовать блокировку из оптимистичной в блокировку на запись (эксклюзивную, режим «E»). Преобразование происходит путём вызова модуля блокировки с указанным режимом «R». Преобразование не сработает, если была выставлена другая блокировка в режиме E (X) или S. Если преобразование было успешным, другие оптимистичные блокировки будут сняты, выставлена одна с типом E.</p>
<p>Таким образом, для реализации оптимистичной системы блокировок применяются следующие шаги:</p>
<ol>
<li>Установка блокировки в режиме «O». На данном этапе ошибка может возникнуть, если в системе уже выставлена блокировка на запись, режим E (X).</li>
<li>Если блокировка успешно выставлена, читаем данные из БД.</li>
<li>Попытаться преобразовать блокировку из оптимистичной в блокировку на запись. В случае успеха оптимистичные блокировки в других программах будут сняты. Ошибка на данном этапе может возникнуть, если установлена блокировка в режиме S или оптимистичная блокировка была удалена (в связи с преобразованием оптимистичной блокировки в блокировку на запись в другой программе)</li>
<li>Изменить и сохранить данные в БД</li>
<li>Снять блокировку.</li>
</ol>
<p>Оптимистичные блокировки не защищают от внешних изменений данных, но благодаря им мы можем идентифицировать эти изменения.</p>
<h3>Важные параметры настройки системы блокировок</h3>
<ul>
<li>enque/table_size &#8212; размер таблицы блокировок в килобайтах, значение по умолчанию &#8212; 4096. Так как хранится таблица не на уровне сервера БД, а в памяти может потребоваться увеличение её объема.</li>
<li>enque/backup_file &#8212; путь к бекап файлу, блокировки из которого будут загружены при перезагрузке сервера блокировок.</li>
</ul>
<p>Официальная документация <a href="http://help.sap.com/saphelp_crm70/helpdata/en/47/df116e6abf296fe10000000a42189b/content.htm?frameset=/en/47/ea5dcce97f486ee10000000a42189d/frameset.htm">тут</a>.</p><p>The post <a href="https://abap-blog.ru/database-work/koncepciya-blokirovok-v-sap/">Концепция блокировок в SAP</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/database-work/koncepciya-blokirovok-v-sap/feed/</wfw:commentRss>
			<slash:comments>8</slash:comments>
		
		
			</item>
	</channel>
</rss>
