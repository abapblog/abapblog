<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>SAT | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/sat/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 06:09:44 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>6 способов найти место вызова сообщений</title>
		<link>https://abap-blog.ru/osnovy-abap/6-sposobov-vyyasnit-otkuda-bylo-vyzvano-soobshhenie/</link>
					<comments>https://abap-blog.ru/osnovy-abap/6-sposobov-vyyasnit-otkuda-bylo-vyzvano-soobshhenie/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Fri, 17 Jan 2014 12:31:35 +0000</pubDate>
				<category><![CDATA[Основы ABAP]]></category>
		<category><![CDATA[SAT]]></category>
		<category><![CDATA[ST05]]></category>
		<category><![CDATA[отладка]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=1780</guid>

					<description><![CDATA[<p>Задачу определения места в программе, из которого было вызвано сообщение, можно решить несколькими способами. Ниже будут рассмотрены основные из них. В качестве простого примера рассмотрим вызов сообщения в SE38, при неправильно указанном имени программы: Способ первый. Щелкнув дважды по сообщению и открыв подробный текст в разделе технической информации, мы увидим класс сообщения и его номер: [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/osnovy-abap/6-sposobov-vyyasnit-otkuda-bylo-vyzvano-soobshhenie/">6 способов найти место вызова сообщений</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>Задачу определения места в программе, из которого было вызвано сообщение, можно решить несколькими способами. Ниже будут рассмотрены основные из них.</p>
<p><span id="more-1780"></span><span style="line-height: 1.5em;">В качестве простого примера рассмотрим вызов сообщения в SE38, при неправильно указанном имени программы:</span></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/se38.png"><img loading="lazy" class="alignnone size-full wp-image-1781" src="http://abap-blog.ru/wp-content/uploads/2014/01/se38.png" alt="se38" width="488" height="290" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/se38.png 488w, https://abap-blog.ru/wp-content/uploads/2014/01/se38-300x178.png 300w" sizes="(max-width: 488px) 100vw, 488px" /></a></p>
<p><b>Способ первый</b>. Щелкнув дважды по сообщению и открыв подробный текст в разделе технической информации, мы увидим класс сообщения и его номер:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/tech_info.png"><img loading="lazy" class="alignnone size-full wp-image-1782" src="http://abap-blog.ru/wp-content/uploads/2014/01/tech_info.png" alt="tech_info" width="495" height="287" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/tech_info.png 495w, https://abap-blog.ru/wp-content/uploads/2014/01/tech_info-300x173.png 300w" sizes="(max-width: 495px) 100vw, 495px" /></a></p>
<p>Перейдя в указанный класс сообщений (тр. SE91) можно воспользоваться командой на поиск мест, где используется указанное сообщение:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/se91.png"><img loading="lazy" class="alignnone size-full wp-image-1783" src="http://abap-blog.ru/wp-content/uploads/2014/01/se91.png" alt="se91" width="767" height="419" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/se91.png 767w, https://abap-blog.ru/wp-content/uploads/2014/01/se91-300x163.png 300w" sizes="(max-width: 767px) 100vw, 767px" /></a></p>
<p>В результате список окажется довольно большим и нам надо будет прощелкать все программы в поисках нужного вызова:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/se91result.png"><img loading="lazy" class="alignnone size-full wp-image-1784" src="http://abap-blog.ru/wp-content/uploads/2014/01/se91result.png" alt="se91result" width="758" height="347" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/se91result.png 758w, https://abap-blog.ru/wp-content/uploads/2014/01/se91result-300x137.png 300w" sizes="(max-width: 758px) 100vw, 758px" /></a></p>
<p>В случае, когда список маленький, можем поставить точки прерывания в каждом из вызовов, повторим некорректный ввод программы мы, скорее всего, попадём в нужное нам место.</p>
<p>Данный способ не совсем удобен и не дает 100% результата, т.к. сообщение может быть вызвано не из класса сообщений, а список использования его программами может быть очень большим.</p>
<p><b>Способ второй</b>. Наиболее результативными способами будут способы, которые используют отладчик. С помощью точек наблюдений в отладчике, мы можем отследить состояние системных переменных: <b>sy-</b><b>msgid</b> и <b>sy-</b><b>msgno</b>. Переходим в отладку (/h):</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/debuf.png"><img loading="lazy" class="alignnone size-full wp-image-1785" src="http://abap-blog.ru/wp-content/uploads/2014/01/debuf.png" alt="debuf" width="491" height="232" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/debuf.png 491w, https://abap-blog.ru/wp-content/uploads/2014/01/debuf-300x141.png 300w" sizes="(max-width: 491px) 100vw, 491px" /></a></p>
<p>Нажимаем F8, переходим на вкладку Watchpoints, выставляем значения, полученные из технической информации:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/wp1.png"><img loading="lazy" class="alignnone size-full wp-image-1809" src="http://abap-blog.ru/wp-content/uploads/2014/01/wp1.png" alt="wp" width="870" height="273" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/wp1.png 870w, https://abap-blog.ru/wp-content/uploads/2014/01/wp1-300x94.png 300w" sizes="(max-width: 870px) 100vw, 870px" /></a></p>
<p>Запускаем программу (F8), вываливаемся на нужном месте:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/wpres1.png"><img loading="lazy" class="alignnone size-full wp-image-1810" src="http://abap-blog.ru/wp-content/uploads/2014/01/wpres1.png" alt="wpres" width="1109" height="350" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/wpres1.png 1109w, https://abap-blog.ru/wp-content/uploads/2014/01/wpres1-300x94.png 300w, https://abap-blog.ru/wp-content/uploads/2014/01/wpres1-1024x323.png 1024w" sizes="(max-width: 1109px) 100vw, 1109px" /></a></p>
<p><b>Способ третий</b>. Таким же способом, как и ранее, попадаем в отладку, далее переходим к выставлению точек прерывания и указываем ABAP команду MESSAGE:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/msg1.png"><img loading="lazy" class="alignnone size-full wp-image-1811" src="http://abap-blog.ru/wp-content/uploads/2014/01/msg1.png" alt="msg" width="900" height="380" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/msg1.png 900w, https://abap-blog.ru/wp-content/uploads/2014/01/msg1-300x126.png 300w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p>Либо добавляем её через меню:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/msg_menu1.png"><img loading="lazy" class="alignnone size-full wp-image-1812" src="http://abap-blog.ru/wp-content/uploads/2014/01/msg_menu1.png" alt="msg_menu" width="900" height="373" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/msg_menu1.png 900w, https://abap-blog.ru/wp-content/uploads/2014/01/msg_menu1-300x124.png 300w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p>В данном случае можно будет указать еще и тип вызываемого сообщения:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/msgmenu.png"><img loading="lazy" class="alignnone size-full wp-image-1790" src="http://abap-blog.ru/wp-content/uploads/2014/01/msgmenu.png" alt="msgmenu" width="809" height="352" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/msgmenu.png 809w, https://abap-blog.ru/wp-content/uploads/2014/01/msgmenu-300x130.png 300w" sizes="(max-width: 809px) 100vw, 809px" /></a></p>
<p><b style="line-height: 1.5em;">Способ четвертый</b><span style="line-height: 1.5em;">. Найти вхождение вызова оператора MESSAGE, используя программы сканирования исходного текста. Первое что нужно сделать определится через статус системы где мы находимся и в какой программе нужно искать (По меню Система -&gt; Статус):</span></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/status.png"><img loading="lazy" class="alignnone size-full wp-image-1791" src="http://abap-blog.ru/wp-content/uploads/2014/01/status.png" alt="status" width="264" height="166" /></a></p>
<p>Далее открываем программу сканирования исходного текста (через SE38) RPR_ABAP_SOURCE_SCAN (либо использовать транзакцию CODE_SCANNER) и заполняем искомые данные:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/scan.png"><img loading="lazy" class="alignnone size-full wp-image-1792" src="http://abap-blog.ru/wp-content/uploads/2014/01/scan.png" alt="scan" width="633" height="218" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/scan.png 633w, https://abap-blog.ru/wp-content/uploads/2014/01/scan-300x103.png 300w" sizes="(max-width: 633px) 100vw, 633px" /></a></p>
<p>Результат:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/scanres.png"><img loading="lazy" class="alignnone size-full wp-image-1793" src="http://abap-blog.ru/wp-content/uploads/2014/01/scanres.png" alt="scanres" width="515" height="171" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/scanres.png 515w, https://abap-blog.ru/wp-content/uploads/2014/01/scanres-300x99.png 300w" sizes="(max-width: 515px) 100vw, 515px" /></a></p>
<p><b>Способ пятый</b>. С помощью транзакции SAT можно проанализировать вызовы всех ABAP операторов в программе. Первым делом нужно создать вариант, в котором не будут объединяться измерения:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/sat.png"><img loading="lazy" class="alignnone size-full wp-image-1794" src="http://abap-blog.ru/wp-content/uploads/2014/01/sat.png" alt="sat" width="439" height="254" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/sat.png 439w, https://abap-blog.ru/wp-content/uploads/2014/01/sat-300x173.png 300w" sizes="(max-width: 439px) 100vw, 439px" /></a></p>
<p>Далее запускаем транзакцию SE38 через SAT с нашим вариантом:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/satvar1.png"><img loading="lazy" class="alignnone size-full wp-image-1813" src="http://abap-blog.ru/wp-content/uploads/2014/01/satvar1.png" alt="satvar" width="612" height="354" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/satvar1.png 612w, https://abap-blog.ru/wp-content/uploads/2014/01/satvar1-300x173.png 300w" sizes="(max-width: 612px) 100vw, 612px" /></a></p>
<p>После трассировки смотрим иерархию вызовов и ищем оператор MESSAGE:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/satsearch.png"><img loading="lazy" class="alignnone size-full wp-image-1796" src="http://abap-blog.ru/wp-content/uploads/2014/01/satsearch.png" alt="satsearch" width="814" height="350" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/satsearch.png 814w, https://abap-blog.ru/wp-content/uploads/2014/01/satsearch-300x128.png 300w" sizes="(max-width: 814px) 100vw, 814px" /></a></p>
<p>Результат:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/satrestult.png"><img loading="lazy" class="alignnone size-full wp-image-1797" src="http://abap-blog.ru/wp-content/uploads/2014/01/satrestult.png" alt="satrestult" width="843" height="230" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/satrestult.png 843w, https://abap-blog.ru/wp-content/uploads/2014/01/satrestult-300x81.png 300w" sizes="(max-width: 843px) 100vw, 843px" /></a></p>
<p>Щелкнув два раза по позиции, мы перейдем в нужное нам место. Данный способ не является оптимальным, т.к. в больших программах файл трассировки будет очень большим и его анализ затянется.</p>
<p><b>Способ шестой</b>. Использовать транзакцию <b>ST05</b>. Порядок действий следующий:</p>
<ul>
<li>Открыть две сессии в одной запустить ST05, во второй SE38 с неверным названием программы</li>
<li>Активируем трассировку</li>
<li>Запускаем программу в SE38</li>
<li>Деактивируем трассировку</li>
</ul>
<p>Зная, что таблица с наименованиями программы называется <b>PROGDIR</b>, мы можем перейти в то место кода программы, где вызывается считывание данной таблицы. Предполагаем, что вызов сообщения о несуществующей программе будет где-то «рядом»:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/st05.png"><img loading="lazy" class="alignnone size-full wp-image-1798" src="http://abap-blog.ru/wp-content/uploads/2014/01/st05.png" alt="st05" width="947" height="184" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/st05.png 947w, https://abap-blog.ru/wp-content/uploads/2014/01/st05-300x58.png 300w" sizes="(max-width: 947px) 100vw, 947px" /></a></p>
<p>Как видим на рисунке, наше предположение было верным:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/01/st05result.png"><img loading="lazy" class="alignnone size-full wp-image-1799" src="http://abap-blog.ru/wp-content/uploads/2014/01/st05result.png" alt="st05result" width="519" height="673" srcset="https://abap-blog.ru/wp-content/uploads/2014/01/st05result.png 519w, https://abap-blog.ru/wp-content/uploads/2014/01/st05result-231x300.png 231w" sizes="(max-width: 519px) 100vw, 519px" /></a></p>
<p>С оригиналом статьи можно ознакомиться <a href="http://scn.sap.com/community/abap/blog/2013/11/15/six-kinds-of-debugging-tips-to-find-the-source-code-where-the-message-is-raised">тут</a>.</p><p>The post <a href="https://abap-blog.ru/osnovy-abap/6-sposobov-vyyasnit-otkuda-bylo-vyzvano-soobshhenie/">6 способов найти место вызова сообщений</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/osnovy-abap/6-sposobov-vyyasnit-otkuda-bylo-vyzvano-soobshhenie/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
