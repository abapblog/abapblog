<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>GOS | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/gos/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 05:55:27 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>Generic Object Services (Часть 2 &#8212; вложения и связи)</title>
		<link>https://abap-blog.ru/enhancements/generic-object-services-chast-2-vlozheniya-i-soedineniya/</link>
					<comments>https://abap-blog.ru/enhancements/generic-object-services-chast-2-vlozheniya-i-soedineniya/#respond</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Mon, 30 Jan 2012 07:31:46 +0000</pubDate>
				<category><![CDATA[Расширения]]></category>
		<category><![CDATA[cl_binary_relation]]></category>
		<category><![CDATA[cl_gos_service_tools]]></category>
		<category><![CDATA[GOS]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=379</guid>

					<description><![CDATA[<p>Использование соединений Между двумя бизнес объектами могут быть созданы ссылочные связи.  Например: к закупочному заказу мы можем привязать все материальные документы, которые относились к данному заказу. То в какой роли выступает объект, прописывается в ракурсе VROBJROLES.  Например, для того чтобы иметь возможность присоединять плановые заказы в виде ссылок, необходимо внести соответствующую запись в указанный выше [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/enhancements/generic-object-services-chast-2-vlozheniya-i-soedineniya/">Generic Object Services (Часть 2 — вложения и связи)</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<h4>Использование соединений</h4>
<p>Между двумя бизнес объектами могут быть созданы ссылочные связи.  Например: к закупочному заказу мы можем привязать все материальные документы, которые относились к данному заказу. То в какой роли выступает объект, прописывается в ракурсе <strong>VROBJROLES</strong>.  Например, для того чтобы иметь возможность присоединять плановые заказы в виде ссылок, необходимо внести соответствующую запись в указанный выше ракурс. Указать тип роли: <strong>REFERENZ</strong>.</p>
<p><span id="more-379"></span></p>
<p>Для создания соединений создан статический метод <strong>create_link</strong> (<strong>DELETE_LINK</strong> – для удаления) класса <strong>cl_binary_relation</strong>, данный метод не поддерживает все типы соединений, в этом случае необходимо воспользоваться ФМ<strong> BINARY_RELATION_CREATE</strong> (<strong>BINARY_RELATION_DELETE</strong> – для удаления).</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT  zgos_relation_create.
*
*
CLASS lcl_relation DEFINITION.
  PUBLIC SECTION.
    TYPES:
      BEGIN OF ty_related.
            INCLUDE TYPE sibflporb.
    TYPES:
        relation TYPE oblreltype,
      END OF ty_related.
    TYPES:
      ty_t_related TYPE STANDARD TABLE OF ty_related.
    METHODS:
      CONSTRUCTOR
        IMPORTING
          obj_no   TYPE sibfboriid
          obj_type TYPE sibftypeid
          obj_cat  TYPE sibfcatid.
    METHODS:
      add_relation
        IMPORTING
          obj_no   TYPE sibfboriid
          obj_type TYPE sibftypeid
          obj_cat  TYPE sibfcatid
          relation TYPE oblreltype.
    METHODS:
      create_relations.
  PRIVATE SECTION.
    DATA:
      t_related TYPE ty_t_related,  "sibflporbt,
      my_prop   TYPE sibflporb.
ENDCLASS.                    "lcl_relation DEFINITION
*
*
CLASS lcl_relation IMPLEMENTATION.
  METHOD CONSTRUCTOR.
* Установим id объекта к которому добавляем соединение
    me-&gt;my_prop-instid = obj_no.
    me-&gt;my_prop-typeid = obj_type.
    me-&gt;my_prop-catid  = obj_cat.
  ENDMETHOD.                    "constructor
  METHOD add_relation.
* Добавим соединение во внутреннюю таблицу
    FIELD-SYMBOLS: &lt;lfs_relat&gt; LIKE LINE OF me-&gt;t_related.
    APPEND INITIAL LINE TO me-&gt;t_related ASSIGNING &lt;lfs_relat&gt;.
    &lt;lfs_relat&gt;-instid = obj_no.
    &lt;lfs_relat&gt;-typeid = obj_type.
    &lt;lfs_relat&gt;-catid  = obj_cat.
    &lt;lfs_relat&gt;-relation = relation.
  ENDMETHOD.                    "add_relation
*
  METHOD create_relations.
    DATA: lwa_relate_key TYPE sibflporb.
    FIELD-SYMBOLS: &lt;lfs_relat&gt; LIKE LINE OF me-&gt;t_related.
*
    DATA:
      ls_parent   TYPE borident,
      ls_related  TYPE borident,
      lv_relation TYPE binreltyp,
      lx_obl    TYPE REF TO cx_obl,
      lp_errstr TYPE STRING,
      lv_done TYPE flag.
*
    LOOP AT me-&gt;t_related ASSIGNING &lt;lfs_relat&gt;.
      MOVE-CORRESPONDING &lt;lfs_relat&gt; TO lwa_relate_key.
      TRY.
          CALL METHOD cl_binary_relation=&gt;create_link
            EXPORTING
              is_object_a = my_prop
              is_object_b = lwa_relate_key
              ip_reltype  = &lt;lfs_relat&gt;-relation.
*
          lv_done = 'X'.
*
* Если соединение не может быть обработано данным классом
* Воспользуемся ФМ
        CATCH cx_obl_model_error.
*
          ls_parent-objkey  = me-&gt;my_prop-instid.
          ls_parent-objtype = me-&gt;my_prop-typeid.
          ls_related-objkey  = &lt;lfs_relat&gt;-instid.
          ls_related-objtype = &lt;lfs_relat&gt;-typeid.
          lv_relation = &lt;lfs_relat&gt;-relation.
*
          CALL FUNCTION 'BINARY_RELATION_CREATE'
            EXPORTING
              obj_rolea      = ls_parent
              obj_roleb      = ls_related
              relationtype   = lv_relation
            EXCEPTIONS
              no_model       = 1
              internal_error = 2
              unknown        = 3
              OTHERS         = 4.
          IF sy-subrc &lt;&gt; 0.
            MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
                    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          ELSE.
            lv_done = 'X'.
          ENDIF.
        CATCH cx_obl INTO lx_obl.
          lp_errstr = lx_obl-&gt;get_text( ).
          MESSAGE lp_errstr TYPE 'S'.
      ENDTRY.
*
      IF lv_done = 'X'.
        WRITE: / 'Связь создана: ', &lt;lfs_relat&gt;-instid(10), &lt;lfs_relat&gt;-relation.
      ENDIF.
*
    ENDLOOP.
*
    COMMIT WORK.
*
  ENDMETHOD.
ENDCLASS.
*
START-OF-SELECTION.
  DATA: o_relation TYPE REF TO lcl_relation.
*
* В качестве документа к которому создаем соединение выступает сбытовой заказ
  CREATE OBJECT o_relation
    EXPORTING
      obj_no   = '1000010010'
      obj_type = 'BUS2032'
      obj_cat  = 'BO'.
*
* Добавим поставку в качестве ссылки к сбытовому заказу
  o_relation-&gt;add_relation(
    obj_no   = '8000020000'
    obj_type = 'LIKP'
    obj_cat  = 'BO'
    relation = 'LINK' ).             " Link
*
* Добавим IDOC в качестве ссылки к сбытовому заказу
  o_relation-&gt;add_relation(
    obj_no   = '1000012345'
    obj_type = 'IDOC'
    obj_cat  = 'BO'
    relation = 'IDC0' ).             " IDOC
*
* Создаем соединения
  o_relation-&gt;create_relations( ).</pre><p><strong>Работа с вложениями</strong></p>
<p>Для получения списка вложений можно воспользоваться все тем же классом cl_binary_relation и его методом <strong>read_links</strong>. Для чтения содержимого вложения используется ФМ: <strong>SO_OBJECT_READ</strong>.</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT  zgos_note.

START-OF-SELECTION.
  DATA: gs_lpor TYPE sibflporb,
        lt_relat TYPE obl_t_relt,
        la_relat LIKE LINE OF lt_relat.

  gs_lpor-instid = '4500000324'.
  gs_lpor-typeid = 'BUS2012'.
  gs_lpor-catid  = 'BO'.

  la_relat-SIGN = 'I'.
  la_relat-OPTION = 'CP'.
  la_relat-LOW = '*'.
  APPEND la_relat TO lt_relat.

  DATA: t_links TYPE obl_t_link,
        la_links LIKE LINE OF t_links.

  DATA: lo_root TYPE REF TO CX_ROOT.

  TRY.
      CALL METHOD cl_binary_relation=&gt;read_links
        EXPORTING
          is_object           = gs_lpor
          it_relation_options = lt_relat
        IMPORTING
          et_links            = t_links.
    CATCH CX_ROOT INTO lo_root.
  ENDTRY.

  DATA l_folder_id TYPE soodk.
  DATA l_object_id TYPE soodk.
  DATA document_id TYPE sofmk.

  READ TABLE t_links INTO la_links INDEX 1.
  document_id = la_links-instid_b.

  l_folder_id-objtp = document_id-foltp.
  l_folder_id-objyr = document_id-folyr.
  l_folder_id-objno = document_id-folno.

  l_object_id-objtp = document_id-doctp.
  l_object_id-objyr = document_id-docyr.
  l_object_id-objno = document_id-docno.

  DATA: document_content  TYPE STANDARD TABLE OF soli,
        SOFM2   TYPE SOOD2. " Кто и когда создал
* Получение содержимого файла.
  CALL FUNCTION 'SO_OBJECT_READ'
    EXPORTING
      folder_id                  = l_folder_id
      object_id                  = l_object_id
    IMPORTING
      object_hd_display          = SOFM2
    TABLES
      objcont                    = document_content
    EXCEPTIONS
      active_user_not_exist      = 1
      communication_failure      = 2
      component_not_available    = 3
      folder_not_exist           = 4
      folder_no_authorization    = 5
      object_not_exist           = 6
      object_no_authorization    = 7
      operation_no_authorization = 8
      owner_not_exist            = 9
      parameter_error            = 10
      substitute_not_active      = 11
      substitute_not_defined     = 12
      system_failure             = 13
      x_error                    = 14
      OTHERS                     = 15.
  IF sy-subrc NE 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.</pre><p>Еще один полезный метод  <strong>copy_linked_objects</strong> класса <strong>cl_gos_service_tools</strong> позволяет копировать вложения между двумя бизнес объектами.</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT  Zсopy_gos_att.
*
*
DATA: lt_services TYPE tgos_sels.    " Services table typ
DATA: ls_service TYPE sgos_sels.     " Services structure type
DATA: ls_source TYPE sibflporb,      " Source
      ls_target TYPE sibflporb.      " Target
*
START-OF-SELECTION.
*
* Service needs to be performed
  ls_service-SIGN   = 'I'.
  ls_service-OPTION = 'EQ'.
  ls_service-LOW    = 'PCATTA_CREA'.
  APPEND ls_service TO lt_services.
*
* Source
  ls_source-instid = 'CUST1'.
  ls_source-typeid = 'KNA1'.
  ls_source-catid  = 'BO'.
*
* Target
  ls_target-instid = 'CUST2'.
  ls_target-typeid = 'KNA1'.
  ls_target-catid  = 'BO'.
*
* Copy the objects between Source and Target
  cl_gos_service_tools=&gt;copy_linked_objects(
      is_source            = ls_source
      is_target            = ls_target
      it_service_selection = lt_services
         ).
*
  COMMIT WORK.</pre><p><a href="http://abap-blog.ru/others/generic-object-services-chast-1/">Предыдущая статья</a></p><p>The post <a href="https://abap-blog.ru/enhancements/generic-object-services-chast-2-vlozheniya-i-soedineniya/">Generic Object Services (Часть 2 — вложения и связи)</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/enhancements/generic-object-services-chast-2-vlozheniya-i-soedineniya/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Generic Object Services (Часть 1 &#8212; Введение)</title>
		<link>https://abap-blog.ru/enhancements/generic-object-services-chast-1/</link>
					<comments>https://abap-blog.ru/enhancements/generic-object-services-chast-1/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Fri, 27 Jan 2012 04:40:57 +0000</pubDate>
				<category><![CDATA[Расширения]]></category>
		<category><![CDATA[CL_GOS_SERVICE]]></category>
		<category><![CDATA[Generic Object Services]]></category>
		<category><![CDATA[GOS]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=359</guid>

					<description><![CDATA[<p>GOS – технология предоставляющая функции к разным приложениям SAP. Эти функции всегда относятся к объекту приложения, например: показывают связанные с ним файлы, запускают Workflow, добавляют заметки пользователя к объекту, отправляют его по почте. Под объектом понимается бизнес объект: материал, сбытовой заказ, закупочный заказ и т.п. (посмотреть можно в SWO1) Внешне это выглядит как кнопка на [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/enhancements/generic-object-services-chast-1/">Generic Object Services (Часть 1 — Введение)</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>GOS – технология предоставляющая функции к разным приложениям SAP. Эти функции всегда относятся к объекту приложения, например: показывают связанные с ним файлы, запускают Workflow, добавляют заметки пользователя к объекту, отправляют его по почте.</p>
<p><span id="more-359"></span></p>
<p>Под объектом понимается бизнес объект: материал, сбытовой заказ, закупочный заказ и т.п. (посмотреть можно в SWO1) Внешне это выглядит как кнопка на панели инструментов с заголовком программы:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_1.png"><img loading="lazy" class="alignnone size-full wp-image-360" title="gos1_1" src="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_1.png" alt="" width="255" height="92" /></a></p>
<p>Возможности GOS:</p>
<ul>
<li>Ввод личных и общих заметок к объекту</li>
<li>Создание вложений к объекту (картинки, документы и т.п.)</li>
<li>Создание связей между объектами (Например: к объекту закупочного заказа можно прикрепить все материальные документы, заявки).</li>
<li>Показывает все Workflows, в которых используется объект, позволяет вести архивирование и запуск.</li>
<li>Возможность отправки объекта во вложении в письме из одной SAP системы в другую</li>
<li>Подписываться на объект, для уведомления обо всех изменениях, вносимых в него</li>
<li>Добавлять в список фаворитов, для быстрого доступа к объекту (Система –&gt; Мои объекты).</li>
</ul>
<h2>Администрирование GOS</h2>
<p>Необходимые роли для администрирования GOS: SAP_BC_SRV_GBT, SAP_BC_BMT_WFM_ADMIN and SAP_BC_SRV_ARL_ADMIN. Авторизация для работы с GOS зависит от авторизации со связанным бизнес объектом.  Если у пользователя нет полномочий на изменение бизнес объекта, те действия GOS, которые вносят какие либо изменения, так же не будут ему доступны.</p>
<p>Все пользователи имеют доступ к общим вложениям и заметкам, но доступ на изменение заметки или вложения имеет пользователь, который их создал.  Только пользователь, который создал личную заметку, имеет возможность ее просматривать или изменять. Для ввода бизнес документов, штрих кодов должен быть настроен <a href="http://help.sap.com/saphelp_nw70/helpdata/EN/5e/566039b85f9443e10000000a114084/frameset.htm" target="_parent" rel="noopener noreferrer">ArchiveLink</a> (транзакции OAC1-5).</p>
<p>Отправка бизнес объекта как вложения использует функциональность Business Workplace, для его настройки обратитесь к справке <a href="http://help.sap.com/saphelp_nw70/helpdata/EN/6c/69c302418d11d1896e0000e8322d00/frameset.htm" target="_parent" rel="noopener noreferrer">Administration of Send, Folder and Office Functions</a>.</p>
<p>Отправка внешних писем использует SAPConnect, его администрирование рассматривается тут <a href="http://help.sap.com/saphelp_nw70/helpdata/EN/2b/d925bf4b8a11d1894c0000e8323c4f/frameset.htm" target="_parent" rel="noopener noreferrer">SAPconnect (BC-SRV-COM)</a>.</p>
<p>Администрирование Workflow рассматривается тут <a href="http://help.sap.com/saphelp_nw70/helpdata/EN/b9/2a651eb04411d2b46f006094b9ea0d/frameset.htm" target="_parent" rel="noopener noreferrer">Workflow System Administration</a>.</p>
<h3>Настройка подписки на изменения объектов</h3>
<p>По умолчанию пользователь может подписываться на события или изменения объектов, но вы так же можете добавить и свои дополнительные события.</p>
<p>Процедура настройки:</p>
<ol start="1">
<li>Перейдите в ведение ракурса таблицы SM30 – SGOSSUB</li>
<li>Создайте новую запись и укажите:</li>
</ol>
<ul>
<li>Тип объекта (BUS2012 – заказ на поставку, просмотреть можно в тр. SWO1)</li>
<li>Событие, на которое будем подписываться (CHANGED – изменение заказа)</li>
<li>Индикатор подписки, если она активна, ставим галочку</li>
<li>Функциональный модуль для дополнительной проверки</li>
<li>Заголовок письма (Объект &amp;OBJKEY&amp; был изменен &#8212; &amp;SY-DATUM&amp;, тип объекта – &amp;OBJTYP&amp;, атрибут &amp;ATTRIBUTE&amp;)</li>
<li>Содержимое письма, в качестве стандартного содержимого используется текст SGBT_DEF_SUB.</li>
<li>Нажмите сохранить.</li>
</ul>
<div><span style="line-height: 18px;"><a href="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_7.png"><img loading="lazy" class="alignnone size-full wp-image-366" title="gos1_7" src="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_7.png" alt="" width="599" height="335" srcset="https://abap-blog.ru/wp-content/uploads/2012/01/gos1_7.png 599w, https://abap-blog.ru/wp-content/uploads/2012/01/gos1_7-300x167.png 300w" sizes="(max-width: 599px) 100vw, 599px" /></a></span></div>
<p>После чего можно настроить уведомление на изменение бизнес объекта (заказа на закупку). Нажав на кнопку GOS -&gt; Мои объекты -&gt; Абонировать/сторнировать объект.</p>
<h3>Добавление своего пункта меню в панель GOS</h3>
<p>Перед добавлением своего пункта меню в GOS панель необходимо создать глобальный класс реализующий обработку события выбора данного пункта меню. Класс должен быть унаследован от CL_GOS_SERVICE. В качестве примера я создам пункт меню, при нажатии на который показывается пользователь, создавший закупочный заказ.</p>
<ul>
<li>Создадим наследуемый от CL_GOS_SERVICE глобальный класс ZCL_PO_USER_CHANGE. (тр. SE24).</li>
<li>Логика обработки нажатия на наш элемент в GOS панели обрабатывается в методе EXECUTE. Необходимо переопределить метод, внести туда наш код.</li>
</ul>
<p></p><pre class="urvanov-syntax-highlighter-plain-tag">DATA: ERNAM TYPE EKKO-ERNAM.

SELECT SINGLE ERNAM INTO (ernam) FROM EKKO WHERE EBELN EQ GS_LPORB-INSTID.
IF sy-subrc EQ 0.
  MESSAGE ernam TYPE 'I'.
ENDIF.</pre><p></p>
<ul>
<li>Переопределить метод  CHECK_STATUS, для активации сервиса только для объекта BUS2012</li>
</ul>
<p></p><pre class="urvanov-syntax-highlighter-plain-tag">IF gs_lporb-typeid EQ 'BUS2012'.
    ep_status = mp_status_active.
  ELSE.
    ep_status = mp_status_invisible.
  ENDIF.</pre><p></p>
<ul>
<li>Для добавления к списку сервисов необходимо внести его через ведение в SM30 таблица SGOSATTR.</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_2.png"><img loading="lazy" class="alignnone size-full wp-image-361" title="gos1_2" src="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_2.png" alt="" width="593" height="410" srcset="https://abap-blog.ru/wp-content/uploads/2012/01/gos1_2.png 593w, https://abap-blog.ru/wp-content/uploads/2012/01/gos1_2-300x207.png 300w" sizes="(max-width: 593px) 100vw, 593px" /></a></p>
<ul>
<li>После создания записи необходимо добавить ссылку на наш сервис в крайнем в очереди сервисе, в моем случае это справка к GOS (Можно вставить и по середине, для этого придется изменить 2 записи):</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_3.png"><img loading="lazy" class="alignnone size-full wp-image-362" title="gos1_3" src="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_3.png" alt="" width="592" height="414" srcset="https://abap-blog.ru/wp-content/uploads/2012/01/gos1_3.png 592w, https://abap-blog.ru/wp-content/uploads/2012/01/gos1_3-300x209.png 300w" sizes="(max-width: 592px) 100vw, 592px" /></a></p>
<p>Если этого не сделать сервис будет не активным. Флаг Управление означает, что при выполнении сервиса будет создан контейнер (параметр IO_CONTAINER в методе EXECUTE).</p>
<p>В конечном итоге для GOS панели объекта BUS2012 (Закупочный заказ, тр. ME23n) мы создали пункт меню который дает нам информацию о пользователе, создавшем заказ.</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_4.png"><img loading="lazy" class="alignnone size-full wp-image-363" title="gos1_4" src="http://abap-blog.ru/wp-content/uploads/2012/01/gos1_4.png" alt="" width="437" height="193" srcset="https://abap-blog.ru/wp-content/uploads/2012/01/gos1_4.png 437w, https://abap-blog.ru/wp-content/uploads/2012/01/gos1_4-300x132.png 300w" sizes="(max-width: 437px) 100vw, 437px" /></a></p><p>The post <a href="https://abap-blog.ru/enhancements/generic-object-services-chast-1/">Generic Object Services (Часть 1 — Введение)</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/enhancements/generic-object-services-chast-1/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
