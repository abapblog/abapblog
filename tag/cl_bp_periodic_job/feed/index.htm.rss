<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>cl_bp_periodic_job | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/cl_bp_periodic_job/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 05:54:34 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>Фоновые задания используя ABAP Objects (Часть 2)</title>
		<link>https://abap-blog.ru/osnovy-abap/fonovye-zadaniya-ispolzuya-abap-objects-chast-2/</link>
					<comments>https://abap-blog.ru/osnovy-abap/fonovye-zadaniya-ispolzuya-abap-objects-chast-2/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Fri, 20 Jan 2012 04:34:28 +0000</pubDate>
				<category><![CDATA[Основы ABAP]]></category>
		<category><![CDATA[CL_BP_ABAP_JOB]]></category>
		<category><![CDATA[cl_bp_periodic_job]]></category>
		<category><![CDATA[фоновые задания]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=246</guid>

					<description><![CDATA[<p>В этой части будет продемонстрировано каким образом создавать задания с несколькими шагами, а так же как создать задание выполняющееся периодически. Задания с несколькими шагами Прежнее API для создания фоновых задач позволяло создавать их с несколькими шагами. Делалось это с помощью функциональных модулей: JOB_OPEN &#8212; создание задачи,  JOB_SUBMIT &#8212; планирование шага в задаче. В новом API [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/osnovy-abap/fonovye-zadaniya-ispolzuya-abap-objects-chast-2/">Фоновые задания используя ABAP Objects (Часть 2)</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>В этой части будет продемонстрировано каким образом создавать задания с несколькими шагами, а так же как создать задание выполняющееся периодически.</p>
<p><span id="more-246"></span></p>
<h3>Задания с несколькими шагами</h3>
<p>Прежнее API для создания фоновых задач позволяло создавать их с несколькими шагами. Делалось это с помощью функциональных модулей: <strong>JOB_OPEN</strong> &#8212; создание задачи,  <strong>JOB_SUBMIT</strong> &#8212; планирование шага в задаче. В новом API на классах это реализовано, но довольно странно.</p>
<p>Для создания задачи с несколькими шагами был реализован метод в абстрактном классе:  CL_BP_JOB, метод:   <strong>GENERATE_JOB_COUNT</strong>. Обратиться к нему можно только через интерфейс. Для создания шага в CL_BP_ABAP_JOB создан метод  PLAN_JOB_STEP( ), но по непонятной причине алиас к нему не прописан, в итоге приходится обращаться так же через интерфейс.</p>
<p>В итоге пример создания задания с несколькими шагами получился таким:</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT zbg_api.

DATA: lo_abapjob TYPE REF TO cl_bp_abap_job.

lo_abapjob = cl_bp_job_factory=&gt;make_abap_job( ).

" Устанавливаем имя для фонового задания
lo_abapjob-&gt;set_name( i_name = 'ZTESTJOB' ).
" Определяем шаг запуска ABAP отчёта
lo_abapjob-&gt;set_report( i_report = 'ZTEPORT_ONE' ).
" Вариант с которым он будет запущен
lo_abapjob-&gt;set_variant( i_variant = 'TEST' ).
" Под каким пользователем он будет выполнен
lo_abapjob-&gt;set_effective_user( i_authcknam = sy-uname ).
" Под каким языком
lo_abapjob-&gt;set_language( i_language = sy-langu ).

" Поведение реализовано "заранее" в абстрактном классе
lo_abapjob-&gt;if_bp_job_engine~generate_job_count( ).
" Метод переопределен, но доступ к нему можно получить только
" через интерфейс т.к. алиаса нет
lo_abapjob-&gt;if_bp_job_engine~plan_job_step( ).

" Определяем шаг запуска ABAP отчёта
lo_abapjob-&gt;set_report( i_report = 'ZREPORT_TWO' ).
" Вариант с которым он будет запущен
lo_abapjob-&gt;set_variant( i_variant = 'TEST2' ).
lo_abapjob-&gt;if_bp_job_engine~plan_job_step( ).

lo_abapjob-&gt;if_bp_job_engine~start_immediately( ).</pre><p></p>
<h3>Повторяющиеся задания</h3>
<p>Повторяющиеся задания или задания с определенной периодичностью создаются с использованием класса: <strong>cl_bp_periodic_job</strong></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2012/01/1.png"><img loading="lazy" class="alignnone size-full wp-image-264" title="1" src="http://abap-blog.ru/wp-content/uploads/2012/01/1.png" alt="" width="167" height="222" /></a></p>
<p>Периоды выполнения задаются с помощью класса:<strong> cl_bp_job_periodicity. </strong>Для задачи необходимо определить шаблон шага, шаблоны могут быть 3х видов. Создание класса шаблона выполняется с помощью статических методов класса <strong>cl_bp_job_factory. </strong>Далее пример кода запускающего задачу и определяющего ее периодичность:</p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT zbg_api.

DATA:
  " Объект определяющий периодическое задание
  lo_periodicjob  TYPE REF TO cl_bp_periodic_job,
  " Объект настраивающий периодичность запуска задачи
  lo_periodicity  TYPE REF TO cl_bp_job_periodicity,
  " Триггер определяющий событие по которому необходимо запускать задачу
  lo_trigger      TYPE REF TO cl_tc_date_trigger,
  lv_time         TYPE sy-uzeit,
  " Объект шаблона задания
  lo_abapjob_tmpl TYPE REF TO cl_bp_abap_job_template.

" Создаем шаблон ABAP задачи
lo_abapjob_tmpl = cl_bp_job_factory=&gt;make_abap_job_tmpl( ).
" Создаем объект периодической задачи
lo_periodicjob = cl_bp_job_factory=&gt;make_periodic_job( ).
" Создаем триггер
lo_trigger = cl_tc_trigger_factory=&gt;make_date_trigger( ).
" Создаем класс настройщик периодичности
CREATE OBJECT lo_periodicity.

" Настриваем шаблон, планируем к запуску
lo_abapjob_tmpl-&gt;set_name( i_name = 'ZTEST' ).
lo_abapjob_tmpl-&gt;set_report( i_report = 'ZREPORT' ).
lo_abapjob_tmpl-&gt;set_variant( i_variant = 'TEST' ).
lo_abapjob_tmpl-&gt;set_language( i_language = sy-langu ).
lo_abapjob_tmpl-&gt;set_effective_user( i_authcknam = sy-uname ).
lo_abapjob_tmpl-&gt;plan_job( ).

" Настраиваем переодичность выполнения
lo_periodicity-&gt;set_event_periodic( ).
" Запускать ежедневно:
lo_periodicity-&gt;set_num_days( i_days = 1 ).

" Настраиваем триггер
lo_trigger-&gt;set_sdlstrtdt( i_sdlstrtdt = sy-datum ).
lv_time = sy-uzeit + 5.
lo_trigger-&gt;set_sdlstrttm( i_sdlstrttm = lv_time ).

" Настраиваем переодически выполняемую задачу
lo_periodicjob-&gt;set_name( i_name = 'ZTEST' ).
lo_periodicjob-&gt;set_trg_type( i_trg_type = 'DATE' ).
lo_periodicjob-&gt;attach_job_template( i_job_template = lo_abapjob_tmpl ).
lo_periodicjob-&gt;attach_periodicity( i_periodicity = lo_periodicity ).

" Запускаем
lo_periodicjob-&gt;release_job( i_trg_obj = lo_trigger ).</pre><p><strong>Обратите внимание что обработка исключений опущена специально, чтобы не увеличивать размер кода.</strong></p><p>The post <a href="https://abap-blog.ru/osnovy-abap/fonovye-zadaniya-ispolzuya-abap-objects-chast-2/">Фоновые задания используя ABAP Objects (Часть 2)</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/osnovy-abap/fonovye-zadaniya-ispolzuya-abap-objects-chast-2/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
