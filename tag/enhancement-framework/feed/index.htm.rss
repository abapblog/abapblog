<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Enhancement Framework | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/enhancement-framework/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 06:10:23 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>Оптимальное использование user (customer) exit&#8217;ов с помощью вызова BADI</title>
		<link>https://abap-blog.ru/enhancements/optimalnoe-ispolzovanie-eser-exitov-s-pomoshhyu-vyzova-badi/</link>
					<comments>https://abap-blog.ru/enhancements/optimalnoe-ispolzovanie-eser-exitov-s-pomoshhyu-vyzova-badi/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Sun, 30 Mar 2014 08:59:48 +0000</pubDate>
				<category><![CDATA[Расширения]]></category>
		<category><![CDATA[BADI]]></category>
		<category><![CDATA[Enhancement Framework]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=1869</guid>

					<description><![CDATA[<p>Очень часто в коде какого-либо user (customer) exit можно встретить кучу разных ветвлений, одно вставил программист Петя по задаче X, другое вставил программист Вася по задаче Y. Со временем подобный код становится плохо читаемым. Для удобства его восприятия можно воспользоваться современными BADI, основанными на Enhancement Framework. Суть данного удобства заключается в том, что вместо кучи [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/enhancements/optimalnoe-ispolzovanie-eser-exitov-s-pomoshhyu-vyzova-badi/">Оптимальное использование user (customer) exit’ов с помощью вызова BADI</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>Очень часто в коде какого-либо user (customer) exit можно встретить кучу разных ветвлений, одно вставил программист Петя по задаче X, другое вставил программист Вася по задаче Y. Со временем подобный код становится плохо читаемым. Для удобства его восприятия можно воспользоваться современными BADI, основанными на Enhancement Framework.</p>
<p>Суть данного удобства заключается в том, что вместо кучи ветвлений и нагромождения кода в user exit вызывается свой BADI, конкретные реализации которого являются отдельными друг от друга объектами, каждый из которых ведется и описывается так же отдельно.</p>
<p>Ниже рассмотрен небольшой пример того, как создать и вызвать реализацию BADI.</p>
<p><span id="more-1869"></span></p>
<ul>
<li>Заходим в транзакцию SE18 и создаем точку расширения:</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/1.png"><img loading="lazy" class="alignnone size-full wp-image-1870" src="http://abap-blog.ru/wp-content/uploads/2014/03/1.png" alt="1" width="417" height="129" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/1.png 417w, https://abap-blog.ru/wp-content/uploads/2014/03/1-300x92.png 300w" sizes="(max-width: 417px) 100vw, 417px" /></a></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/2.png"><img loading="lazy" class="alignnone size-full wp-image-1871" src="http://abap-blog.ru/wp-content/uploads/2014/03/2.png" alt="2" width="644" height="164" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/2.png 644w, https://abap-blog.ru/wp-content/uploads/2014/03/2-300x76.png 300w" sizes="(max-width: 644px) 100vw, 644px" /></a></p>
<ul>
<li>Создаем BADI для нашего user exit’a</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/3.png"><img loading="lazy" class="alignnone size-full wp-image-1872" src="http://abap-blog.ru/wp-content/uploads/2014/03/3.png" alt="3" width="564" height="205" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/3.png 564w, https://abap-blog.ru/wp-content/uploads/2014/03/3-300x109.png 300w" sizes="(max-width: 564px) 100vw, 564px" /></a></p>
<p>Убедимся, что создаваемое BADI является многоразовым, т.е. допускается сколько угодно его реализаций:</p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/4.png"><img loading="lazy" class="alignnone size-full wp-image-1873" src="http://abap-blog.ru/wp-content/uploads/2014/03/4.png" alt="4" width="629" height="158" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/4.png 629w, https://abap-blog.ru/wp-content/uploads/2014/03/4-300x75.png 300w" sizes="(max-width: 629px) 100vw, 629px" /></a></p>
<ul>
<li> После создания BADI, определяем его интерфейс. В интерфейсе описываем единственный метод some_exit, метод будет получать данные из user  exit’а. Далее, когда будут создаваться реализации нашего BADI, программисты сами будут решать, что делать с этими данными.</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/5.png"><img loading="lazy" class="alignnone size-full wp-image-1874" src="http://abap-blog.ru/wp-content/uploads/2014/03/5.png" alt="5" width="786" height="310" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/5.png 786w, https://abap-blog.ru/wp-content/uploads/2014/03/5-300x118.png 300w" sizes="(max-width: 786px) 100vw, 786px" /></a></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/6.png"><img loading="lazy" class="alignnone size-full wp-image-1875" src="http://abap-blog.ru/wp-content/uploads/2014/03/6.png" alt="6" width="668" height="142" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/6.png 668w, https://abap-blog.ru/wp-content/uploads/2014/03/6-300x63.png 300w" sizes="(max-width: 668px) 100vw, 668px" /></a></p>
<ul>
<li> Добавим единственный параметр:</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/7.png"><img loading="lazy" class="alignnone size-full wp-image-1876" src="http://abap-blog.ru/wp-content/uploads/2014/03/7.png" alt="7" width="856" height="162" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/7.png 856w, https://abap-blog.ru/wp-content/uploads/2014/03/7-300x56.png 300w" sizes="(max-width: 856px) 100vw, 856px" /></a></p>
<ul>
<li> После определения BADI можно приступить к его вызову в коде user exit’a. Далее будет показано как вызвать BADI в тестовой программе (вместо вызова в коде user exit):</li>
</ul>
<p></p><pre class="urvanov-syntax-highlighter-plain-tag">REPORT ZTEST_BADI.

DATA:
  go_badi_some_exit TYPE REF TO ZBADI_SOME_EXIT,
  gv_data TYPE String.

START-OF-SELECTION.
  gv_data = 'Данные EXIT до вызова BADI'.

  GET BADI go_badi_some_exit.

  CALL BADI go_badi_some_exit-&gt;some_exit
    CHANGING
      ch_data = gv_data.

  WRITE gv_data.</pre><p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/8.png"><img loading="lazy" class="alignnone size-full wp-image-1877" src="http://abap-blog.ru/wp-content/uploads/2014/03/8.png" alt="8" width="229" height="65" /></a></p>
<ul>
<li> Как видно после запуска данные остались неизменными, создадим реализацию расширения и BADI:</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/9.png"><img loading="lazy" class="alignnone size-full wp-image-1878" src="http://abap-blog.ru/wp-content/uploads/2014/03/9.png" alt="9" width="691" height="185" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/9.png 691w, https://abap-blog.ru/wp-content/uploads/2014/03/9-300x80.png 300w" sizes="(max-width: 691px) 100vw, 691px" /></a></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/10.png"><img loading="lazy" class="alignnone size-full wp-image-1879" src="http://abap-blog.ru/wp-content/uploads/2014/03/10.png" alt="10" width="756" height="142" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/10.png 756w, https://abap-blog.ru/wp-content/uploads/2014/03/10-300x56.png 300w" sizes="(max-width: 756px) 100vw, 756px" /></a></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/11.png"><img loading="lazy" class="alignnone size-full wp-image-1880" src="http://abap-blog.ru/wp-content/uploads/2014/03/11.png" alt="11" width="665" height="142" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/11.png 665w, https://abap-blog.ru/wp-content/uploads/2014/03/11-300x64.png 300w" sizes="(max-width: 665px) 100vw, 665px" /></a></p>
<ul>
<li> Определим метод some_exit:</li>
</ul>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/12.png"><img loading="lazy" class="alignnone size-full wp-image-1881" src="http://abap-blog.ru/wp-content/uploads/2014/03/12.png" alt="12" width="907" height="181" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/12.png 907w, https://abap-blog.ru/wp-content/uploads/2014/03/12-300x59.png 300w" sizes="(max-width: 907px) 100vw, 907px" /></a></p>
<p><a href="http://abap-blog.ru/wp-content/uploads/2014/03/13.png"><img loading="lazy" class="alignnone size-full wp-image-1882" src="http://abap-blog.ru/wp-content/uploads/2014/03/13.png" alt="13" width="549" height="154" srcset="https://abap-blog.ru/wp-content/uploads/2014/03/13.png 549w, https://abap-blog.ru/wp-content/uploads/2014/03/13-300x84.png 300w" sizes="(max-width: 549px) 100vw, 549px" /></a></p>
<p>Убедимся, что все объекты были активированы, вызовем наш тестовый отчёт еще раз. Как видно из результата мы изменили данные в реализации BADI.</p><p>The post <a href="https://abap-blog.ru/enhancements/optimalnoe-ispolzovanie-eser-exitov-s-pomoshhyu-vyzova-badi/">Оптимальное использование user (customer) exit’ов с помощью вызова BADI</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/enhancements/optimalnoe-ispolzovanie-eser-exitov-s-pomoshhyu-vyzova-badi/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
	</channel>
</rss>
