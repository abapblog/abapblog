<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>паттерны проектирования | ABAP Blog</title>
	<atom:link href="https://abap-blog.ru/tag/patterny-proektirovaniya/feed/" rel="self" type="application/rss+xml" />
	<link>https://abap-blog.ru</link>
	<description>Все о разработке в решениях от SAP</description>
	<lastBuildDate>Tue, 02 Mar 2021 06:14:48 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>
	<item>
		<title>Паттерны проектирования в ABAP примерах</title>
		<link>https://abap-blog.ru/osnovy-abap/oop/patterny-proektirovaniya-v-abap-primerax/</link>
					<comments>https://abap-blog.ru/osnovy-abap/oop/patterny-proektirovaniya-v-abap-primerax/#comments</comments>
		
		<dc:creator><![CDATA[Astrafox]]></dc:creator>
		<pubDate>Sun, 08 May 2016 06:00:36 +0000</pubDate>
				<category><![CDATA[ABAP Objects]]></category>
		<category><![CDATA[паттерны проектирования]]></category>
		<category><![CDATA[шаблоны проектирования]]></category>
		<guid isPermaLink="false">http://abap-blog.ru/?p=2729</guid>

					<description><![CDATA[<p>Ранее в блоге уже упоминались паттерны проектирования (GoF), однако их рассмотрение было несколько скомканным и не полным, в данной статье они будут рассмотрены более подробно. Изучая паттерны, не стоит считать их неким священным Граалем, способным решить все задачи, они лишь инструмент, который нужно еще и грамотно применить. Главное, что нужно оценивать это то, какую проблему [&#8230;]</p>
<p>The post <a href="https://abap-blog.ru/osnovy-abap/oop/patterny-proektirovaniya-v-abap-primerax/">Паттерны проектирования в ABAP примерах</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p>Ранее в блоге уже упоминались паттерны проектирования (GoF), однако их рассмотрение было несколько скомканным и не полным, в данной статье они будут рассмотрены более подробно.</p>
<p><span id="more-2729"></span></p>
<p>Изучая паттерны, не стоит считать их неким священным Граалем, способным решить все задачи, они лишь инструмент, который нужно еще и грамотно применить. Главное, что нужно оценивать это то, какую проблему решает тот или иной паттерн и для чего он создан. Бездумное применение паттернов лишь внесёт дополнительную сложность в Ваше решение.</p>
<p>Большинство паттернов имеют свою каноническую реализацию, а есть и упрощённые/усложнённые варианты. В данной статье не будут рассматриваться все реализации, более подробную информацию Вы сможете найти в соответствующей литературе и курсах, ссылки на которые будут в конце статьи.</p>
<p>&nbsp;</p>
<h4>Порождающие паттерны (Creational patterns)</h4>
<p>&nbsp;</p>
<p>За конструирование объектов в ООП языках обычно отвечает конструктор и клиент, вызывающий конструктор нужного ему класса. Однако бывают случаи, когда заранее тип объекта не известен или использование конструктора напрямую является неудобным или невозможным. Порождающие паттерны помогают решить типовые проблемы создания объектов.</p>
<p>К порождающим паттернам относятся:</p>
<ul>
<li><a href="http://abap-blog.ru/oop/abstraktnaya-fabrika/">Абстрактная фабрика</a> (Abstract factory)</li>
<li><a href="http://abap-blog.ru/oop/fabrichnyj-metod/">Фабричный метод</a> (Factory method)</li>
<li><a href="http://abap-blog.ru/oop/stroitel/">Строитель</a> (Builder)</li>
<li><a href="http://abap-blog.ru/oop/prototip/">Прототип</a> (Prototype)</li>
<li><a href="http://abap-blog.ru/oop/odinochka/">Одиночка</a> (Singleton)</li>
</ul>
<h4>Поведенческие паттерны (Behavioral patterns)</h4>
<p>&nbsp;</p>
<p>Поведенческие шаблоны проектирования определяют общие закономерности связей между объектами, реализующими их. Следование этим шаблонам уменьшает связность системы и облегчает коммуникацию между объектами, что увеличивает гибкость программного продукта.</p>
<p>К поведенческим паттернам относятся:</p>
<ul>
<li><a href="http://abap-blog.ru/oop/strategiya/">Стратегия </a>(Strategy)</li>
<li><a href="http://abap-blog.ru/oop/shablonnyj-metod-template-method/">Шаблонный метод </a>(Template method)</li>
<li><a href="http://abap-blog.ru/oop/posrednik-mediator/">Посредник </a>(Mediator)</li>
<li><a href="http://abap-blog.ru/oop/komanda-command-2/">Команда </a>(Command)</li>
<li><a href="http://abap-blog.ru/oop/cepochka-otvetstvennosti-chain-of-responsibility/">Цепочка обязанностей </a>(Chain of Responsibility)</li>
<li><a href="http://abap-blog.ru/oop/interpretator-interpreter/">Интерпретатор </a>(Interpreter)</li>
<li><a href="http://abap-blog.ru/oop/iterator-iterator/">Итератор </a>(Iterator)</li>
<li><a href="http://abap-blog.ru/oop/xranitel-memento/">Хранитель </a>(Memento)</li>
<li><a href="http://abap-blog.ru/oop/nablyudatel-observer/">Наблюдатель </a>(Observer)</li>
<li><a href="http://abap-blog.ru/oop/sostoyanie-state/">Состояние </a>(State)</li>
<li><a href="http://abap-blog.ru/oop/posetitel-visitor/">Посетитель </a>(Visitor)</li>
<li>&#8230;</li>
</ul>
<p>&nbsp;</p>
<h4>Структурные паттерны (Structural patterns)</h4>
<p>&nbsp;</p>
<p>Структурные паттерны рассматривают вопросы о компоновке системы на основе классов и объектов. При этом могут использоваться следующие механизмы:</p>
<ul>
<li>Наследование, когда базовый класс определяет интерфейс, а подклассы &#8212; реализацию. Структуры на основе наследования получаются статичными.</li>
<li>Композиция, когда структуры строятся путем объединения объектов некоторых классов. Композиция позволяет получать структуры, которые можно изменять во время выполнения.</li>
</ul>
<p>К структурным паттернам относятся:</p>
<ul>
<li><a href="http://abap-blog.ru/oop/adapter-adapter/">Адаптер </a>(Adapter)</li>
<li><a href="http://abap-blog.ru/oop/most-bridge/">Мост </a>(Bridge)</li>
<li><a href="http://abap-blog.ru/oop/komponovshhik-composite/">Компоновщик </a>(Composite)</li>
<li><a href="http://abap-blog.ru/oop/dekorator-decorator-wrapper/">Декоратор </a>(Decorator)</li>
<li><a href="http://abap-blog.ru/oop/fasad-facade/">Фасад </a>(Facade)</li>
<li><a href="http://abap-blog.ru/oop/prisposoblenec/">Приспособленец </a>(Flyweight)</li>
<li><a href="http://abap-blog.ru/oop/zamestitel-proxy/">Заместитель </a>(Proxy)</li>
<li>&#8230;</li>
</ul>
<p>&nbsp;</p>
<h4>Источники</h4>
<p>&nbsp;</p>
<ol>
<li>Youtube канал <a href="https://www.youtube.com/channel/UCVbz7l0COUdLupcY4YtYH0w">Сергея Немчинского</a>.</li>
<li>Видео курс Александра Шевчука на  <a href="http://itvdn.com/ru/patterns">ITVDN</a>.</li>
<li><a href="http://www.ozon.ru/context/detail/id/31789305/">Паттерны проектирования на платформе .NET</a> от Сергея Теплякова. Пожалуй лучшая книга по теме.</li>
<li>Видео курс Design Patterns Library на <a href="https://www.pluralsight.com/courses/patterns-library">Pluralsight</a>.</li>
<li><a href="https://habrahabr.ru/post/136766/">Статья </a>о паттернах в ООП метафорах.</li>
<li><a href="http://www.ozon.ru/context/detail/id/2457392/">Приемы объектно-ориентированного проектирования. Паттерны проектирования</a>.</li>
<li>Э. Фриман. <a href="http://www.ozon.ru/context/detail/id/31079082/">Паттерны проектирования.</a></li>
<li>Wiki. <a href="https://ru.m.wikipedia.org/wiki/Шаблон_проектирования">Шаблоны проектирования</a>.</li>
</ol><p>The post <a href="https://abap-blog.ru/osnovy-abap/oop/patterny-proektirovaniya-v-abap-primerax/">Паттерны проектирования в ABAP примерах</a> first appeared on <a href="https://abap-blog.ru">ABAP Blog</a>.</p>]]></content:encoded>
					
					<wfw:commentRss>https://abap-blog.ru/osnovy-abap/oop/patterny-proektirovaniya-v-abap-primerax/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
	</channel>
</rss>
